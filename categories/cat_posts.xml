<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life (文章分類：posts)</title><link>https://github.com/mariolong/mariolong.github.io/</link><description></description><atom:link href="https://mariolong.github.io/categories/cat_posts.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Mon, 17 Sep 2018 06:29:08 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>post install for htpc</title><link>https://mariolong.github.io/posts/post-install-for-htpc/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
htpc
&lt;/p&gt;

&lt;div id="outline-container-org29bd408" class="outline-2"&gt;
&lt;h2 id="org29bd408"&gt;kodi&lt;/h2&gt;
&lt;/div&gt;


&lt;div id="outline-container-org115dd52" class="outline-2"&gt;
&lt;h2 id="org115dd52"&gt;wifi&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org115dd52"&gt;
&lt;p&gt;
wifi-menu
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S wpa_supplicant dialog
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
setup wifi using wifi-menu
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link
&amp;lt;interface&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wifi-menu &amp;lt;interface&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;netctl start &amp;lt;wifi-service&amp;gt;
netctl &lt;span class="nb"&gt;enable&lt;/span&gt; &amp;lt;wifi-service&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org271abc8" class="outline-2"&gt;
&lt;h2 id="org271abc8"&gt;auto mount removable device by udiskie&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org271abc8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S udiskie
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-orgbda03d6" class="outline-2"&gt;
&lt;h2 id="orgbda03d6"&gt;issues&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbda03d6"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org18fc2f3" class="outline-3"&gt;
&lt;h3 id="org18fc2f3"&gt;alsa&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org18fc2f3"&gt;
&lt;pre class="example"&gt;
snd_.._intel index = 1
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9df09dc" class="outline-3"&gt;
&lt;h3 id="org9df09dc"&gt;default.config&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org9df09dc"&gt;
&lt;pre class="example"&gt;
need_root_right = no
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><guid>https://mariolong.github.io/posts/post-install-for-htpc/</guid><pubDate>Fri, 29 Dec 2017 09:14:13 GMT</pubDate></item><item><title>hostapd</title><link>https://mariolong.github.io/posts/hostapd/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;先前寫過的 &lt;a class="reference external" href="https://mariolong.github.io/posts/archlinux-hostapd-netcfg/"&gt;wireless AP 設定 （hostapd+netcfg/netctl）&lt;/a&gt; ，經過這些天的測試，我發現 netcfg/netctl 是沒有必要的。&lt;/p&gt;
&lt;p&gt;上一篇的 hostapd 和 dnsmasq 設定是可用的。但是用 &lt;tt class="docutils literal"&gt;netctl enable hostapd&lt;/tt&gt; 是無法在開機時自動啟動「無線 AP」功能。
我想是因為 netctl 和 iptables 不合吧？會出現 xtables lock 的問題，不知道原因。&lt;/p&gt;
&lt;p&gt;後來仔細想想，我要做的不過是用 systemd 去設定 iptables，為何一定要用 netctl？
不如自己寫一個 systemd 的 service，用來設定 iptables 就好了。&lt;/p&gt;
&lt;p&gt;結論是，成功。現在開機就可自動把無線 AP 開啟。記錄一下這幾個設定檔備查。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安裝&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
$ yaourt -S hostapd dnsmasq wpa_supplicant
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;div class="section" id="ip-link"&gt;
&lt;h3&gt;ip link&lt;/h3&gt;
&lt;p&gt;先用 &lt;tt class="docutils literal"&gt;ip link&lt;/tt&gt; 查 wifi interface&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    2: enp3s0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000
    link/ether 00:26:18:14:61:03 brd ff:ff:ff:ff:ff:ff
    3: wlp0s18f2u3: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
     link/ether 20:cf:30:a1:f9:f2 brd ff:ff:ff:ff:ff:ff
&lt;/pre&gt;
&lt;p&gt;其中第 3 個 wlp0s18f2u3 即為我的 wifi 卡。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hostapd"&gt;
&lt;h3&gt;hostapd&lt;/h3&gt;
&lt;p&gt;就是這個程式，讓我的無線網卡，變身為無線 AP。&lt;/p&gt;
&lt;p&gt;配置檔 &lt;tt class="docutils literal"&gt;/etc/hostapd/hostapd.conf&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-1"&gt;&lt;/a&gt;interface=wlp0s18f2u3
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-2"&gt;&lt;/a&gt;ssid=xxxxxxxx
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-3"&gt;&lt;/a&gt;hw_mode=g
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-4"&gt;&lt;/a&gt;channel=1
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-5"&gt;&lt;/a&gt;wpa=2
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-6"&gt;&lt;/a&gt;wpa_psk=b619ecf4c68e7d688e1a29cf2809ec3556a289eb655b859xxxxxxxxxx3296f18
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-7"&gt;&lt;/a&gt;wpa_key_mgmt=WPA-PSK
&lt;a name="rest_code_520c369b9cb04a37a160dc775a686277-8"&gt;&lt;/a&gt;rsn_pairwise=CCMP
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="dnsmasq"&gt;
&lt;h3&gt;dnsmasq&lt;/h3&gt;
&lt;p&gt;配置檔 &lt;tt class="docutils literal"&gt;/etc/dnsmasq.conf&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f42c9341676e43608cc8b5f27bf89770-1"&gt;&lt;/a&gt;port=0
&lt;a name="rest_code_f42c9341676e43608cc8b5f27bf89770-2"&gt;&lt;/a&gt;interface=wlp0s18f2u3
&lt;a name="rest_code_f42c9341676e43608cc8b5f27bf89770-3"&gt;&lt;/a&gt;listen-address=192.168.199.254
&lt;a name="rest_code_f42c9341676e43608cc8b5f27bf89770-4"&gt;&lt;/a&gt;dhcp-range=192.168.199.101,192.168.199.150,12h
&lt;a name="rest_code_f42c9341676e43608cc8b5f27bf89770-5"&gt;&lt;/a&gt;dhcp-option=6,168.95.192.1,168.95.1.1
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="wifiip"&gt;
&lt;h3&gt;wifiip&lt;/h3&gt;
&lt;p&gt;檔名： &lt;tt class="docutils literal"&gt;/usr/bin/wifiip&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;設定 nat 和防火牆的 script，注意要用絕對路徑，不然開機時期，會找不到相對應的程式執行。&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-1"&gt;&lt;/a&gt;#!/bin/bash
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-3"&gt;&lt;/a&gt;interface=wlp0s18f2u3
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-5"&gt;&lt;/a&gt;iptables=/usr/bin/iptables
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-6"&gt;&lt;/a&gt;ifconfig=/usr/bin/ifconfig
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-7"&gt;&lt;/a&gt;sysctl=/usr/bin/sysctl
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-9"&gt;&lt;/a&gt;wifi_on() {
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-10"&gt;&lt;/a&gt;    ${iptables} -I FORWARD -s 192.168.199.0/24 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-11"&gt;&lt;/a&gt;    ${iptables} -I FORWARD -d 192.168.199.0/24 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-12"&gt;&lt;/a&gt;    ${iptables} -t nat -I POSTROUTING -o ppp0 -s 192.168.199.0/24 -j MASQUERADE
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-13"&gt;&lt;/a&gt;    ${sysctl} -w net.ipv4.ip_forward=1
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-14"&gt;&lt;/a&gt;    ${iptables} -I INPUT -i ${interface} -p udp --dport 67 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-15"&gt;&lt;/a&gt;    ${ifconfig} ${interface} 192.168.199.1 netmask 255.255.255.0
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-16"&gt;&lt;/a&gt;}
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-18"&gt;&lt;/a&gt;wifi_off() {
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-19"&gt;&lt;/a&gt;    ${iptables} -D FORWARD -s 192.168.199.0/24 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-20"&gt;&lt;/a&gt;    ${iptables} -D FORWARD -d 192.168.199.0/24 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-21"&gt;&lt;/a&gt;    ${iptables} -t nat -D POSTROUTING -o ppp0 -s 192.168.199.0/24 -j MASQUERADE
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-22"&gt;&lt;/a&gt;    ${sysctl} -w net.ipv4.ip_forward=0
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-23"&gt;&lt;/a&gt;    ${iptables} -D INPUT -i ${interface} -p udp --dport 67 -j ACCEPT
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-24"&gt;&lt;/a&gt;    ${ifconfig} ${interface} down
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-25"&gt;&lt;/a&gt;}
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-26"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-27"&gt;&lt;/a&gt;usage() {
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-28"&gt;&lt;/a&gt;  echo "USAGE: wifiip [on|off]"
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-29"&gt;&lt;/a&gt;}
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-30"&gt;&lt;/a&gt;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-31"&gt;&lt;/a&gt;if (( $# &amp;gt; 0 )); then
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-32"&gt;&lt;/a&gt;  case "$1" in
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-33"&gt;&lt;/a&gt;    "on")  wifi_on;;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-34"&gt;&lt;/a&gt;    "off") wifi_off;;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-35"&gt;&lt;/a&gt;    *)     usage
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-36"&gt;&lt;/a&gt;           exit 64;;
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-37"&gt;&lt;/a&gt;  esac
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-38"&gt;&lt;/a&gt;  exit 0
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-39"&gt;&lt;/a&gt;else
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-40"&gt;&lt;/a&gt;  usage
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-41"&gt;&lt;/a&gt;return 64
&lt;a name="rest_code_ca4d50f9f092475589d6c9e5f3aa60bb-42"&gt;&lt;/a&gt;fi
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="wifiip-service"&gt;
&lt;h3&gt;wifiip.service&lt;/h3&gt;
&lt;p&gt;簡單地寫一下，可用就好。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Unit]
Description=wifi ap via usb dongle
After=hostapd.service dnsmasq.service

[Service]
ExecStart=/usr/bin/wifiip on

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;命令別名&lt;/h3&gt;
&lt;p&gt;在 &lt;tt class="docutils literal"&gt;.bashrc&lt;/tt&gt; 中設定別名&lt;/p&gt;
&lt;pre class="literal-block"&gt;
alias wifion='sudo /bin/wifiip on; sudo systemctl start hostapd; sudo systemctl start dnsmasq'
alias wifioff='sudo systemctl stop hostapd; sudo systemctl stop dnsmasq; sudo /bin/wifiip off'
&lt;/pre&gt;
&lt;p&gt;只要在命令列中執行 &lt;tt class="docutils literal"&gt;wifion/wifioff&lt;/tt&gt; 隨時都可以開啟/關閉「無線 AP」。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="daemon"&gt;
&lt;h3&gt;開機時自動啟動 daemon&lt;/h3&gt;
&lt;p&gt;執行：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo systemctl enable hostapd
$ sudo systemctl enable dnsmasq
$ sudo systemctl enable wifiip
&lt;/pre&gt;
&lt;p&gt;分別開啟這幾個服務，重開機時就可以看到成果囉。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="wpa"&gt;
&lt;h2&gt;註：wpa 的取得&lt;/h2&gt;
&lt;p&gt;參考：&lt;a class="reference external" href="https://wiki.archlinux.org/index.php/WPA_supplicant"&gt;https://wiki.archlinux.org/index.php/WPA_supplicant&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;安裝：&lt;/h3&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_b36e710d2cbe4372a7bb7cbb5a7d0326-1"&gt;&lt;/a&gt;yaourt -S wpa_supplicant
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;執行：&lt;/h3&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_a401ff6690584f09826ce15d1c682c1b-1"&gt;&lt;/a&gt;$ wpa_passphrase essid passphrase
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;結果&lt;/h3&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c983496769744f56b1b316d3f2a948fc-1"&gt;&lt;/a&gt;network={
&lt;a name="rest_code_c983496769744f56b1b316d3f2a948fc-2"&gt;&lt;/a&gt;    ssid="essid"
&lt;a name="rest_code_c983496769744f56b1b316d3f2a948fc-3"&gt;&lt;/a&gt;    #psk="passphrase"
&lt;a name="rest_code_c983496769744f56b1b316d3f2a948fc-4"&gt;&lt;/a&gt;    psk=f5d1c49e15e679bebe385c37648d4141bc5c9297796a8a185d7bc5ac62f954e3
&lt;a name="rest_code_c983496769744f56b1b316d3f2a948fc-5"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://mariolong.github.io/posts/hostapd/</guid><pubDate>Thu, 23 Oct 2014 02:18:55 GMT</pubDate></item><item><title>vim: my python IDE</title><link>https://mariolong.github.io/posts/vim-my-python-ide/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;參考&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sontek.net/blog/detail/turning-vim-into-a-modern-python-ide"&gt;Turning vim into a modern python ide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用 vim 打造自己專屬的 python IDE。聽起來很累人，可是「男人要用男人自己的刀」，男人就是要用 vim。&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;*Update&lt;/strong&gt; 改用 emacs 了 &lt;a class="reference external" href="https://mariolong.github.io/posts/emacsjiao-xue-zhi-yin/"&gt;emacs 教學指引&lt;/a&gt; ，比較「帥」。&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="install"&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;在裝 vim 前，先改 /etc/pacman.conf，加入&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[herecura-stable]
Server = http://repo.herecura.be/herecura-stable/$arch
&lt;/pre&gt;
&lt;p&gt;然後再裝這個 qt 版本。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
yaourt -Syua
yaourt vim-gvim-qt
&lt;/pre&gt;
&lt;p&gt;為何我裝這個 qt 版？因為我現在用的是 KDE。&lt;/p&gt;
&lt;div class="section" id="python"&gt;
&lt;h3&gt;python 摺疊&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; 加上&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set foldmethod=indent
set foldlevel=99
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;文法檢查與高亮&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
sudo pip install pyflakes pep8
&lt;/pre&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; 加上&lt;/p&gt;
&lt;blockquote&gt;
let g:pyflakes_use_quickfix = 0
let g:pep8_map='&amp;lt;leader&amp;gt;8'&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;補完&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
Bundle ''
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;註解&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
Bundle 'scrooloose/nerdcommenter'

Usage
The following key mappings are provided by default (there is also a menu provided that contains menu items corresponding to all the below mappings):

Most of the following mappings are for normal/visual mode only. The |NERDComInsertComment| mapping is for insert mode only.

[count]&amp;lt;leader&amp;gt;cc |NERDComComment|
Comment out the current line or text selected in visual mode.

[count]&amp;lt;leader&amp;gt;cn |NERDComNestedComment|
    Same as &amp;lt;leader&amp;gt;cc but forces nesting.
....\

Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa.

[count]&amp;lt;leader&amp;gt;cm |NERDComMinimalComment|
Comments the given lines using only one set of multipart delimiters.

[count]&amp;lt;leader&amp;gt;ci |NERDComInvertComment|
Toggles the comment state of the selected line(s) individually.

[count]&amp;lt;leader&amp;gt;cs |NERDComSexyComment|
Comments out the selected lines ``sexily``

[count]&amp;lt;leader&amp;gt;cy |NERDComYankComment|
Same as &amp;lt;leader&amp;gt;cc except that the commented line(s) are yanked first.

&amp;lt;leader&amp;gt;c$ |NERDComEOLComment|
Comments the current line from the cursor to the end of line.

&amp;lt;leader&amp;gt;cA |NERDComAppendComment|
Adds comment delimiters to the end of line and goes into insert mode between them.

|NERDComInsertComment|
Adds comment delimiters at the current cursor position and inserts between. Disabled by default.

&amp;lt;leader&amp;gt;ca |NERDComAltDelim|
Switches to the alternative set of delimiters.

[count]&amp;lt;leader&amp;gt;cl
[count]&amp;lt;leader&amp;gt;cb |NERDComAlignedComment|
Same as |NERDComComment| except that the delimiters are aligned down the left side (&amp;lt;leader&amp;gt;cl) or both sides (&amp;lt;leader&amp;gt;cb).

取消註解
[count]&amp;lt;leader&amp;gt;cu |NERDComUncommentLine|
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="git"&gt;
&lt;h3&gt;整合 git&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.vimrc&lt;/span&gt;&lt;/tt&gt; 加上&lt;/p&gt;
&lt;pre class="literal-block"&gt;
%{fugitive#statusline()}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="file-browser"&gt;
&lt;h3&gt;檔案系統瀏覽器 file browser&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
" NERDTree (better file browser) toggle
map &amp;lt;F3&amp;gt; :NERDTreeToggle&amp;lt;CR&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><category>vim</category><guid>https://mariolong.github.io/posts/vim-my-python-ide/</guid><pubDate>Tue, 22 Apr 2014 02:18:52 GMT</pubDate></item><item><title>Install Arch Linux</title><link>https://mariolong.github.io/posts/install-arch-linux/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;原則上，跟着 &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Beginners'_Guide"&gt;Beginners' Guide&lt;/a&gt; 做即可。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mariolong.github.io/posts/install-arch-linux/"&gt; more …&lt;/a&gt; (尚餘 4 分鐘)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://mariolong.github.io/posts/install-arch-linux/</guid><pubDate>Fri, 01 Nov 2013 01:31:11 GMT</pubDate></item><item><title>LVM on Archlinux</title><link>https://mariolong.github.io/posts/LVM-on-archlinux/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;參考 &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/LVM"&gt;Archlinux wiki&lt;/a&gt;，
因爲這篇 wiki 中提到了 &lt;a class="reference external" href="https://mariolong.github.io/posts/btrfs/"&gt;btrfs&lt;/a&gt; ，花了一些時間去研究它，結果不好用。&lt;/p&gt;
&lt;p&gt;還是回來用 LVM，我只是要他的可擴充性：硬碟不夠時，再加一顆就好。&lt;/p&gt;
&lt;div class="section" id="lvm"&gt;
&lt;h2&gt;建立 LVM&lt;/h2&gt;
&lt;div class="section" id="pv"&gt;
&lt;h3&gt;pv 階段&lt;/h3&gt;
&lt;p&gt;用 gparted 設定，將要用的分區格式化成 lvm2 pv 即可。&lt;/p&gt;
&lt;p&gt;pvdisplay 看看:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo pvdisplay
--- Physical volume ---
PV Name               /dev/sdb8
VG Name               VG00
PV Size               15.04 GiB / not usable 0
Allocatable           yes (but full)
PE Size               4.00 MiB
Total PE              3849
Free PE               0
Allocated PE          3849
PV UUID               76qMPb-k4bl-jHVi-w0d6-DqEO-ffpq-l2jnpU

--- Physical volume ---
PV Name               /dev/sdb9
VG Name               VG00
PV Size               15.13 GiB / not usable 2.00 MiB
Allocatable           yes (but full)
PE Size               4.00 MiB
Total PE              3874
Free PE               0
Allocated PE          3874
PV UUID               nuSNwv-w4kq-VOrG-7zSI-jom6-MDTY-01yZps
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="vg"&gt;
&lt;h3&gt;vg 階段&lt;/h3&gt;
&lt;p&gt;建立以 VG00 爲名的 VG:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lsblk -f
$ vgcreate VG00 /dev/sdb8
$ vgextend VG00 /dev/sdb9
$ vgdisplay
--- Volume group ---
  VG Name               VG00
  System ID
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               30.17 GiB
  PE Size               4.00 MiB
  Total PE              7723
  Alloc PE / Size       7723 / 30.17 GiB
  Free  PE / Size       0 / 0
  VG UUID               BslpFB-0DUQ-PHdf-BAIj-o7WC-fWQ0-7PkJNe
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="lv"&gt;
&lt;h3&gt;lv 階段&lt;/h3&gt;
&lt;p&gt;建立以 LV00 爲名的 LV&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lvcreate -l +100%FREE VG00 -n LV00
$ lvdisplay
  --- Logical volume ---
  LV Path                /dev/VG00/LV00
  LV Name                LV00
  VG Name                VG00
  LV UUID                d0MSXz-bcmL-XZ3R-gjyR-X1C7-P0y0-ODe0uM
  LV Write Access        read/write
  LV Creation host, time arch-64, 2013-04-30 13:11:43 +0800
  LV Status              available
  # open                 0
  LV Size                30.17 GiB
  Current LE             7723
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           254:0
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="create-filesystems-and-mount-logical-volumes"&gt;
&lt;h3&gt;Create filesystems and mount logical volumes&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ modprobe dm-mod
$ vgscan

  Reading all physical volumes.  This may take a while...
  Found volume group "VG00" using metadata type lvm2

$ vgchange -ay

  1 logical volume(s) in volume group "VG00" now active
&lt;/pre&gt;
&lt;p&gt;format and mount:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mkfs.ext4 /dev/mapper/VG00-LV00
$ mount /dev/mapper/VG00-LV00 /mnt/lvmtest
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="add-lvm-hook-to-mkinitcpio-conf"&gt;
&lt;h3&gt;Add lvm hook to mkinitcpio.conf&lt;/h3&gt;
&lt;p&gt;You'll need to make sure the udev and lvm2 mkinitcpio hooks are enabled.
udev is there by default.
Edit the file and insert lvm2 between block and filesystem like so:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nano /etc/mkinitcpio.conf
HOOKS="base udev ... block lvm2 filesystems"
&lt;/pre&gt;
&lt;p&gt;Afterwards, you can continue in normal installation instructions with the create an initial ramdisk step.&lt;/p&gt;
&lt;p&gt;Load proper module:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ modprobe dm_mod
&lt;/pre&gt;
&lt;p&gt;The dm_mod module should be automatically loaded. In case it does not, you can try:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ nano /etc/mkinitcpio.conf
MODULES="dm_mod ..."
&lt;/pre&gt;
&lt;p&gt;rebuild:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mkinitcpio -p linux
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="auto-mount-by-etc-fstab"&gt;
&lt;h3&gt;auto mount by /etc/fstab&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ nano /etc/fstab
UUID=&amp;lt;LV UUID&amp;gt;      /mnt/lvmtest    ext4    defaults    0   0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;增加一顆硬碟&lt;/h2&gt;
&lt;p&gt;確定要加入那顆硬碟&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lsblk -f
&lt;/pre&gt;
&lt;p&gt;做好 partition，
將那顆硬碟設為 lvm pv&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ gparted
$ lsblk -f

NAME          FSTYPE                        LABEL    UUID                                   MOUNTPOINT
sdd
└─sdd1        LVM2_member                            hr0IbE-tO9I-vm9d-1x8f-iJwq-mrHj-bT0Pth
  └─VG01-LV00 ext4                                   86068ca8-289d-480a-87db-2680b13d00e3   /mnt/data-lvm
sde           promise_fasttrack_raid_member
└─sde1        LVM2_member                            CGrblY-v1n3-Lzil-iwym-3Wyk-wPQS-Gqztrn
&lt;/pre&gt;
&lt;p&gt;pvcreate&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo pvcreate /dev/sde1
Physical volume "/dev/sde1" successfully created

$ sudo vgdisplay
  --- Volume group ---
  VG Name               VG01
  System ID
  Format                lvm2
  Metadata Areas        3
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                3
  Act PV                3
  VG Size               3.18 TiB
  PE Size               4.00 MiB
  Total PE              834631
  Alloc PE / Size       476932 / 1.82 TiB
  Free  PE / Size       357699 / 1.36 TiB
  VG UUID               8uHaKD-23zK-W5by-EJPE-5hpN-3PmN-6yY1Wl
&lt;/pre&gt;
&lt;p&gt;vgextend&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sudo vgextend VG01 /dev/sde1
Volume group "VG01" successfully extended

$ sudo lvdisplay
  --- Logical volume ---
  LV Path                /dev/VG01/LV00
  LV Name                LV00
  VG Name                VG01
  LV UUID                0GSsZv-vzJQ-7mMk-rwsH-or0D-cDjJ-4OQFGd
  LV Write Access        read/write
  LV Creation host, time arch-64, 2013-04-30 19:20:38 +0800
  LV Status              available
  # open                 1
  LV Size                1.82 TiB
  Current LE             476932
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           254:0
&lt;/pre&gt;
&lt;p&gt;擴增剛剛設好的 lv&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ lvextend -l +100%FREE VG01/LV00
&lt;/pre&gt;
&lt;p&gt;df 看一下，發現 lv 容量還沒有增加&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ df
檔案系統               1K-blocks       已用      可用 已用% 掛載點
/dev/mapper/VG01-LV00 1922728752 1798892248  26144448   99% /mnt/data-lvm
&lt;/pre&gt;
&lt;p&gt;原來是，還要 resize file system&lt;/p&gt;
&lt;pre class="literal-block"&gt;
＄ resize2fs /dev/VG01/LV00
&lt;/pre&gt;
&lt;p&gt;df 看一下，發現 lv 容量增加囉&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ df
檔案系統               1K-blocks       已用       可用 已用% 掛載點
/dev/mapper/VG01-LV00 3364872816 1798895476 1409685920   57% /mnt/data-lvm
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-the-maximum-size-of-a-single-lv"&gt;
&lt;h2&gt;What is the maximum size of a single LV?&lt;/h2&gt;
&lt;p&gt;ref: &lt;a class="reference external" href="http://www.tldp.org/HOWTO/LVM-HOWTO/lvm2faq.html"&gt;http://www.tldp.org/HOWTO/LVM-HOWTO/lvm2faq.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The answer to this question depends upon the CPU architecture of your computer and the kernel you are a running:&lt;/p&gt;
&lt;p&gt;For 2.4 based kernels, the maximum LV size is 2TB. For some older kernels,
however, the limit was 1TB due to signedness problems in the block layer.
Red Hat Enterprise linux 3 Update 5 has fixes to allow the full 2TB LVs.
Consult your distribution for more information in this regard.&lt;/p&gt;
&lt;p&gt;For 32-bit CPUs on 2.6 kernels, the maximum LV size is 16TB.&lt;/p&gt;
&lt;p&gt;For 64-bit CPUs on 2.6 kernels, the maximum LV size is 8EB. (Yes, that is a very large number.)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>linux</category><category>lvm</category><guid>https://mariolong.github.io/posts/LVM-on-archlinux/</guid><pubDate>Tue, 30 Apr 2013 04:41:30 GMT</pubDate></item></channel></rss>