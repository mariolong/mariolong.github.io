<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life (文章分類：pandoc)</title><link>https://github.com/mariolong/mariolong.github.io/</link><description></description><atom:link href="https://github.com/mariolong/mariolong.github.io/categories/pandoc.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Tue, 15 May 2018 02:29:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Install Haskell Applications</title><link>https://github.com/mariolong/mariolong.github.io/posts/install-haskell-applications/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 前言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
在 archlinux 上想用 haskell 真不是一件容易的事，因為選擇太多。
&lt;/p&gt;

&lt;p&gt;
不管如何，終於把 haskell 的開發環境設好，也順利完成了第一支小程式，可以抓網頁上目前最新的電影表列，並以 gmail 通知。
&lt;/p&gt;

&lt;p&gt;
上個月練習 clojure 時，也寫過相同功能的程式。果然都是 functional 語言，經過一番折騰，程式結構幾乎相同，代碼行數也差不多。但是，比起先前用
Python 寫的，精簡許多，可讀性也較高。這裡不比較 haskell 和 clojure, 先把安裝的過程記錄下來。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 安裝&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
archlinux 上安裝 haskell 真的要小心，因為 8.0.2 版以後，官方版 haskell
用的是 dynamic-link, 問題多多。另外也不用 ArchHaskell repository, 原因是其中 Application 的版本比較舊。
&lt;/p&gt;

&lt;p&gt;
但我要用的 taffybar，新版看起來還不好用，所以只好退回 taffybar-0.4.6。而 0.4.6 版又不能用 ghc-8.2.2 編譯，只能回到 ghc-8.0.2。如此一來，就不能用新的 haskell 和 intero，真困擾。
&lt;/p&gt;

&lt;p&gt;
問題還是能解決，用 stack 就可以完美克服。
&lt;/p&gt;

&lt;p&gt;
但是 cabal 中的 pandoc 版本比較新，所以還是用 cabal 安裝 pandoc。
&lt;/p&gt;

&lt;p&gt;
如果要用 nix/Miso，又不能安裝全域的 cabal-install，只好又回到 stack 安裝 pandoc，排列組合還真多樣化。這個問題以後再說，暫時不用 nix/Miso.
&lt;/p&gt;

&lt;p&gt;
最後決定的方法是：
1.安裝 ghc-8.2.2 的 static 版。
2.安裝 stack-bin，是 stack 的 static 版。
2.taffybar-0.4.6，自行用 ghc-8.0.2 編譯
3.pandoc 先用 cabal 裝。
&lt;/p&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack setup --system-ghc
stack install cabal-install --system-ghc
cabal update
cabal install pandoc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;&lt;span class="section-number-3"&gt;2.1&lt;/span&gt; install ghc, stack&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
&lt;a href="https://docs.haskellstack.org/en/stable/install_and_upgrade/#arch-linux"&gt;https://docs.haskellstack.org/en/stable/install_and_upgrade/#arch-linux&lt;/a&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S ghc
yaourt -S stack
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
決定用 static link
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -Sy ghc ghc-static ghc-pristine stack-bin --noconfirm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;&lt;span class="section-number-3"&gt;2.2&lt;/span&gt; install cabal&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;p&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Haskell#Building_statically_linked_packages_with_Cabal_.28without_using_shared_libraries.29"&gt;Building statically linked packages with Cabal (without using shared libraries)&lt;/a&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;stack&lt;/span&gt; &lt;span class="nv"&gt;setup&lt;/span&gt; &lt;span class="nv"&gt;--system-ghc&lt;/span&gt;
&lt;span class="nv"&gt;stack&lt;/span&gt; &lt;span class="nv"&gt;install&lt;/span&gt; &lt;span class="nv"&gt;--system-ghc&lt;/span&gt; &lt;span class="nv"&gt;cabal-install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;&lt;span class="section-number-3"&gt;2.3&lt;/span&gt; install pandoc&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cabal update
cabal install pandoc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;&lt;span class="section-number-3"&gt;2.4&lt;/span&gt; taffybar, xmonad, xomnad-contrib&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
taffybar 1.x.x 以上的，會用到 haskell-gi. 用 ghc 8.2.2 編譯會報錯。即使硬上，taffybar 的顯示高度也不對。因此暫時不用，等 ghc 8.4.2 release
了再試 taffybar-2.x.x。
&lt;/p&gt;

&lt;p&gt;
目前用 taffybar-0.4.6，也就換維護者前的最後版本，比較穩定。
&lt;/p&gt;

&lt;p&gt;
有三種做法
&lt;/p&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-0-1" name="sec-2-4-0-1"&gt;&lt;/a&gt;自行編譯 taffybar-0.4.6 和 xmonad/xmonad-contrib&lt;br&gt;&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-0-1-1" name="sec-2-4-0-1-1"&gt;&lt;/a&gt;download taffybar from github&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a id="sec-2-4-0-1-2" name="sec-2-4-0-1-2"&gt;&lt;/a&gt;adding stack.yaml and setup stack project&lt;br&gt;&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-0-1-3" name="sec-2-4-0-1-3"&gt;&lt;/a&gt;config file of taffybar/xmonad must put them to this directory&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-0-1-3"&gt;
&lt;p&gt;
否則 recompile config file 時，會找不到需要的模組。
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-0-1-4" name="sec-2-4-0-1-4"&gt;&lt;/a&gt;stack build/install taffybar&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-0-1-4"&gt;
&lt;p&gt;
自動安裝 taffybar 和 xomnad 和 xmonad-contrib
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-0-1-5" name="sec-2-4-0-1-5"&gt;&lt;/a&gt;執行&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-0-1-5"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- taffybar
stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- xmonad --recompile
stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- xmonad --restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-0-2" name="sec-2-4-0-2"&gt;&lt;/a&gt;haskell-taffybar at ArchHaskell&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-0-2"&gt;
&lt;p&gt;
用 ArchHaskell 中的 taffybar，是 0.4.6 版，穩定，可用。問題是：ghc-8.0.2，其它的 haskell 工具都是舊版，intero 也不能用。所以只能放棄用 ArchHaskell
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-0-3" name="sec-2-4-0-3"&gt;&lt;/a&gt;cabal install taffybar-0.4.6&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-0-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cabal update
cabal install happy alex haddock c2hs
cabal install taffybar-0.4.6
cabal install pandoc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; emacs&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
using &lt;a href="https://commercialhaskell.github.io/intero/"&gt;intero&lt;/a&gt; and haskell-mode
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;intero&lt;/span&gt;
  &lt;span class="nv"&gt;:ensure&lt;/span&gt; &lt;span class="nv"&gt;haskell-mode&lt;/span&gt;
  &lt;span class="nv"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'haskell-mode-hook&lt;/span&gt; &lt;span class="ss"&gt;'intero-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-3-1" class="outline-3"&gt;
&lt;h3 id="sec-3-1"&gt;&lt;span class="section-number-3"&gt;3.1&lt;/span&gt; &lt;span class="todo TODO"&gt;TODO&lt;/span&gt; hindent&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack install hindent
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;hindent&lt;/span&gt;
  &lt;span class="nv"&gt;:config&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'haskell-mode-hook&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="ss"&gt;'hindent-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; Dynamic Link Issue&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
read &lt;a href="https://wiki.archlinux.org/index.php/Haskell#Problems_with_linking"&gt;https://wiki.archlinux.org/index.php/Haskell#Problems_with_linking&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
You can also set these flags in ~/.cabal/config so that it applies to all projects by default.
&lt;/p&gt;

&lt;p&gt;
&lt;kbd&gt;~/.cabal/config&lt;/kbd&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;library-vanilla: False
shared: True
executable-dynamic: True
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>haskell</category><category>pandoc</category><category>xmonad</category><guid>https://github.com/mariolong/mariolong.github.io/posts/install-haskell-applications/</guid><pubDate>Sun, 29 Apr 2018 03:16:44 GMT</pubDate></item></channel></rss>