<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life (文章分類：computer)</title><link>https://github.com/mariolong/mariolong.github.io/</link><description></description><atom:link href="https://mariolong.github.io/categories/cat_computer.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Tue, 18 Sep 2018 02:58:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Install stack, cabal and nix for writing miso project</title><link>https://mariolong.github.io/posts/install-stack-cabal-nix-for-miso/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
在 &lt;a href="https://mariolong.github.io/posts/install-haskell-applications/"&gt;Install Haskell Applications&lt;/a&gt; 中，提到了 haskell 三個 package 管理程式：cabal, stack, nix.
我會用到的 haskell 軟體有 xmonad/taffybar, pandoc 和自行撰寫的程式。xmonad/taffybar 用 stack 安裝比較方便，pandoc
在 cabal 中的版本會比較新，miso/GHCJS 的程式，用 nix 管理是最合適且最強大。
&lt;/p&gt;

&lt;div id="outline-container-orge81f540" class="outline-2"&gt;
&lt;h2 id="orge81f540"&gt;install nix&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge81f540"&gt;
&lt;p&gt;
因為 miso 建議用 nix 管理 project，還是參考 &lt;a href="https://nixos.org/nix/manual/"&gt;Nix manual&lt;/a&gt; 試著把它裝起來。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://nixos.org/nix/install &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
安裝成功後，會有以下的訊息：
&lt;/p&gt;
&lt;pre class="example"&gt;
Installation finished!  To ensure that the necessary environment
variables are set, either log in again, or type

  . /home/mario/.nix-profile/etc/profile.d/nix.sh
&lt;/pre&gt;

&lt;p&gt;
在 &lt;code&gt;.profile&lt;/code&gt; 中，加上
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt; -f &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.nix-profile/etc/profile.d/nix.sh &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.nix-profile/etc/profile.d/nix.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;
以後開機就可以使用 nix 的指令了。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org07115f2" class="outline-2"&gt;
&lt;h2 id="org07115f2"&gt;install stack, cabal, xmonad/taffybar, pandoc&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org07115f2"&gt;
&lt;p&gt;
還是可以用 &lt;a href="https://mariolong.github.io/posts/install-haskell-applications/"&gt;Install Haskell Applications&lt;/a&gt; 的方法，而 cabal 可不安裝，用 stack 即可。BUT…
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf3244b9" class="outline-2"&gt;
&lt;h2 id="orgf3244b9"&gt;install GHCJS&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf3244b9"&gt;
&lt;p&gt;
因為要先安裝 GHCJS 後，才能用 miso 寫程式。所以這步驟是必要的。
&lt;/p&gt;

&lt;p&gt;
在 &lt;a href="https://mariolong.github.io/posts/install-ghcjs-archlinux/"&gt;Install ghcjs for ghc 8.4.3 on archlinux&lt;/a&gt;, 我會記錄了以 stack 安裝
GHCJS，在過程中一定會安裝全域 cabal, 這會是個麻煩事。因為用 stack 管理
miso 專案，則不能用全域 cabal，必須把全域 cabal 刪除。真困擾。
&lt;/p&gt;

&lt;p&gt;
雖然可以用 nix 管理專案，只是功能強，意味著學習曲線比較陡吧。算了，還是乖乖學 nix。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd74bf42" class="outline-2"&gt;
&lt;h2 id="orgd74bf42"&gt;conclusion&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd74bf42"&gt;
&lt;p&gt;
Haskell 真的難搞，不僅語言本身難搞，連開發環境都難搞。&lt;del&gt;也許先用 servant
做 server 才是對的&lt;/del&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>cabal</category><category>haskell</category><category>linux</category><category>miso</category><category>nix</category><category>stack</category><guid>https://mariolong.github.io/posts/install-stack-cabal-nix-for-miso/</guid><pubDate>Fri, 14 Sep 2018 04:07:35 GMT</pubDate></item><item><title>install and use dropbox on archlinux</title><link>https://mariolong.github.io/posts/dropbox/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="outline-container-orgdcebc23" class="outline-2"&gt;
&lt;h2 id="orgdcebc23"&gt;install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdcebc23"&gt;
&lt;p&gt;
因 archlinuxfr 中也有 dropbox，為了不和它衝突，特別加上 &lt;code&gt;aur/dropbox&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S aur/dropbox
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org491286e" class="outline-2"&gt;
&lt;h2 id="org491286e"&gt;config dropbox.service&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org491286e"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org23fba89" class="outline-3"&gt;
&lt;h3 id="org23fba89"&gt;setup environment variables&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org23fba89"&gt;
&lt;p&gt;
為了正確顯示，要加上以下命令：
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Environment=DISPLAY=:0
Environment=LC_ALL=zh_TW.UTF-8 LANG=zh_TW.UTF-8 QT_STYLE_OVERRIDE=GTK+
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgee464c4" class="outline-3"&gt;
&lt;h3 id="orgee464c4"&gt;set Restart=no in dropbox.service&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgee464c4"&gt;
&lt;p&gt;
根據 &lt;a href="https://gitlab.com/yan12125/aur/issues/21"&gt;Dropbox kill/restart loop when started at boot via systemd&lt;/a&gt;，在
dropbox.service 中，特別加上
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Restart=no
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd87d073" class="outline-3"&gt;
&lt;h3 id="orgd87d073"&gt;final dropbox.service&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd87d073"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]
Description=Dropbox for systemd/user

[Service]
Environment=DISPLAY=:0
Environment=LC_ALL=zh_TW.UTF-8 LANG=zh_TW.UTF-8 QT_STYLE_OVERRIDE=GTK+
Type=simple
ExecStart=/usr/bin/dropbox
ExecReload=/bin/kill -HUP $MAINPID
KillMode=process
Restart=no

[Install]
WantedBy=default.target
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb53b094" class="outline-2"&gt;
&lt;h2 id="orgb53b094"&gt;start dropbox&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb53b094"&gt;
&lt;p&gt;
最後執行
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start dropbox --user
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
or/and
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; dropbox --user
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
即可。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>dropbox</category><category>linux</category><guid>https://mariolong.github.io/posts/dropbox/</guid><pubDate>Fri, 07 Sep 2018 04:18:23 GMT</pubDate></item><item><title>大新倉頡輸入法</title><link>https://mariolong.github.io/posts/da-xin-new-cj/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
用了 2 年的「龍倉」，總覺得打五碼，真的不習慣，還是打四碼比較快。今天決定換「大新」，碼表在&lt;a href="http://hyperrate.com/thread.php?tid=343"&gt;此下載&lt;/a&gt;。經過一個下午的努力，終於完工。試用了一會兒，真的很後悔，應該早一點用「大新」：真是快，一下就上手，幾乎沒有困難，有倉頡的底子，學「大新」真是容易，又順心。
&lt;/p&gt;

&lt;div id="outline-container-org19eb5c1" class="outline-2"&gt;
&lt;h2 id="org19eb5c1"&gt;記錄與倉頡不同的地方：&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org19eb5c1"&gt;
&lt;p&gt;
先讀&lt;a href="http://www.eztyping.com.tw/learn_cj_upd.htm"&gt;倉頡、速成使用者瞬間昇級表&lt;/a&gt;，再看下列一些特別的：
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;字根多了「言(z)、彳(u)、禾(;)、食(;)、穴(jj)」，不難記。&lt;/li&gt;
&lt;li&gt;拆碼變成了 4 碼，也比較單純：
&lt;ul class="org-ul"&gt;
&lt;li&gt;整體【頭尾、頭尾】，例(omn)、含(oir)&lt;/li&gt;
&lt;li&gt;連體字（取１、２、尾碼），如：連(yjj)，應(igp)&lt;/li&gt;
&lt;li&gt;拆碼要訣：拆碼有困惑時，頭、尾劃圈（○），輕鬆取碼。如：映(alk)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;一碼多字，加; ，倉(oir;)&lt;/li&gt;
&lt;li&gt;字根加; ，竹(h;)、日(a;)&lt;/li&gt;
&lt;li&gt;一字碼可以先記，不難：
&lt;ul class="org-ul"&gt;
&lt;li&gt;國(w)民(p)與(x)大(k)會(z)不(f)可(r)以(v)有(b)不(f)法(e)的(h)行(u)為(i)&lt;/li&gt;
&lt;li&gt;這(y)對(t)成(s)年(q)人(o)在(g)家(j)業(c)中(l)是(a)大(k)來(d)發(n)的(d)一(m)年(q)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;常用符號：&lt;a href="http://www.eztyping.com.tw/learn_smileys.htm"&gt;http://www.eztyping.com.tw/learn_smileys.htm&lt;/a&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;兩下分號;; ：○◎※§☆★&lt;/li&gt;
&lt;li&gt;一次括號 「」&lt;/li&gt;
&lt;li&gt;兩次括號 『』&lt;/li&gt;
&lt;li&gt;標點直接打，如：，。／、；&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;麻(idd)、麼(idvi)的字根，一律用 id..，不再有 ic…&lt;/li&gt;
&lt;li&gt;簡碼字根，有些字的字根，可能有簡單或快速的打法。
&lt;ul class="org-ul"&gt;
&lt;li&gt;石(m)：碼(msf)、硃(mhd)&lt;/li&gt;
&lt;li&gt;穴(jj)：空(jjm)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>倉頡</category><guid>https://mariolong.github.io/posts/da-xin-new-cj/</guid><pubDate>Thu, 06 Sep 2018 07:55:10 GMT</pubDate></item><item><title>Fish 用法記錄</title><link>https://mariolong.github.io/posts/fish-usage/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
參考 &lt;a href="https://codeyarns.com/2015/05/29/directory-history-in-the-fish-shell/"&gt;Directory history in the Fish shell&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
按 &lt;kbd&gt;Alt-Left/Right&lt;/kbd&gt; 直接到上／下目錄
&lt;/p&gt;

&lt;p&gt;
命令列輸入：
&lt;/p&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;dirh&lt;/code&gt; : 目錄歷史&lt;/li&gt;
&lt;li&gt;&lt;code&gt;prevd&lt;/code&gt; : 到前一目錄&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nextd&lt;/code&gt; : 到後一目錄&lt;/li&gt;
&lt;/ul&gt;</description><category>fish</category><category>linux</category><guid>https://mariolong.github.io/posts/fish-usage/</guid><pubDate>Thu, 06 Sep 2018 01:46:21 GMT</pubDate></item><item><title>Install ghcjs for ghc 8.4.3 on archlinux</title><link>https://mariolong.github.io/posts/install-ghcjs-archlinux/</link><dc:creator>Mario Long</dc:creator><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ghc --version
The Glorious Glasgow Haskell Compilation System, version &lt;span class="m"&gt;8&lt;/span&gt;.4.3
&lt;/pre&gt;&lt;/div&gt;

&lt;div id="outline-container-org6ffe2e8" class="outline-2"&gt;
&lt;h2 id="org6ffe2e8"&gt;Install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6ffe2e8"&gt;
&lt;p&gt;
參考 &lt;a href="https://github.com/ghcjs/ghcjs/tree/ghc-8.4"&gt;GitHub - ghcjs/ghcjs at ghc-8.4&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org0752ffd" class="outline-3"&gt;
&lt;h3 id="org0752ffd"&gt;getting and preparing the source tree&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org0752ffd"&gt;
&lt;p&gt;
add this step: &lt;code&gt;git checkout ghc-8.4&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/ghcjs/ghcjs.git
&lt;span class="nb"&gt;cd&lt;/span&gt; ghcjs
git checkout ghc-8.4
git submodule update --init --recursive
./utils/makePackages.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org09ead21" class="outline-3"&gt;
&lt;h3 id="org09ead21"&gt;building the compiler&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org09ead21"&gt;
&lt;p&gt;
You can use &lt;code&gt;cabal-install&lt;/code&gt; &lt;b&gt;and&lt;/b&gt; &lt;code&gt;stack&lt;/code&gt; to set up a build environment that contains these packages.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7769215" class="outline-4"&gt;
&lt;h4 id="org7769215"&gt;install cabal&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org7769215"&gt;
&lt;p&gt;
because GHCJS need cabal, so install it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack install cabal-install
cabal update
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org3ccd344" class="outline-4"&gt;
&lt;h4 id="org3ccd344"&gt;Cabal new-build (x)&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org3ccd344"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cabal new-configure
cabal new-build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga3b902e" class="outline-4"&gt;
&lt;h4 id="orga3b902e"&gt;link to executables (x) &lt;a id="org1f0eb0f"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orga3b902e"&gt;
&lt;p&gt;
&lt;b&gt;DON'T DO THIS, IT IS NOT NECESSARY&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
Since cabal new-build does not install executables or wrapper scripts,
we need to make them accessible by hand. You can do this by creating
symlinks to the /utils/dist-newstyle-wrapper.sh script.
&lt;/p&gt;

&lt;p&gt;
For &lt;b&gt;example&lt;/b&gt; if the &lt;code&gt;.bin&lt;/code&gt; directory is in your &lt;code&gt;PATH&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .bin
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-pkg
ln -s ../utils/dist-newstyle-wrapper.sh haddock-ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh hsc2hs-ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-boot
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-run
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgeffb65b" class="outline-4"&gt;
&lt;h4 id="orgeffb65b"&gt;stack&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orgeffb65b"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org3fe8088"&gt;&lt;/a&gt;DO THIS&lt;br&gt;
&lt;div class="outline-text-5" id="text-org3fe8088"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org287e93a"&gt;&lt;/a&gt;DON'T DO THIS (x)&lt;br&gt;
&lt;div class="outline-text-5" id="text-org287e93a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stack build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge1c9d06" class="outline-4"&gt;
&lt;h4 id="orge1c9d06"&gt;install haddock (x)&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-orge1c9d06"&gt;
&lt;p&gt;
when run ghcjs-boot, it will display following error message:
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;Haddock's resource directory does not exist!&lt;/code&gt;
&lt;/p&gt;

&lt;p&gt;
I have no idea to solve this problem after execute following
statements. My decision is ignoring above error message and don't execute
section &lt;a href="https://mariolong.github.io/posts/install-ghcjs-archlinux/#org1f0eb0f"&gt;"link to executables"&lt;/a&gt;. Re-install GHCJS again.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cabal install haddock

stack haddock
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org7ca63ed" class="outline-3"&gt;
&lt;h3 id="org7ca63ed"&gt;Booting GHCJS&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org7ca63ed"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ghcjs-boot
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
when invoked without arguments, ghcjs-boot will build the libraries
from &lt;code&gt;boot.tar&lt;/code&gt; (unless the current directory contains a &lt;code&gt;boot.yaml&lt;/code&gt;
file), installed in GHCJS' data directory (&lt;code&gt;boot.tar&lt;/code&gt; is generated by
the &lt;code&gt;makePackages.sh&lt;/code&gt; script and included in a source distribution).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgab902d8" class="outline-3"&gt;
&lt;h3 id="orgab902d8"&gt;Test&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgab902d8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'main = putStrLn "Hello World!"'&lt;/span&gt; &amp;gt; helloWorld.hs
$ stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- ghcjs -o helloWorld helloWorld.hs
$ node helloWorld.jsexe/all.js
Hello world!
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
test is OK.
&lt;/p&gt;

&lt;p&gt;
I don't know why.
But these steps are work for me to install ghcjs with ghc-8.4.3
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfcbc4e0" class="outline-2"&gt;
&lt;h2 id="orgfcbc4e0"&gt;參考 &lt;a href="http://www.peachful.space/posts/ghcjs-on-arch-linux.html"&gt;Peachful Space - ghcjs on Arch Linux&lt;/a&gt; 和以下指令：(FAIL)&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfcbc4e0"&gt;
&lt;p&gt;
this is not work.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# install stack, haskell-stack, node.js and alex using pacman&lt;/span&gt;
$ sudo pacman -S stack haskell-stack nodejs alex

$ &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git clone https://github.com/ghcjs/ghcjs.git

&lt;span class="c1"&gt;# if you `stack setup` now you'll get an error saying /usr/lib/libtinfo.so.5 cannot be found&lt;/span&gt;

&lt;span class="c1"&gt;# install libtinfo from AUR&lt;/span&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/build-aur
$ git clone https://aur.archlinux.org/libtinfo.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; libtinfo
$ makepkg -sri

&lt;span class="c1"&gt;# introducing the terrible hack...  I know, but it's the only way I can make it work&lt;/span&gt;
$ sudo ln -s /usr/lib/libtinfo.so /usr/lib/libtinfo.so.5

$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/ghcjs
$ stack setup
$ stack build
$ stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- ghcjs-boot --dev

$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'main = putStrLn "Hello World!"'&lt;/span&gt; &amp;gt; helloWorld.hs
$ stack &lt;span class="nb"&gt;exec&lt;/span&gt; -- ghcjs -o helloWorld helloWorld.hs
$ node helloWorld.jsexe/all.js
Hello world!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>ghcjs</category><category>haskell</category><category>linux</category><guid>https://mariolong.github.io/posts/install-ghcjs-archlinux/</guid><pubDate>Tue, 04 Sep 2018 00:22:35 GMT</pubDate></item><item><title>Turn on SMART to monitor HD</title><link>https://mariolong.github.io/posts/turn-on-smart/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
ref: &lt;a href="https://wiki.archlinux.org/index.php/S.M.A.R.T."&gt;S.M.A.R.T. - ArchWiki&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-org4bb6889" class="outline-2"&gt;
&lt;h2 id="org4bb6889"&gt;Install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4bb6889"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S smartmontools
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga6908e2" class="outline-2"&gt;
&lt;h2 id="orga6908e2"&gt;start smartd&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga6908e2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start smartd
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
配置檔 &lt;code&gt;/etc/smartd.conf&lt;/code&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgeb09229" class="outline-2"&gt;
&lt;h2 id="orgeb09229"&gt;smartd.conf&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgeb09229"&gt;
&lt;p&gt;
To monitor for all possible SMART errors on all disks, the following
setting must be added in the configuration file.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEVICESCAN -a
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org42660d8" class="outline-3"&gt;
&lt;h3 id="org42660d8"&gt;auto mail&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org42660d8"&gt;
&lt;p&gt;
先依 &lt;a href="https://dominicm.com/configure-email-notifications-on-arch-linux/"&gt;Configure Email Notifications on Arch Linux | DominicM&lt;/a&gt; 設定 s-nail,
再於 &lt;code&gt;/etc/smartd.conf&lt;/code&gt; 加上以下指令
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEVICESCAN -m address@domain.com -M test
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>smart</category><guid>https://mariolong.github.io/posts/turn-on-smart/</guid><pubDate>Wed, 11 Jul 2018 13:40:06 GMT</pubDate></item><item><title>Kodi TV</title><link>https://mariolong.github.io/posts/kodi-tv/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
&lt;a href="https://kodi.wiki/view/HOW-TO:Install_Tvheadend_on_Arch_Linux"&gt;HOW-TO:Install Tvheadend on Arch Linux - Official Kodi Wiki&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Tvheadend"&gt;Tvheadend - ArchWiki&lt;/a&gt;
&lt;/p&gt;


&lt;div id="outline-container-org5aa3a7d" class="outline-2"&gt;
&lt;h2 id="org5aa3a7d"&gt;Install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org5aa3a7d"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S tvheadend kodi-addon-hts-pvrmanager kodi-addon-pvr-hts --noconfirm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6b368f3" class="outline-2"&gt;
&lt;h2 id="org6b368f3"&gt;start/enable&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6b368f3"&gt;
&lt;p&gt;
Once Tvheadend is installed start/enable the tvheadend.service.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org45b6336" class="outline-2"&gt;
&lt;h2 id="org45b6336"&gt;Configuration&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org45b6336"&gt;
&lt;p&gt;
Once the service is running, configuration of Tvheadend is done through a web interface on &lt;code&gt;localhost:9981&lt;/code&gt;.
&lt;/p&gt;

&lt;p&gt;
The service should automatically generate Tvheadend username and passwords that are the same as your system. You can log in as root with your system's root password.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>kodi</category><guid>https://mariolong.github.io/posts/kodi-tv/</guid><pubDate>Tue, 26 Jun 2018 06:56:03 GMT</pubDate></item><item><title>Start emacs with systemd</title><link>https://mariolong.github.io/posts/start-emacs-with-systemd/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
emacs version 26.1 systemd support
&lt;/p&gt;

&lt;div id="outline-container-orgae40f8b" class="outline-2"&gt;
&lt;h2 id="orgae40f8b"&gt;設定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgae40f8b"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgb12957b" class="outline-3"&gt;
&lt;h3 id="orgb12957b"&gt;start emacs via systemd&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgb12957b"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemdctl --user start emacs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgc462593" class="outline-3"&gt;
&lt;h3 id="orgc462593"&gt;emacs.service&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgc462593"&gt;
&lt;p&gt;
還是要設定一下 emacs.service.
&lt;/p&gt;

&lt;p&gt;
將 &lt;code&gt;/usr/lib/systemd/user/emacs.service&lt;/code&gt;, 複製一份到 &lt;code&gt;/.config/systemd/user&lt;/code&gt; 中修改。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /usr/lib/systemd/user/emacs.service /home/mario/.config/systemd/user/emacs.service
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org25abdac" class="outline-4"&gt;
&lt;h4 id="org25abdac"&gt;中文輸入法&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org25abdac"&gt;
&lt;p&gt;
在 &lt;code&gt;emacs.service&lt;/code&gt; 中加上以下指令，才能在 emacs 中使用 fcitx.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Environment=DISPLAY=:0
Environment=LC_ALL=zh_TW.UTF-8 LANG=zh_TW.UTF-8
Environment=GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS="@im=fcitx"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org184e26f" class="outline-4"&gt;
&lt;h4 id="org184e26f"&gt;shell term&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org184e26f"&gt;
&lt;p&gt;
設定 path, 否則從 emacs 呼叫 term 時，可能會無法執行其它程式。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/mario/.bin:/home/mario/.cabal/bin:/home/mario/.local/bin:/home/mario/.gem/ruby/2.5.0/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org00b9054" class="outline-4"&gt;
&lt;h4 id="org00b9054"&gt;final emacs.service&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org00b9054"&gt;
&lt;p&gt;
最後 emacs.service 的設定。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]
Description=Emacs text editor
Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

[Service]
Type=simple
ExecStart=/usr/bin/emacs --fg-daemon
ExecStop=/usr/bin/emacsclient --eval "(kill-emacs)"
Restart=on-failure

Environment=SSH_AUTH_SOCK=%t/keyring/ssh
Environment=DISPLAY=:0
Environment=LC_ALL=zh_TW.UTF-8 LANG=zh_TW.UTF-8
Environment=GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS="@im=fcitx"
Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/mario/.bin:/home/mario/.cabal/bin:/home/mario/.local/bin:/home/mario/.gem/ruby/2.5.0/bin

[Install]
WantedBy=default.target
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga7763fb" class="outline-3"&gt;
&lt;h3 id="orga7763fb"&gt;修改 init.el&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orga7763fb"&gt;
&lt;p&gt;
package server is unnecessary. 可以刪除。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package&lt;/span&gt; &lt;span class="nv"&gt;server&lt;/span&gt;
  &lt;span class="nv"&gt;:commands&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;server-running-p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;:init&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;unless&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;server-running-p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;server-start&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd69a886" class="outline-3"&gt;
&lt;h3 id="orgd69a886"&gt;restart emacs via systemd&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd69a886"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemdctl --user restart emacs
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
實際上，在 emacs 中執行 &lt;code&gt;(kill-emacs)&lt;/code&gt; 即可重啓 emacs.
&lt;/p&gt;

&lt;p&gt;
觀察：emacs.service 中有下列指令：
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ExecStop=/usr/bin/emacsclient --eval "(kill-emacs)"
Restart=on-failure
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org518ebee" class="outline-2"&gt;
&lt;h2 id="org518ebee"&gt;結語&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org518ebee"&gt;
&lt;p&gt;
emacs 26.1 支援 systemd 真的不錯。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>emacs</category><category>systemd</category><guid>https://mariolong.github.io/posts/start-emacs-with-systemd/</guid><pubDate>Sun, 17 Jun 2018 05:49:50 GMT</pubDate></item><item><title>Using Mariadb</title><link>https://mariolong.github.io/posts/using-mariadb/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="outline-container-orgef3dcfe" class="outline-2"&gt;
&lt;h2 id="orgef3dcfe"&gt;change root password&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgef3dcfe"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; use mysql;
mysql&amp;gt; UPDATE user SET Password=PASSWORD("password") WHERE User='root';
mysql&amp;gt; flush privileges;
mysql&amp;gt; quit
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf29aa2b" class="outline-2"&gt;
&lt;h2 id="orgf29aa2b"&gt;commands&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf29aa2b"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org1d0e3ba" class="outline-3"&gt;
&lt;h3 id="org1d0e3ba"&gt;create user&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org1d0e3ba"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql&amp;gt; CREATE USER 'stock'@'localhost' IDENTIFIED BY 'password';
mysql&amp;gt; GRANT ALL PRIVILEGES ON stock.* TO 'stock'@'localhost' WITH GRANT OPTION;
mysql&amp;gt; SHOW GRANTS FOR 'stock'@'localhost';
+--------------------------------------------------------------------------------------------------------------+
| Grants for stock@localhost                                                                                   |
+--------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'stock'@'localhost' IDENTIFIED BY PASSWORD '*DAE5C577E73995AE12C81FF21F2A6336BD9D2F1F' |
| GRANT ALL PRIVILEGES ON `stock`.* TO 'stock'@'localhost' WITH GRANT OPTION                                   |
+--------------------------------------------------------------------------------------------------------------+
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org37aec55" class="outline-3"&gt;
&lt;h3 id="org37aec55"&gt;show database*s*&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org37aec55"&gt;
&lt;p&gt;
&lt;b&gt;注意&lt;/b&gt;: database 和 table 的名稱，在 linux 中會區分大小寫。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SHOW DATABASES
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org48a1691" class="outline-3"&gt;
&lt;h3 id="org48a1691"&gt;use &amp;lt;db-name&amp;gt;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org48a1691"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;USE stock
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>mariadb</category><category>mysql</category><guid>https://mariolong.github.io/posts/using-mariadb/</guid><pubDate>Fri, 15 Jun 2018 10:03:15 GMT</pubDate></item><item><title>Install Mariadb</title><link>https://mariolong.github.io/posts/install-mariadb/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
Ref: &lt;a href="https://wiki.archlinux.org/index.php/MySQL"&gt;MySQL - ArchWiki&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-org57c9a1a" class="outline-2"&gt;
&lt;h2 id="org57c9a1a"&gt;install mariadb&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org57c9a1a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S mariadb
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfe5e933" class="outline-2"&gt;
&lt;h2 id="orgfe5e933"&gt;install and setup database&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfe5e933"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mysql_install_db --user&lt;span class="o"&gt;=&lt;/span&gt;mysql --basedir&lt;span class="o"&gt;=&lt;/span&gt;/usr --datadir&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/mysql
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org57e2228" class="outline-3"&gt;
&lt;h3 id="org57e2228"&gt;message&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org57e2228"&gt;
&lt;pre class="example"&gt;
PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
To do so, start the server, then issue the following commands:

'/usr/bin/mysqladmin' -u root password 'new-password'
'/usr/bin/mysqladmin' -u root -h arch64 password 'new-password'

Alternatively you can run:

'/usr/bin/mysql_secure_installation'
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the MariaDB Knowledgebase at http://mariadb.com/kb or the
MySQL manual for more instructions.

You can start the MariaDB daemon with:
cd '/usr' ; /usr/bin/mysqld_safe --datadir='/mnt/lvm-data/mysql-data'

You can test the MariaDB daemon with mysql-test-run.pl
cd '/usr/mysql-test' ; perl mysql-test-run.pl

Please report any problems at http://mariadb.org/jira

The latest information about MariaDB is available at http://mariadb.org/.
You can find additional information about the MySQL part at:
http://dev.mysql.com
Consider joining MariaDB's strong and vibrant community:
https://mariadb.org/get-involved/
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgb48bdb6" class="outline-2"&gt;
&lt;h2 id="orgb48bdb6"&gt;edit &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgb48bdb6"&gt;
&lt;p&gt;
Tip: If you use something different from /var/lib/mysql for your data
dir, you need to set &lt;code&gt;datadir=&amp;lt;YOUR_DATADIR&amp;gt;&lt;/code&gt; under section &lt;code&gt;[mysqld]&lt;/code&gt; of
your &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;.  The following command will interactively
guide you through a number of recommended security measures at the
database level:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgda2d780" class="outline-2"&gt;
&lt;h2 id="orgda2d780"&gt;start/enable &lt;code&gt;mariadb.service&lt;/code&gt; with systemd&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgda2d780"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start mariadb
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org51543b3" class="outline-2"&gt;
&lt;h2 id="org51543b3"&gt;To start mysqld at boot time&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org51543b3"&gt;
&lt;p&gt;
you have to copy support-files/mysql.server to the right place for your system
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mysql_secure_installation
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6ecd4ff" class="outline-2"&gt;
&lt;h2 id="org6ecd4ff"&gt;Using UTF8MB4&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6ecd4ff"&gt;
&lt;p&gt;
在 &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt; 加上以下指令：
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[client]
default-character-set = utf8mb4

[mysqld]
collation_server = utf8mb4_unicode_ci
character_set_server = utf8mb4

[mysql]
default-character-set = utf8mb4
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbf51165" class="outline-2"&gt;
&lt;h2 id="orgbf51165"&gt;開啓自動補全&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgbf51165"&gt;
&lt;p&gt;
Note: Enabling this feature can make the client initialization longer.
&lt;/p&gt;

&lt;p&gt;
The MySQL client completion feature is disabled by default. To enable
it system-wide edit &lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt; , and replace &lt;code&gt;no-auto-rehash&lt;/code&gt; by
&lt;code&gt;auto-rehash&lt;/code&gt;. Completion will be enabled next time you run the MySQL
client.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>archlinux</category><category>mariadb</category><category>mysql</category><guid>https://mariolong.github.io/posts/install-mariadb/</guid><pubDate>Fri, 15 Jun 2018 08:20:11 GMT</pubDate></item></channel></rss>