<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life (文章分類：computer)</title><link>https://github.com/mariolong/mariolong.github.io/</link><description></description><atom:link href="https://mariolong.github.io/categories/cat_computer.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Fri, 25 May 2018 06:06:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Windows 10 中，隱藏磁碟機</title><link>https://mariolong.github.io/posts/hide-driver-on-windows/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
記錄一下，在 Windows 10 中，如何隱藏磁碟機？
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;windows 系統管理
&lt;/li&gt;
&lt;li&gt;磁碟管理
&lt;/li&gt;
&lt;li&gt;點要隱藏的 partition，按右鍵
&lt;/li&gt;
&lt;li&gt;變更磁碟機代號及路徑
&lt;/li&gt;
&lt;li&gt;新增，變更，移除，三選一
&lt;/li&gt;
&lt;/ol&gt;</description><category>disk</category><category>windows</category><guid>https://mariolong.github.io/posts/hide-driver-on-windows/</guid><pubDate>Thu, 24 May 2018 07:49:19 GMT</pubDate></item><item><title>為 windows 10，換一顆硬碟</title><link>https://mariolong.github.io/posts/replace-new-hard-disk/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
昨晚，開啓 windows 10 時，速度變得很慢，等了好久，好不容易才進入
windows 畫面。也不用檢查，就是讀 D 槽時變得很慢。前幾天才想換一個大一點的硬碟，它，立刻就出問題，讓我不得不換，真玄了。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; SMART check&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
用 linux 讀這硬碟，還是很正常。用 smartctl 檢查，是有 error log，為了資料的安全起見，還是換吧。
&lt;/p&gt;

&lt;p&gt;
這硬碟的一般資訊如下：
&lt;/p&gt;

&lt;pre class="example"&gt;
SMART Attributes Data Structure revision number: 16
Vendor Specific SMART Attributes with Thresholds:
ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE
  1 Raw_Read_Error_Rate     0x000b   100   100   016    Pre-fail  Always       -       0
  2 Throughput_Performance  0x0005   140   140   054    Pre-fail  Offline      -       69
  3 Spin_Up_Time            0x0007   129   129   024    Pre-fail  Always       -       294 (Average 294)
  4 Start_Stop_Count        0x0012   100   100   000    Old_age   Always       -       2302
  5 Reallocated_Sector_Ct   0x0033   100   100   005    Pre-fail  Always       -       0
  7 Seek_Error_Rate         0x000b   100   100   067    Pre-fail  Always       -       0
  8 Seek_Time_Performance   0x0005   124   124   020    Pre-fail  Offline      -       33
  9 Power_On_Hours          0x0012   099   099   000    Old_age   Always       -       12850
 10 Spin_Retry_Count        0x0013   100   100   060    Pre-fail  Always       -       0
 12 Power_Cycle_Count       0x0032   100   100   000    Old_age   Always       -       1815
192 Power-Off_Retract_Count 0x0032   099   099   000    Old_age   Always       -       2392
193 Load_Cycle_Count        0x0012   099   099   000    Old_age   Always       -       2392
194 Temperature_Celsius     0x0002   120   120   000    Old_age   Always       -       50 (Min/Max 12/61)
196 Reallocated_Event_Count 0x0032   100   100   000    Old_age   Always       -       0
197 Current_Pending_Sector  0x0022   100   100   000    Old_age   Always       -       0
198 Offline_Uncorrectable   0x0008   100   100   000    Old_age   Offline      -       0
199 UDMA_CRC_Error_Count    0x000a   200   200   000    Old_age   Always       -       171
&lt;/pre&gt;

&lt;p&gt;
其它硬碟都没有錯誤訊息，就是這顆 toshiba 2TB 的錯誤訊息如下：
&lt;/p&gt;

&lt;pre class="example"&gt;
Error 171 occurred at disk power-on lifetime: 12844 hours (535 days + 4 hours)
  When the command that caused the error occurred, the device was active or idle.

  After command completion occurred, registers were:
  ER ST SC SN CL CH DH
  -- -- -- -- -- -- --
  84 51 01 2f 36 5a 00  Error: ICRC, ABRT 1 sectors at LBA = 0x005a362f = 5912111

  Commands leading to the command that caused the error were:
  CR FR SC SN CL CH DH DC   Powered_Up_Time  Command/Feature_Name
  -- -- -- -- -- -- -- --  ----------------  --------------------
  35 00 00 2f 36 5a e0 ff      00:42:51.858  WRITE DMA EXT
  35 00 08 28 36 5a e0 00      00:42:51.857  WRITE DMA EXT
  ef 90 03 00 00 00 a0 00      00:42:50.877  SET FEATURES [Disable SATA feature]
  ef 02 00 00 00 00 a0 00      00:42:50.877  SET FEATURES [Enable write cache]
  35 00 00 2f 36 5a e0 ff      00:42:50.851  WRITE DMA EXT
&lt;/pre&gt;

&lt;p&gt;
到 PCHOME 24hr，選了一顆 WD 紅標 3TB，接著就要等它來。當然不會再選
Toshiba 的，主要的原因是 Power_On_Hours 的時數不到其它 WD 的 1/3，卻先掛點，MTBF 差了點。
&lt;/p&gt;

&lt;p&gt;
Google &lt;code&gt;Error: ICRC, ABRT&lt;/code&gt; 的意義如下：
&lt;/p&gt;
&lt;pre class="example"&gt;
Interface CRC error during Ultra DMA transfer - often either a bad
cable or power problem, though possibly an incorrect Ultra DMA mode
setting by the driver. Command aborted - either command not supported,
unable to complete, or interface CRC (with ICRC).
&lt;/pre&gt;

&lt;p&gt;
好像是要確認接線的狀況。
&lt;/p&gt;

&lt;p&gt;
没關係，反正也想換硬碟，趁此機會，順便整理電腦。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 裝上新的硬碟&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
過程如下：
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; setup HD: connect to computer
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; gparted: create partition and format it in NTFS. &lt;b&gt;結果是在 windows 10 中做 partition 和 format.&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; SMART check both old and new HD
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; mount to linux
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; sync from old to new HD: &lt;code&gt;rsync -av &amp;lt;src&amp;gt; &amp;lt;desc&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; if old HD is ok, then add it to lvm otherwise drop it
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; disconnet old HD, reboot to windows 10
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[X]&lt;/code&gt; set new HD to disk D:
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
要加到 lvm 就看 &lt;a href="https://mariolong.github.io/posts/replace-hd-on-lvm"&gt;replace hd on LVM&lt;/a&gt; 這篇記錄，有經驗，不會太難。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>WD</category><category>windows</category><guid>https://mariolong.github.io/posts/replace-new-hard-disk/</guid><pubDate>Thu, 24 May 2018 05:43:24 GMT</pubDate></item><item><title>部落格，重回 nikola+org-mode</title><link>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="table-of-contents"&gt;
&lt;h2&gt;目錄&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-1"&gt;1. 安裝&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2"&gt;2. 設定&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-1"&gt;2.1. configuration file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-2"&gt;2.2. theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-3"&gt;2.3. org-mod&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-3-1"&gt;2.3.1. 刪除不必要的空白&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-3-2"&gt;2.3.2. Convert inline verbatim to kbd when HTML export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-3-3"&gt;2.3.3. 用 pygment 幫程式碼著色&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4"&gt;2.4. 用 &lt;code&gt;nikola github_deploy&lt;/code&gt; 快速發佈文章&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-1"&gt;2.4.1. Initialize a Nikola site, if you haven’t already.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-2"&gt;2.4.2. Initialize a git repository in your Nikola source directory by running:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-3"&gt;2.4.3. Setup branches and remotes in &lt;code&gt;conf.py&lt;/code&gt;:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-4"&gt;2.4.4. Create a &lt;code&gt;.gitignore&lt;/code&gt; file. We recommend adding at least the following entries:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-5"&gt;2.4.5. Run &lt;code&gt;nikola github_deploy&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-2-4-6"&gt;2.4.6. 在 nikola github_deploy 之前&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/#sec-3"&gt;3. 開始使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
掙扎了許久，還是先用 &lt;a href="https://getnikola.com/"&gt;nikola&lt;/a&gt; 記錄一些事，畢竟比較熟悉，能快一點上手。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 安裝&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip nikola
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 設定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
執行 &lt;code&gt;nikola init&lt;/code&gt; 後，依指示設定，比較省事。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola init &amp;lt;blog-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;blog-name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;&lt;span class="section-number-3"&gt;2.1&lt;/span&gt; configuration file&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
修改 &lt;code&gt;conf.py&lt;/code&gt; ，慢慢改，內容很多，不必急於一時。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;&lt;span class="section-number-3"&gt;2.2&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola theme install bootstrap
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;&lt;span class="section-number-3"&gt;2.3&lt;/span&gt; org-mod&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
先安裝 plugin orgmode，再做一點點微調即可。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola plugin -i orgmode
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
開啟 &lt;code&gt;&amp;lt;blog-name&amp;gt;/plugins/orgmode/init.el&lt;/code&gt; ，加上以下的程式碼。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-1" class="outline-4"&gt;
&lt;h4 id="sec-2-3-1"&gt;&lt;span class="section-number-4"&gt;2.3.1&lt;/span&gt; 刪除不必要的空白&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-1"&gt;
&lt;p&gt;
換行時，在兩個中文字間會有一個空白，不好看，所以想辦法刪除。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; https://coldnew.github.io/a1ed40e3/&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defadvice&lt;/span&gt; &lt;span class="nv"&gt;org-html-paragraph&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;before&lt;/span&gt; &lt;span class="nv"&gt;org-html-paragraph-advice&lt;/span&gt;
				      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;paragraph&lt;/span&gt; &lt;span class="nv"&gt;contents&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;activate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"Join consecutive Chinese lines into a single long line without&lt;/span&gt;
&lt;span class="s"&gt;unwanted space when exporting org-mode to html."&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let* &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;origin-contents&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ad-get-arg&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;fix-regexp&lt;/span&gt; &lt;span class="s"&gt;"[[:multibyte:]]"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;fixed-contents&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt;
	    &lt;span class="s"&gt;"\\("&lt;/span&gt; &lt;span class="nv"&gt;fix-regexp&lt;/span&gt; &lt;span class="s"&gt;"\\) *\n *\\("&lt;/span&gt; &lt;span class="nv"&gt;fix-regexp&lt;/span&gt; &lt;span class="s"&gt;"\\)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;origin-contents&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ad-set-arg&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;fixed-contents&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-2" class="outline-4"&gt;
&lt;h4 id="sec-2-3-2"&gt;&lt;span class="section-number-4"&gt;2.3.2&lt;/span&gt; Convert inline verbatim to kbd when HTML export&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-2"&gt;
&lt;p&gt;
ref: &lt;a href="https://emacs-china.org/t/org-mode/1165"&gt;https://emacs-china.org/t/org-mode/1165&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
change &lt;kbd&gt;verbatim&lt;/kbd&gt; to &lt;kbd&gt;kbd&lt;/kbd&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;code&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-html-text-markup-alist&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;b&amp;gt;%s&amp;lt;/b&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;code&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;code&amp;gt;%s&amp;lt;/code&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;italic&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;i&amp;gt;%s&amp;lt;/i&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;strike-through&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;del&amp;gt;%s&amp;lt;/del&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;underline&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;span class=\"underline\"&amp;gt;%s&amp;lt;/span&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;verbatim&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;kbd&amp;gt;%s&amp;lt;/kbd&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-3" class="outline-4"&gt;
&lt;h4 id="sec-2-3-3"&gt;&lt;span class="section-number-4"&gt;2.3.3&lt;/span&gt; 用 pygment 幫程式碼著色&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; themes/your-theme-name/assets/css
$ pygmentize -S emacs -a .highlight -f html &amp;gt; pygment.css
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;&lt;span class="section-number-3"&gt;2.4&lt;/span&gt; 用 &lt;code&gt;nikola github_deploy&lt;/code&gt; 快速發佈文章&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
REF: &lt;a href="https://getnikola.com/handbook.html#deploying-to-github"&gt;https://getnikola.com/handbook.html#deploying-to-github&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-1" class="outline-4"&gt;
&lt;h4 id="sec-2-4-1"&gt;&lt;span class="section-number-4"&gt;2.4.1&lt;/span&gt; Initialize a Nikola site, if you haven’t already.&lt;/h4&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-2" class="outline-4"&gt;
&lt;h4 id="sec-2-4-2"&gt;&lt;span class="section-number-4"&gt;2.4.2&lt;/span&gt; Initialize a git repository in your Nikola source directory by running:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init .
git remote add origin git@github.com:user/user.github.io
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
url 要確認清楚，必須是 ssh 形式的，未來才可不必一直重覆輸入密碼
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-3" class="outline-4"&gt;
&lt;h4 id="sec-2-4-3"&gt;&lt;span class="section-number-4"&gt;2.4.3&lt;/span&gt; Setup branches and remotes in &lt;code&gt;conf.py&lt;/code&gt;:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;GITHUB_DEPLOY_BRANCH is the branch where Nikola-generated HTML files
will be deployed. It should be gh-pages for project pages and master
for user pages (&lt;b&gt;user.github.io&lt;/b&gt;).
&lt;/li&gt;

&lt;li&gt;GITHUB_SOURCE_BRANCH is the branch where your Nikola site source
will be deployed. We recommend and default to &lt;b&gt;src&lt;/b&gt;.
&lt;/li&gt;

&lt;li&gt;GITHUB_REMOTE_NAME is the remote to which changes are pushed.
&lt;/li&gt;

&lt;li&gt;GITHUB_COMMIT_SOURCE controls whether or not the source branch is
automatically committed to and pushed. We recommend setting it to
&lt;b&gt;True&lt;/b&gt;, unless you are automating builds with Travis CI.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-4" class="outline-4"&gt;
&lt;h4 id="sec-2-4-4"&gt;&lt;span class="section-number-4"&gt;2.4.4&lt;/span&gt; Create a &lt;code&gt;.gitignore&lt;/code&gt; file. We recommend adding at least the following entries:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cache
.doit.db
__pycache__
output
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If you set GITHUB_COMMIT_SOURCE to &lt;b&gt;False&lt;/b&gt;, you must switch to your
source branch and commit to it. Otherwise, this is done for you.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-5" class="outline-4"&gt;
&lt;h4 id="sec-2-4-5"&gt;&lt;span class="section-number-4"&gt;2.4.5&lt;/span&gt; Run &lt;code&gt;nikola github_deploy&lt;/code&gt;.&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-5"&gt;
&lt;p&gt;
This will &lt;b&gt;build&lt;/b&gt; the site, &lt;b&gt;commit&lt;/b&gt; the output folder to your deploy
branch, and &lt;b&gt;push&lt;/b&gt; to GitHub.  Your website should be up and running
within a few minutes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-6" class="outline-4"&gt;
&lt;h4 id="sec-2-4-6"&gt;&lt;span class="section-number-4"&gt;2.4.6&lt;/span&gt; 在 nikola github_deploy 之前&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-6"&gt;
&lt;p&gt;
為了要能用 &lt;code&gt;nikola github_deploy&lt;/code&gt; 指令，有以下的準備工作：
&lt;/p&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-1" name="sec-2-4-6-1"&gt;&lt;/a&gt;install ghp_import2&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install ghp_import2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2" name="sec-2-4-6-2"&gt;&lt;/a&gt;install and setup ssh&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-2"&gt;
&lt;p&gt;
為了不必一直重覆輸入 github 的帳密，可用 ssh 解決。
&lt;/p&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-2-1" name="sec-2-4-6-2-1"&gt;&lt;/a&gt;install openssh&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-6-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S openssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2-2" name="sec-2-4-6-2-2"&gt;&lt;/a&gt;follow github help page to add ssh connect to github&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-6-2-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"&gt;Generating a new SSH key and adding it to the ssh-agent - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-ssh-key-passphrases/"&gt;Working with SSH key passphrases - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;Adding a new SSH key to your GitHub account - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-2-2-1" name="sec-2-4-6-2-2-1"&gt;&lt;/a&gt;產生 ssh key&lt;br&gt;&lt;div class="outline-text-7" id="text-2-4-6-2-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;"your_email@example.com"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
螢幕上會出現
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; key &lt;span class="s1"&gt;'/home/USERNAME/.ssh/id_rsa'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
此時不要輸入密碼，直接按 &lt;kbd&gt;Enter&lt;/kbd&gt; ，否則未來 &lt;code&gt;nikola github_deploy&lt;/code&gt; 時，就要每次輸入密碼。
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2-2-2" name="sec-2-4-6-2-2-2"&gt;&lt;/a&gt;將 ssh key 加到 github 中&lt;br&gt;&lt;div class="outline-text-7" id="text-2-4-6-2-2-2"&gt;
&lt;p&gt;
依 &lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;Adding a new SSH key to your GitHub account - User Documentation&lt;/a&gt; 執行
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-3" name="sec-2-4-6-3"&gt;&lt;/a&gt;確定以 ssh 連上 github (不能是 https)&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote -v
origin  git@github.com:mariolong/mariolong.github.io &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin  git@github.com:mariolong/mariolong.github.io &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
如果不是，要用以下指令修正。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote set-url origin git@github.com:mariolong/mariolong.github.io
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 開始使用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
建立新的文章，
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola new-post -e -f orgmod
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
寫完就 build
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
或發佈吧！
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola github_deploy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
一切都就緒了，那就開始專心寫文章吧！
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>nikola</category><guid>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</guid><pubDate>Mon, 14 May 2018 01:32:19 GMT</pubDate></item><item><title>Install Haskell Applications</title><link>https://mariolong.github.io/posts/install-haskell-applications/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 前言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
在 archlinux 上想用 haskell 真不是一件容易的事，因為選擇太多。
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mariolong.github.io/posts/install-haskell-applications/"&gt;閱讀更多…&lt;/a&gt; (尚餘 1 分鐘)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>haskell</category><category>pandoc</category><category>xmonad</category><guid>https://mariolong.github.io/posts/install-haskell-applications/</guid><pubDate>Sat, 28 Apr 2018 11:16:44 GMT</pubDate></item><item><title>alsa equaler</title><link>https://mariolong.github.io/posts/alsa-equaler/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
音響要好聲，空間才是王道&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://mariolong.github.io/posts/alsa-equaler/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;，没有 DRC 前，先試試等化器&lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="https://mariolong.github.io/posts/alsa-equaler/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;，也許調一調就可用啦。在 archlinuxl 中，我用的是 alsa 的架構播放音樂，
Archlinux WIKI 的 &lt;a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture"&gt;Advanced linux Sound Architecture&lt;/a&gt; 已說明等化器的安裝及設定，照做即可。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S alsaequal
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; config&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
在 &lt;kbd&gt;/etc/asound.conf&lt;/kbd&gt; 加上以下設定：
&lt;/p&gt;

&lt;pre class="example"&gt;
ctl.equal {
    type equal;
}

pcm.plugequal {
    type equal;
    # Modify the line below if you do not
    # want to use sound card 0.
    #slave.pcm "plughw:0,0";
    # by default we want to play from more sources at time:
    slave.pcm "plug:dmix";
}

# pcm.equal {
# If you do not want the equalizer to be your
# default soundcard comment the following
# line and uncomment the above line. (You can
# choose it as the output device by addressing
# it with specific apps,eg mpg123 -a equal 06.Back_In_Black.mp3)
pcm.!default {
    type plug;
    slave.pcm plugequal;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; reboot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
讓 alsa 可用等化器
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 調整等化器&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
執行
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alsamixer -D equal
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
PS. 用 Q,W,E,Z,X,C 可分別調整左右聲道的音量。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; mpd issue&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
總是會連不上 mpd server，後來在 WIKI 中讀到一段話：
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Note that configuration file is different for each user (until not
specified else) it is saved in ~/.alsaequal.bin. so if you want to use
ALSAEqual with mpd or another software running under different user,
you can configure it using
&lt;/p&gt;

&lt;p&gt;
$ su mpd -c 'alsamixer -D equal'
&lt;/p&gt;

&lt;p&gt;
or for example, you can make a symlink to your .alsaequal.bin in his
home…
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我在 &lt;kbd&gt;/root&lt;/kbd&gt; 目錄下，建一個連到主目錄 &lt;kbd&gt;.alsaequal.bin&lt;/kbd&gt; 的連結，
mpd 即可使用，瞎打誤撞。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://mariolong.github.io/posts/alsa-equaler/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="http://www.miaofoundry.url.tw/products-and-services/DRC/"&gt;音樂再生首要難題 – 空間&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="https://mariolong.github.io/posts/alsa-equaler/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="http://www.miaofoundry.url.tw/products-and-services/DRC/whats/DRC-vs-others/"&gt;等化器(EQ)&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>alsa</category><category>linux</category><category>mpd</category><category>music</category><guid>https://mariolong.github.io/posts/alsa-equaler/</guid><pubDate>Sun, 14 Jan 2018 22:20:29 GMT</pubDate></item><item><title>Post-installation of Archlinux</title><link>https://mariolong.github.io/posts/post-installation-of-archlinux/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
首先依 &lt;a href="https://mariolong.github.io/posts/install-arch-linux-2017"&gt;Install Arch linux (2017)&lt;/a&gt; 將基本系統裝好，接著參考 &lt;a href="https://wiki.archlinux.org/index.php/General_recommendations"&gt;General
recommendations - ArchWiki&lt;/a&gt; 記錄下對我而言必要的軟體及簡單設定，讓日常進入可工作狀態。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; haskell&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
安裝的方法參看 &lt;a href="https://mariolong.github.io/posts/install-haskell-applications"&gt;Install Haskell Applications&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 桌面及外觀&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;&lt;span class="section-number-3"&gt;2.1&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S breeze&lt;span class="o"&gt;{&lt;/span&gt;,-kde4,-gtk&lt;span class="o"&gt;}&lt;/span&gt; flat-remix-git lxappearance
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Using Breeze theme and Flat Remix icon theme
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;&lt;span class="section-number-3"&gt;2.2&lt;/span&gt; lxappearance&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;p&gt;
用 lxappearance 修改 gtk 程式的外觀。
&lt;/p&gt;

&lt;p&gt;
尤其是 google chrome 書籤列的字體，可能太小。這時即可用 lxappearance 調整字型和大小。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;&lt;span class="section-number-3"&gt;2.3&lt;/span&gt; oblogout and screen lock&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Oblogout"&gt;https://wiki.archlinux.org/index.php/Oblogout&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
oblogout is an optional, configurable logout script that presents a
graphical interface (i.e. buttons) to cancel, logout, restart,
shutdown, suspend, hibernate, and lock the screen.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S oblogout

sudo nano /etc/oblogout.conf
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
修改 [looks] 中的 buttons，以顯示按鈕。
&lt;/p&gt;

&lt;pre class="example"&gt;
[looks]
buttons = cancel, restart, shutdown, lock
&lt;/pre&gt;

&lt;p&gt;
修改 [shortcuts] 中不用的命令刪掉。
&lt;/p&gt;

&lt;pre class="example"&gt;
[shortcuts]
cancel = Escape
shutdown = S
restart = R
#suspend = U
#logout = L
lock = K
#hibernate = H
&lt;/pre&gt;

&lt;p&gt;
修改 [commands] 中的命令。
&lt;/p&gt;

&lt;pre class="example"&gt;
[commands]
lock = slock
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; system&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
DPMS: display power manpage system
slock:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 網路&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; dropbox&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;p&gt;
dropbox 在 archlinux.fr 中
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S dropbox perl-file-mimeinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-2" class="outline-3"&gt;
&lt;h3 id="sec-4-2"&gt;&lt;span class="section-number-3"&gt;4.2&lt;/span&gt; qbittorrent&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S qbittorrent
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 檔案管理&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
using mc and pcmanfm-qt
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S mc pcmanfm-qt gvfs-mtp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-5-1" class="outline-3"&gt;
&lt;h3 id="sec-5-1"&gt;&lt;span class="section-number-3"&gt;5.1&lt;/span&gt; pcmanfm-qt&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-1"&gt;
&lt;p&gt;
使用 pcmanfm-qt, for mtp 傳送檔案 and dropbox
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-1-1" class="outline-4"&gt;
&lt;h4 id="sec-5-1-1"&gt;&lt;span class="section-number-4"&gt;5.1.1&lt;/span&gt; issues&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-5-1-1"&gt;
&lt;p&gt;
error message:
&lt;/p&gt;

&lt;pre class="example"&gt;
/usr/bin/xdg-open: line 922: pcmanfm: command not found
&lt;/pre&gt;

&lt;p&gt;
fix this problem:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ln -s /usr/bin/pcmanfm-qt /usr/bin/pcmanfm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-2" class="outline-3"&gt;
&lt;h3 id="sec-5-2"&gt;&lt;span class="section-number-3"&gt;5.2&lt;/span&gt; mc&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; 影音&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S alsa-utils mpd mpc ncmpcpp mpv ffmpeg sox kodi kid3 aegisub
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-1" class="outline-3"&gt;
&lt;h3 id="sec-6-1"&gt;&lt;span class="section-number-3"&gt;6.1&lt;/span&gt; alsa&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-1"&gt;
&lt;p&gt;
聲音
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-2" class="outline-3"&gt;
&lt;h3 id="sec-6-2"&gt;&lt;span class="section-number-3"&gt;6.2&lt;/span&gt; mpd, mpc, ncmpcpp&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-2"&gt;
&lt;p&gt;
音樂背景播放
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-3" class="outline-3"&gt;
&lt;h3 id="sec-6-3"&gt;&lt;span class="section-number-3"&gt;6.3&lt;/span&gt; mpv&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-3"&gt;
&lt;p&gt;
影片播放
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mpv cdda://
mpv dvd://
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-4" class="outline-3"&gt;
&lt;h3 id="sec-6-4"&gt;&lt;span class="section-number-3"&gt;6.4&lt;/span&gt; kodi&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-4"&gt;
&lt;p&gt;
影片管理
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5" class="outline-3"&gt;
&lt;h3 id="sec-6-5"&gt;&lt;span class="section-number-3"&gt;6.5&lt;/span&gt; aegisub&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-5"&gt;
&lt;p&gt;
字幕處理
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-6" class="outline-3"&gt;
&lt;h3 id="sec-6-6"&gt;&lt;span class="section-number-3"&gt;6.6&lt;/span&gt; ffmpeg&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-6"&gt;
&lt;p&gt;
影片處理
2-pass to control file size
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-7" class="outline-3"&gt;
&lt;h3 id="sec-6-7"&gt;&lt;span class="section-number-3"&gt;6.7&lt;/span&gt; dvdbackup&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-6-8" class="outline-3"&gt;
&lt;h3 id="sec-6-8"&gt;&lt;span class="section-number-3"&gt;6.8&lt;/span&gt; sox&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-8"&gt;
&lt;p&gt;
wav 轉 aiff
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-9" class="outline-3"&gt;
&lt;h3 id="sec-6-9"&gt;&lt;span class="section-number-3"&gt;6.9&lt;/span&gt; kid3&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-9"&gt;
&lt;p&gt;
音檔加 tag
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; 其它工具&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-7-1" class="outline-3"&gt;
&lt;h3 id="sec-7-1"&gt;&lt;span class="section-number-3"&gt;7.1&lt;/span&gt; emacs&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-1"&gt;
&lt;p&gt;
ripgrep
opencc: using s2twp.json
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-2" class="outline-3"&gt;
&lt;h3 id="sec-7-2"&gt;&lt;span class="section-number-3"&gt;7.2&lt;/span&gt; meld&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S meld
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-3" class="outline-3"&gt;
&lt;h3 id="sec-7-3"&gt;&lt;span class="section-number-3"&gt;7.3&lt;/span&gt; albert&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-3"&gt;
&lt;p&gt;
應用程式快速啓動器
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S albert qt5-graphicaleffects qt5-quickcontrols
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-4" class="outline-3"&gt;
&lt;h3 id="sec-7-4"&gt;&lt;span class="section-number-3"&gt;7.4&lt;/span&gt; speedcrunch (calculator)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S speedcrunch
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-5" class="outline-3"&gt;
&lt;h3 id="sec-7-5"&gt;&lt;span class="section-number-3"&gt;7.5&lt;/span&gt; calibre&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-5"&gt;
&lt;p&gt;
管理電子書，我只用來管理我的 kindle
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S calibre
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-7-6" class="outline-3"&gt;
&lt;h3 id="sec-7-6"&gt;&lt;span class="section-number-3"&gt;7.6&lt;/span&gt; nikola&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install nikola Pygments
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-7" class="outline-3"&gt;
&lt;h3 id="sec-7-7"&gt;&lt;span class="section-number-3"&gt;7.7&lt;/span&gt; htop&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-7-8" class="outline-3"&gt;
&lt;h3 id="sec-7-8"&gt;&lt;span class="section-number-3"&gt;7.8&lt;/span&gt; gnash&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S gnash-git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
可讀 .swf 檔
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; stock&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-8-1" class="outline-3"&gt;
&lt;h3 id="sec-8-1"&gt;&lt;span class="section-number-3"&gt;8.1&lt;/span&gt; python and depending modules&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-8-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S python python-pip
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8-2" class="outline-3"&gt;
&lt;h3 id="sec-8-2"&gt;&lt;span class="section-number-3"&gt;8.2&lt;/span&gt; systemd timers&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>haskell</category><category>linux</category><category>taffybar</category><category>xmonad</category><guid>https://mariolong.github.io/posts/post-installation-of-archlinux/</guid><pubDate>Mon, 27 Nov 2017 07:28:36 GMT</pubDate></item><item><title>Install Arch linux (2017)</title><link>https://mariolong.github.io/posts/install-arch-linux-2017/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
原本的 Beginners' Guide 改成了 &lt;a href="https://wiki.archlinux.org/index.php/installation_guide"&gt;Installation guide&lt;/a&gt; ，文件結構比較清楚，但是保證不適合初次安裝 archlinux 的人閱讀，也不適合一步步之執行。
&lt;/p&gt;

&lt;p&gt;
這次安裝，把目前系統應有的指令再記録下來，以備參閱。與上次安裝時所用的指令，差異不大。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 製作開機片（CD、USB、硬碟）啓動&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
從 &lt;a href="https://www.archlinux.org/download/"&gt;Arch linux Downloads&lt;/a&gt; 下載 archlinux.iso，建議用 bt 方式下載比較快。
&lt;/p&gt;

&lt;p&gt;
參考 &lt;a href="https://wiki.archlinux.org/index.php/USB_flash_installation_media"&gt;USB flash installation media&lt;/a&gt; 製作開機片 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress &amp;amp;&amp;amp; sync
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 啟動 ArchLinux 安裝程序&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
重新以 USB 開機，選擇從主選單中選擇 "Boot Arch linux" 並按
&amp;lt;enter&amp;gt;，系統將加載並給出登錄提示，自動以 'root' 登錄。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 建立網絡連接&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
ping 8.8.8.8 看看有没有網路，没有網路就啓動 dhcpcd:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl start dhcpcd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
若要用 wifi 則用:
&lt;/p&gt;

&lt;pre class="example"&gt;
# wifi-menu -o profile-name
&lt;/pre&gt;

&lt;p&gt;
ping 一下看看網路連上了嗎？
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 準備磁碟機&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
因為先安裝 windows 10，已經將磁碟分割好了。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; 檢查分區狀況&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;pre class="example"&gt;
lsblk -f
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-2" class="outline-3"&gt;
&lt;h3 id="sec-4-2"&gt;&lt;span class="section-number-3"&gt;4.2&lt;/span&gt; 格式化&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-2"&gt;
&lt;p&gt;
格式化目標 partition，免得有不可預期的狀況
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkfs.ext4 -L LABLE /dev/sdax
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-3" class="outline-3"&gt;
&lt;h3 id="sec-4-3"&gt;&lt;span class="section-number-3"&gt;4.3&lt;/span&gt; 掛載分區&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-3"&gt;
&lt;p&gt;
先掛載 root 區 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# mount /dev/sdaX /mnt
&lt;/pre&gt;

&lt;p&gt;
再掛載其他分區，/home 最好獨立分區。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# mkdir /mnt/home
# mount /dev/sda1 /mnt/home
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4" class="outline-3"&gt;
&lt;h3 id="sec-4-4"&gt;&lt;span class="section-number-3"&gt;4.4&lt;/span&gt; 建立 swap&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-4"&gt;
&lt;p&gt;
現在的 RAM 都很大，這個可以不用裝了。目前安裝了 16G 的 RAM。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4-1" class="outline-4"&gt;
&lt;h4 id="sec-4-4-1"&gt;&lt;span class="section-number-4"&gt;4.4.1&lt;/span&gt; 建立 swap file&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-4-1"&gt;
&lt;p&gt;
如果真的要裝 swap，可用檔案取代，方便好管理。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# fallocate -l 16G /swapfile
# sudo chmod 600 /swapfile
# mkswap /swapfile
# sudo mkswap /swapfile
# swapon /swpfile
# sudo swapon /swapfile
# sudo nano /etc/fstab
&lt;/pre&gt;

&lt;p&gt;
在 fstab 中加入 :
&lt;/p&gt;

&lt;pre class="example"&gt;
/swapfile none swap defaults 0 0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4-2" class="outline-4"&gt;
&lt;h4 id="sec-4-4-2"&gt;&lt;span class="section-number-4"&gt;4.4.2&lt;/span&gt; Remove swap file&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-4-2"&gt;
&lt;p&gt;
如果不用 swap，刪了就是。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Warning:&lt;/b&gt; swap is managed by systemd and will be reenabled by it after
some time. To remove a swap file, the current swap file must be turned
off. :
&lt;/p&gt;

&lt;pre class="example"&gt;
# swapoff -a
# rm -f /swapfile
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 配置安裝的環境&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-5-1" class="outline-3"&gt;
&lt;h3 id="sec-5-1"&gt;&lt;span class="section-number-3"&gt;5.1&lt;/span&gt; DNS setup (可不做)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-1"&gt;
&lt;pre class="example"&gt;
# nano /etc/resolv.conf

nameserver 168.95.1.1
nameserver 8.8.8.8
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-2" class="outline-3"&gt;
&lt;h3 id="sec-5-2"&gt;&lt;span class="section-number-3"&gt;5.2&lt;/span&gt; 選擇安裝鏡像&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-2"&gt;
&lt;p&gt;
安裝前需要編輯 /etc/pacman.d/mirrorlist，將最想使用的鏡像放到前面。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/pacman.d/mirrorlist
&lt;/pre&gt;

&lt;p&gt;
nano 簡單指令 :
&lt;/p&gt;

&lt;pre class="example"&gt;
Alt-6: copy line
C-u:   paste
C-x:   exit
&lt;/pre&gt;

&lt;p&gt;
原則上，改過 mirrorlist 就執行以下指令(可不做)： :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -Syy
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; 安裝基本系統&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;pre class="example"&gt;
# pacstrap -i /mnt base base-devel
&lt;/pre&gt;

&lt;p&gt;
if pacman complains that error: :
&lt;/p&gt;

&lt;pre class="example"&gt;
failed to commit transaction (invalid or corrupted package)
&lt;/pre&gt;

&lt;p&gt;
run the following command: :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman-key --init &amp;amp;&amp;amp; pacman-key --populate archlinux
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-1" class="outline-3"&gt;
&lt;h3 id="sec-6-1"&gt;&lt;span class="section-number-3"&gt;6.1&lt;/span&gt; 生成 fstab&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-1"&gt;
&lt;p&gt;
這個一定要做，不然後頭會很麻煩。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
# nano /mnt/etc/fstab   # 檢查一下 fstab
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-2" class="outline-3"&gt;
&lt;h3 id="sec-6-2"&gt;&lt;span class="section-number-3"&gt;6.2&lt;/span&gt; Chroot 到新系統，並作基本配置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-2"&gt;
&lt;pre class="example"&gt;
$ arch-chroot /mnt /bin/bash
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-3" class="outline-3"&gt;
&lt;h3 id="sec-6-3"&gt;&lt;span class="section-number-3"&gt;6.3&lt;/span&gt; 配置 pacman&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-3"&gt;
&lt;pre class="example"&gt;
# nano /etc/pacman.conf
&lt;/pre&gt;

&lt;p&gt;
爲了安裝 yaourt，到最後空白處加上： :
&lt;/p&gt;

&lt;pre class="example"&gt;
[archlinuxfr]
SigLevel = Never    # add: 2013/04/28
Server = http://repo.archlinux.fr/$arch
&lt;/pre&gt;

&lt;p&gt;
一般使用者用 [core], [extra] 與 [community]。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-4" class="outline-3"&gt;
&lt;h3 id="sec-6-4"&gt;&lt;span class="section-number-3"&gt;6.4&lt;/span&gt; 更新系統，並安裝 yaourt&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-4"&gt;
&lt;pre class="example"&gt;
# pacman -Syu
# pacman -S yaourt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5" class="outline-3"&gt;
&lt;h3 id="sec-6-5"&gt;&lt;span class="section-number-3"&gt;6.5&lt;/span&gt; 配置系統 Locale&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-5"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nano /etc/locale.gen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-1" class="outline-4"&gt;
&lt;h4 id="sec-6-5-1"&gt;&lt;span class="section-number-4"&gt;6.5.1&lt;/span&gt; 找到&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-1"&gt;
&lt;blockquote&gt;
&lt;p&gt;
en&lt;sub&gt;US&lt;/sub&gt;.UTF-8 UTF-8
zh&lt;sub&gt;TW&lt;/sub&gt;.UTF-8 UTF-8
zh&lt;sub&gt;CN&lt;/sub&gt;.UTF-8 UTF-8
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
把以上全部打開。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-2" class="outline-4"&gt;
&lt;h4 id="sec-6-5-2"&gt;&lt;span class="section-number-4"&gt;6.5.2&lt;/span&gt; 使 locale 生效&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-2"&gt;
&lt;pre class="example"&gt;
$ locale-gen    #使更改生效運行
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-3" class="outline-4"&gt;
&lt;h4 id="sec-6-5-3"&gt;&lt;span class="section-number-4"&gt;6.5.3&lt;/span&gt; 確認一下 locale&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-3"&gt;
&lt;pre class="example"&gt;
$ locale -a     #確認一下開啟的 locale
$ locale        #目前的 locale
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-4" class="outline-4"&gt;
&lt;h4 id="sec-6-5-4"&gt;&lt;span class="section-number-4"&gt;6.5.4&lt;/span&gt; 全域 locale 設定：對整個系統有效&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-4"&gt;
&lt;pre class="example"&gt;
$ nano /etc/locale.conf

LANG=en_US.UTF-8
&lt;/pre&gt;

&lt;p&gt;
主控台用英文，否則出現方塊字，是看不懂它的意思。等進 X 後再改成中文。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-6" class="outline-3"&gt;
&lt;h3 id="sec-6-6"&gt;&lt;span class="section-number-3"&gt;6.6&lt;/span&gt; 更改 console 字型&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-6"&gt;
&lt;p&gt;
把字改大一點，眼睛比較不吃力。先安裝字型，再設定字型。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacman -S terminus-font
setconsolefont ter-128n
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The FONT variable in &lt;kbd&gt;/etc/vconsole.conf&lt;/kbd&gt; is used to set the font at boot, persistently for all consoles.&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/vconsole.conf
...
&lt;span class="nv"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ter-128n
&lt;span class="nv"&gt;FONT_MAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8859&lt;/span&gt;-1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
ISO 8859-1，正式編號為 ISO/IEC 8859-1:1998，又稱 Latin-1 或「西歐語言」&lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-7" class="outline-3"&gt;
&lt;h3 id="sec-6-7"&gt;&lt;span class="section-number-3"&gt;6.7&lt;/span&gt; 配置系統時區&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-7"&gt;
&lt;p&gt;
可用的時區位於目錄 &lt;i&gt;usr/share/zoneinfo&lt;/i&gt; 下，可以 ls 一下。用以下指令配置系統時區：
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -s /usr/share/zoneinfo/Asia/Taipei /etc/localtime
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-8" class="outline-3"&gt;
&lt;h3 id="sec-6-8"&gt;&lt;span class="section-number-3"&gt;6.8&lt;/span&gt; 時間調整&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-8"&gt;
&lt;p&gt;
為了與 windows 雙重開機 (dual boot)，最好做以下動作：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;修改 windows 的登錄檔，用 regedit 加上一個 DWORD(32 bits) 的機碼
RealTimeIsUniversal，將其值設為 1，位置如下:

&lt;pre class="example"&gt;
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation\RealTimeIsUniversal
&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;在 windows 中關掉「網路自動對時」的功能。
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
當然，以上的動作要回到 windows 才能執行。
&lt;/p&gt;

&lt;p&gt;
在 linux 中，只需執行： :
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;timedatectl set-local-rtc &lt;span class="nb"&gt;false&lt;/span&gt;
timedatectl set-ntp &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
並將 utc 時間寫入 BIOS 中即可。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hwclock --systohc --utc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-9" class="outline-3"&gt;
&lt;h3 id="sec-6-9"&gt;&lt;span class="section-number-3"&gt;6.9&lt;/span&gt; 設置主機名稱&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/hostname
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
加入
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
hostname
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; 再一次設定網路&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;p&gt;
簡單啓動 dhcpcd :
&lt;/p&gt;

&lt;pre class="example"&gt;
# systemctl enable dhcpcd
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-1" class="outline-3"&gt;
&lt;h3 id="sec-7-1"&gt;&lt;span class="section-number-3"&gt;7.1&lt;/span&gt; WIFI&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-1"&gt;
&lt;p&gt;
用 netctl 啓動 wifi
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-2" class="outline-3"&gt;
&lt;h3 id="sec-7-2"&gt;&lt;span class="section-number-3"&gt;7.2&lt;/span&gt; ADSL&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-2"&gt;
&lt;p&gt;
如果要用 ADSL，則這個很重要，不然重開機時，就會沒網路可用。
&lt;/p&gt;

&lt;p&gt;
install the network card that is supposed to be connected to the
DSL-Modem into your computer. After adding your newly installed
network card to the modules.conf/modprobe.conf install therp-pppoe
package :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S rp-pppoe
$ pppoe-setup
&lt;/pre&gt;

&lt;p&gt;
run the pppoe-setup script to configure your connection After you have
entered all the data, you can connect and disconnect your line with :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl start adsl
&lt;/pre&gt;

&lt;p&gt;
and :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl stop adsl
&lt;/pre&gt;

&lt;p&gt;
respectively. The setup is usually easy and straightforward, but feel
free to read the manpages for hints. If you want to automatically 'dial
in' at boot, issue command :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl enable adsl

or

$ systemctl disable adsl
&lt;/pre&gt;

&lt;p&gt;
to remove auto 'dial in' at boot.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; mkinitcpio&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;p&gt;
增加 lvm2 到 hooks 後，執行 &lt;kbd&gt;mkinitcpio&lt;/kbd&gt; :
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/mkinitcpio.conf

HOOKS=(... udev ... block lvm2 filesystems ...)

# mkinitcpio -p linux
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9" class="outline-2"&gt;
&lt;h2 id="sec-9"&gt;&lt;span class="section-number-2"&gt;9&lt;/span&gt; Install and configure a bootloader&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-9"&gt;
&lt;p&gt;
Install the grub-bios package and then run grub-install: :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S grub-bios                       ## 安裝 grub-bios
# grub-install --target=i386-pc --recheck /dev/sda  ## 安裝到 boot 區
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-1" class="outline-3"&gt;
&lt;h3 id="sec-9-1"&gt;&lt;span class="section-number-3"&gt;9.1&lt;/span&gt; 自動尋找其它的 OS&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-1"&gt;
&lt;p&gt;
如果有其他的 OS，這個就很重要。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S os-prober
&lt;/pre&gt;

&lt;p&gt;
或是直接在 /etc/grub.d/40\&lt;sub&gt;custom&lt;/sub&gt; 加上以下指令 :
&lt;/p&gt;

&lt;pre class="example"&gt;
menuentry "Windows 10" --class windows --class os {
  insmod ntfs
  search --no-floppy --set=root --fs-uuid $your_uuid_here$
  ntldr /bootmgr
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-2" class="outline-3"&gt;
&lt;h3 id="sec-9-2"&gt;&lt;span class="section-number-3"&gt;9.2&lt;/span&gt; 安裝 microcode&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-2"&gt;
&lt;p&gt;
這步要在 grub-mkconfig 之前做 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S intel-ucode
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-3" class="outline-3"&gt;
&lt;h3 id="sec-9-3"&gt;&lt;span class="section-number-3"&gt;9.3&lt;/span&gt; 自動產生 grub.cfg&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-3"&gt;
&lt;p&gt;
這個一定要做，不然重開機時，就等著進 grub shell，很麻煩。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10" class="outline-2"&gt;
&lt;h2 id="sec-10"&gt;&lt;span class="section-number-2"&gt;10&lt;/span&gt; 重啓&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-10"&gt;
&lt;pre class="example"&gt;
# exit
# umount /mnt
# reboot
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10-1" class="outline-3"&gt;
&lt;h3 id="sec-10-1"&gt;&lt;span class="section-number-3"&gt;10.1&lt;/span&gt; 確認網路連線&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-10-1"&gt;
&lt;p&gt;
root 重啓後，ping 一下看看網路連上了嗎？如果沒有，手動連線。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
  # ping 8.8.8.8
  # systemctl start dhcpcd
或
  # netctl start &amp;lt;wifi-profile-name&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10-2" class="outline-3"&gt;
&lt;h3 id="sec-10-2"&gt;&lt;span class="section-number-3"&gt;10.2&lt;/span&gt; update system（可不做）&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-10-2"&gt;
&lt;pre class="example"&gt;
# pacman -Syu
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11" class="outline-2"&gt;
&lt;h2 id="sec-11"&gt;&lt;span class="section-number-2"&gt;11&lt;/span&gt; post-installation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-11"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-11-1" class="outline-3"&gt;
&lt;h3 id="sec-11-1"&gt;&lt;span class="section-number-3"&gt;11.1&lt;/span&gt; 設置 Root 密碼並創建一般用戶&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-1"&gt;
&lt;pre class="example"&gt;
$ passwd
$ useradd -m -s /bin/bash  -g users -G video,storage,optical,lp,scanner,games,wheel username
$ passwd username
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-2" class="outline-3"&gt;
&lt;h3 id="sec-11-2"&gt;&lt;span class="section-number-3"&gt;11.2&lt;/span&gt; 安裝 Sudo&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-2"&gt;
&lt;pre class="example"&gt;
$ pacman -S sudo
$ EDITOR=nano visudo
&lt;/pre&gt;

&lt;p&gt;
允許 wheel 用戶組成員無密碼使用 sudo： :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ visudo
&lt;/pre&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-11-2-0-1" name="sec-11-2-0-1"&gt;&lt;/a&gt;輸入&lt;br&gt;&lt;div class="outline-text-5" id="text-11-2-0-1"&gt;
&lt;blockquote&gt;
&lt;p&gt;
%wheel ALL=(ALL) NOPASSWD:ALL
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
再來是設定 sudo，隨便找一個空白行加上： :
&lt;/p&gt;

&lt;pre class="example"&gt;
username ALL=(ALL) ALL
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-3" class="outline-3"&gt;
&lt;h3 id="sec-11-3"&gt;&lt;span class="section-number-3"&gt;11.3&lt;/span&gt; 登出，並以新的用戶名稱登入&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-11-4" class="outline-3"&gt;
&lt;h3 id="sec-11-4"&gt;&lt;span class="section-number-3"&gt;11.4&lt;/span&gt; 設定聲音 alas&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-4"&gt;
&lt;p&gt;
安裝音效驅動，直接用 alas，不要考慮太多。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S alsa-utils
&lt;/pre&gt;

&lt;p&gt;
將帳號加入音效使用權： :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ sudo gpasswd -a username audio
&lt;/pre&gt;

&lt;p&gt;
alsa 預設是靜音，以 alsamixer 手動打開聲音 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ alsamixer
&lt;/pre&gt;

&lt;p&gt;
或者命令列直接開啓 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ amixer sset Master unmute
&lt;/pre&gt;

&lt;p&gt;
測試一下有沒有聲音 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ speaker-test -c 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-5" class="outline-3"&gt;
&lt;h3 id="sec-11-5"&gt;&lt;span class="section-number-3"&gt;11.5&lt;/span&gt; 安裝 x11&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-5"&gt;
&lt;pre class="example"&gt;
# pacman -S xorg-{server,apps} mesa
&lt;/pre&gt;

&lt;p&gt;
因為要用 xlogin，所以 &lt;kbd&gt;xorg-xinit&lt;/kbd&gt; 可以不用裝了。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-6" class="outline-3"&gt;
&lt;h3 id="sec-11-6"&gt;&lt;span class="section-number-3"&gt;11.6&lt;/span&gt; 裝顯卡驅動&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-6"&gt;
&lt;p&gt;
ATi 用戶：
&lt;/p&gt;

&lt;p&gt;
直接裝開源驅動
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-amdgpu
&lt;/pre&gt;

&lt;p&gt;
或是用舊的
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-ati
&lt;/pre&gt;

&lt;p&gt;
intel 用戶：
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-intel libav-intel-driver
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-7" class="outline-3"&gt;
&lt;h3 id="sec-11-7"&gt;&lt;span class="section-number-3"&gt;11.7&lt;/span&gt; 安裝字體&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-7"&gt;
&lt;p&gt;
加上 &lt;code&gt;ttf-liberation&lt;/code&gt; 修正部份 PDF 字型，此為 google-chrome 新的依賴。為了罕見字，加裝 &lt;code&gt;ttf-hanazono&lt;/code&gt;
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S ttf-tw ttf-dejavu ttf-liberation ttf-hanazono
$ yaourt -S adobe-source-{code,sans,serif}-pro-fonts adobe-source-han-{sans,serif}-{cn,jp,kr,otc,tw}-fonts
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-8" class="outline-3"&gt;
&lt;h3 id="sec-11-8"&gt;&lt;span class="section-number-3"&gt;11.8&lt;/span&gt; 讓 X 可以顯示中文&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-8"&gt;
&lt;pre class="example"&gt;
$ nano ~/.xinitrc

export LANG=zh_TW.UTF-8
export LC_ALL="zh_TW.UTF-8"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-9" class="outline-3"&gt;
&lt;h3 id="sec-11-9"&gt;&lt;span class="section-number-3"&gt;11.9&lt;/span&gt; 將右邊的數字鍵盤預設爲方向鍵&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-9"&gt;
&lt;pre class="example"&gt;
$ yaourt -S numlockx

$ nano ~/.xinitrc

numlockx &amp;amp;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-10" class="outline-3"&gt;
&lt;h3 id="sec-11-10"&gt;&lt;span class="section-number-3"&gt;11.10&lt;/span&gt; 安裝桌面&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-10"&gt;
&lt;p&gt;
目前使用 lxqt + xmonad。lxqt
&lt;/p&gt;

&lt;p&gt;
安裝 lxqt:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S lxqt
&lt;/pre&gt;

&lt;p&gt;
先修改 &lt;kbd&gt;pacman.conf&lt;/kbd&gt;:
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/pacman.conf
&lt;/pre&gt;

&lt;p&gt;
然後在 &lt;kbd&gt;[community]&lt;/kbd&gt; 之前加上:
&lt;/p&gt;

&lt;pre class="example"&gt;
[haskell-core]
Server = http://xsounds.org/~haskell/core/$arch
&lt;/pre&gt;

&lt;p&gt;
接著才可安裝 xmonad 和 taffybar:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S haskell-xmonad haskell-xmonad-contrib haskell-taffybar
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-11" class="outline-3"&gt;
&lt;h3 id="sec-11-11"&gt;&lt;span class="section-number-3"&gt;11.11&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-11"&gt;
&lt;p&gt;
Using Breeze theme and Flat Remix icon theme:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S breeze{,-kde4,-gtk} flat-remix-git lxappearance
&lt;/pre&gt;

&lt;p&gt;
進 lxappearance 設定 theme and icon theme
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-12" class="outline-3"&gt;
&lt;h3 id="sec-11-12"&gt;&lt;span class="section-number-3"&gt;11.12&lt;/span&gt; 安裝中文輸入法&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-12"&gt;
&lt;p&gt;
沒有其它選擇，就用 fcitx。
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S fcitx-im fcitx-configtool fcitx-chewing
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-13" class="outline-3"&gt;
&lt;h3 id="sec-11-13"&gt;&lt;span class="section-number-3"&gt;11.13&lt;/span&gt; install google chrome&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-13"&gt;
&lt;pre class="example"&gt;
$ yaourt -S google-chrome
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-14" class="outline-3"&gt;
&lt;h3 id="sec-11-14"&gt;&lt;span class="section-number-3"&gt;11.14&lt;/span&gt; 安裝文字編輯器&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-14"&gt;
&lt;p&gt;
現在已經沒有別的選擇了，只能用 emacs
這個神的編輯器，因為她實在是太強大了， 讓我不忍放棄她。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S emacs
&lt;/pre&gt;

&lt;p&gt;
可用的系統成型了，但是， 後面&amp;lt;post-installation-of-archlinux&amp;gt;
還有許多需要再調整的。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-12" class="outline-2"&gt;
&lt;h2 id="sec-12"&gt;&lt;span class="section-number-2"&gt;12&lt;/span&gt; issues&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-12"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-12-1" class="outline-3"&gt;
&lt;h3 id="sec-12-1"&gt;&lt;span class="section-number-3"&gt;12.1&lt;/span&gt; kvm:disable by bios&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-12-1"&gt;
&lt;p&gt;
iVT enable @ bios
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Fonts#Console_fonts"&gt;https://wiki.archlinux.org/index.php/Fonts#Console_fonts&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="https://zh.wikipedia.org/wiki/ISO/IEC_8859-1"&gt;https://zh.wikipedia.org/wiki/ISO/IEC_8859-1&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><guid>https://mariolong.github.io/posts/install-arch-linux-2017/</guid><pubDate>Mon, 20 Nov 2017 09:00:00 GMT</pubDate></item><item><title>ffmpeg and x265</title><link>https://mariolong.github.io/posts/ffmpeg-and-x265/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://forum.doom9.org/showthread.php?t=172458"&gt;http://forum.doom9.org/showthread.php?t=172458&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Suggestion for x265's --tune film
Several days ago we asked the x265's team how could we participate in the discussion, and they left me with e-mail address. When we finished writing the email, we are also glad to post it here so all of you are welcome to discuss about the topic: How to keep the film grain and details at higher quality when using x265?&lt;/p&gt;
&lt;p&gt;We take several movie scenes with moderate level of film grain, rich details, and some dark scenes. Then we take out the tests between x264-10bit and x265-10bit:&lt;/p&gt;
&lt;p&gt;(NOTE there are --input-depth 10 for both sets of parameters. Do NOT just copy and paste if you are not encoding 10-bit input)&lt;/p&gt;
&lt;p&gt;x264: --preset veryslow --tune film --crf 19.0 --qcomp 0.75 --input-depth 10(a fairly trusted setting )&lt;/p&gt;
&lt;p&gt;x265: --preset slower --ctu 32 --max-tu-size 16 --crf 20.0 --tu-intra-depth 2 --tu-inter-depth 2 --rdpenalty 2 --me 3 --subme 5 --merange 44 --b-intra --no-amp --ref 5 --weightb --keyint 360 --min-keyint 1 --bframes 8 --aq-mode 1 --aq-strength 1.0 --rd 5 --psy-rd 1.5 --psy-rdoq 5.0 --rdoq-level 1 --no-sao --no-open-gop --rc-lookahead 80 --scenecut 40 --max-merge 4 --qcomp 0.8 --no-strong-intra-smoothing --deblock -2:-2 --qg-size 16 --pbratio 1.2
(We've tested hundreds of parameter combinations and we conclude this set is the best outcome)&lt;/p&gt;
&lt;p&gt;We compare the quality with our eyes, NOT psnr/ssim, which favors blurriness over grain keeping.
x264 gives an 118% size compared to x265, with nearly the same visual quality. We can also drop the bit-rate of x264 a bit, but then AVC outcome necessarily looks worse. At this point we believe x265 claims a victory, not at extremely low bit-rate cases where HEVC blurriness looks better than AVC blockiness, but rather a high-quality, near-transparent encoding.&lt;/p&gt;
&lt;p&gt;Our test focus on several RC parameters: --ctu, --tu, --crf, --qcomp, --aq-mode, --aq-strength, --psy, --qcomp --qg-size...These parameters can alter RC behavior with minor impact on the speed. We took some iterative method with genetic algorithms to select the possibly best parameter sets out of infinite.&lt;/p&gt;
&lt;p&gt;Here are some of our comments:
--ctu, --max-tu-size: This two should be decreased in 1080p @ high-quality encoding. Keeping other parameters constant, tweaking --ctu 64-&amp;gt;32, --tu 32-&amp;gt;16 gives even better quality with nearly 15% of size-decrease, in crf mode. We assume that adopting larger CU and TU actually wastes the bit-rate by producing over-smoothed block, forcing bit-rate to rise in order to keep a "constant rate-factor". So we'd better just leave them smaller, at least under 1080p&lt;/p&gt;
&lt;p&gt;--crf: x265 gives a default value 28. This is way too low to compete against x264's default value 23. Many users believe by tweaking crf they can choose between quality and size without other concerns, but they are wrong; sometimes, tweaking other parameters is more efficient. --crf need to be coupled with other parameters properly tuned.&lt;/p&gt;
&lt;p&gt;--qcomp: the lower your crf, the higher the quality, and you should set --qcomp to be higher. This is also true for x264. Our test suggest --qcomp 0.8 is very essential when x265_crf&amp;lt;23.&lt;/p&gt;
&lt;p&gt;--aq-mode: keep it at 1. aq-mode=3 gives wired bit-rate for nothing.&lt;/p&gt;
&lt;p&gt;--aq-strength: default 1.0 is pretty good.&lt;/p&gt;
&lt;p&gt;--psy: the primary weapon to fight blurriness. --psy-rd 1.5 --psy-rdoq 5.0 --rdoq-level 1 works better than --tune grain's settings, trust me.&lt;/p&gt;
&lt;p&gt;--deblock -2:-2: This is also a rule of thumb since x264's era: using smaller numbers if you prioritize quality.&lt;/p&gt;
&lt;p&gt;--qg-size 16: The larger number you set, the smaller file you get, but much worse quality for trade. Just change it to 16 instead of 64; this is worthy.&lt;/p&gt;
&lt;p&gt;--no-sao: SAO smooths everything up. Do NOT use it unless you really want to.&lt;/p&gt;
&lt;p&gt;--me_range 44: me_range has minor impact on speed when coupled with low level of me and subme; but that's not true for --me 3 --subme 5. Decrease it a bit in 1080p do you a favor with little sacrifice.&lt;/p&gt;
&lt;p&gt;--no-rect --no-amp: They trade time for nothing. Do NOT enable them unless you really have time to waste.&lt;/p&gt;
&lt;p&gt;So, here are our suggestions for x265 --tune film:&lt;/p&gt;
&lt;p&gt;--ctu 32 --max-tu-size 16 --qcomp 0.8 --aq-mode 1 --aq-strength 1.0 --psy-rd 1.8 --psy-rdoq 5.0 --rdoq-level 1 --deblock -2:-2 --qg-size 16 --no-sao --me_range 44 --no-rect --no-amp&lt;/p&gt;
&lt;p&gt;By setting these parameters, you can probably set your crf to be around 22~19, and it gives you considerably good output with small size. if you set crf=21~22, --qcomp 0.75 is recommended.
We don't see any advantage for x265 if you are targeting at x264_crf&amp;lt;=16. At that point x265 requires even more bit-rate to keep the details.&lt;/p&gt;
&lt;p&gt;Furthermore, here are some other recommendations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Except for --tune and --preset, add another parameter "--expectation" and let user specify whether he wishes a high, medium or low quality(with respective size). This can also be derived if --crf is specified. Then use the input to change the rc behaviors. For example, if the user is expecting high quality rather than a crf=28 blurriness, increase --qcomp to 0.8.&lt;/li&gt;
&lt;li&gt;Change RC behaviors and speed options based on resolution. 720p/1080p/1440p/4K don't optimally share a same set of parameters. For example, --max-tu-size --ctu --me_range.&lt;/li&gt;
&lt;li&gt;Give less bias/more penalty to bigger CUs and TUs, especially at higher quality expectation and lower resolution. --rd-penalty 2 is a very useful parameter, but it only prohibits TU size of 32x32. Let's impose more penalties to similar cases.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thank you for patiently reading this email, and I'm ready to conclude it:
So far x265 team has done a fantastic job by offering the best encoder (at low bit-rate), but let us greedily urge more. We wish x265 to be best not only at low quality, but also best overall. At the same time, we are willing to help the team with our own effort.&lt;/p&gt;
&lt;p&gt;Regards,
LittlePox&lt;/p&gt;
&lt;p&gt;2015/08/11&lt;/p&gt;&lt;/div&gt;</description><guid>https://mariolong.github.io/posts/ffmpeg-and-x265/</guid><pubDate>Mon, 21 Nov 2016 02:12:28 GMT</pubDate></item><item><title>Using systemd to manage user session</title><link>https://mariolong.github.io/posts/using-systemd-to-manage-user-session/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;create /etc/systemd/system/user@.service.d/dbus_env.conf&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Unit]
Wants=dbus.service

[Service]
Environment=DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/%I/bus
&lt;/pre&gt;
&lt;p&gt;show environment variables&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ systemctl --user show-environment|grep DBUS
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
&lt;/pre&gt;
&lt;p&gt;create my_stuff.target&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Unit]
Description=My services
Wants=dbus.service
AllowIsolate=true

[Install]
Alias=default.target
&lt;/pre&gt;
&lt;p&gt;enable it&lt;/p&gt;
&lt;pre class="literal-block"&gt;
systemctl --user enable my_stuff_target
&lt;/pre&gt;
&lt;p&gt;create ~/.config/systemd/user/alsa-tray.service&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Unit]
Description=show volume icon on systray

[Service]
Type=simple
Environment=DISPLAY=:0
ExecStart=/usr/bin/python2 /usr/bin/alsa-tray

[Install]
WantedBy=my_stuff.target
&lt;/pre&gt;
&lt;p&gt;enable it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ systemctl --user enable alsa-tray.service
&lt;/pre&gt;
&lt;p&gt;reboot and success&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;參考文件&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://immae.eu/blog/2014/05/26/manage-your-session-with-systemd/"&gt;http://immae.eu/blog/2014/05/26/manage-your-session-with-systemd/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://mariolong.github.io/posts/using-systemd-to-manage-user-session/</guid><pubDate>Sat, 08 Oct 2016 08:36:16 GMT</pubDate></item><item><title>Show volume icon on systray</title><link>https://mariolong.github.io/posts/show-volume-icon-on-systray/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;試用了以下幾個可以在 linux systray 顯示音量 icon 的小程式：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;volti&lt;/li&gt;
&lt;li&gt;volicon&lt;/li&gt;
&lt;li&gt;volumeicon&lt;/li&gt;
&lt;li&gt;alsa-tray&lt;/li&gt;
&lt;li&gt;volwheel&lt;/li&gt;
&lt;li&gt;pnmixer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最後決定用 alsa-tray，原因是佔用的記憶體最少，而且操作模式不會很奇怪。&lt;/p&gt;
&lt;p&gt;再寫個小小的 service，用 systemd 啟動就大功告成了。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[Unit]
Description=show volume icon on systray

[Service]
Type=simple

ExecStart=/usr/bin/alsa-tray
ExecReload=/bin/kill -HUP $MAINPID

[Install]
WantedBy=default.target
&lt;/pre&gt;&lt;/div&gt;</description><category>alsa</category><category>systray</category><guid>https://mariolong.github.io/posts/show-volume-icon-on-systray/</guid><pubDate>Tue, 13 Sep 2016 00:55:30 GMT</pubDate></item></channel></rss>