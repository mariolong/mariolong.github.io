<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life (文章分類：nikola)</title><link>https://github.com/mariolong/mariolong.github.io/</link><description></description><atom:link href="https://mariolong.github.io/categories/nikola.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Tue, 22 May 2018 07:19:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>部落格，重回 nikola+org-mode</title><link>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
掙扎了許久，還是先用&lt;a href="https://getnikola.com/"&gt;nikola&lt;/a&gt;記錄一些事，畢竟比較熟悉，能快一點上手。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 安裝&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip nikola
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 設定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
執行&lt;code&gt;nikola init&lt;/code&gt;後，依指示設定，比較省事。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola init &amp;lt;blog-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;blog-name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;&lt;span class="section-number-3"&gt;2.1&lt;/span&gt; configuration file&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
修改&lt;code&gt;conf.py&lt;/code&gt;，慢慢改，內容很多，不必急於一時。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;&lt;span class="section-number-3"&gt;2.2&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola theme install bootstrap
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2-1" class="outline-4"&gt;
&lt;h4 id="sec-2-2-1"&gt;&lt;span class="section-number-4"&gt;2.2.1&lt;/span&gt; &lt;span class="todo TODO"&gt;TODO&lt;/span&gt; add local search&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-2-1"&gt;
&lt;p&gt;
&lt;a href="https://plugins.getnikola.com/v7/localsearch/"&gt;https://plugins.getnikola.com/v7/localsearch/&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;&lt;span class="section-number-3"&gt;2.3&lt;/span&gt; org-mod&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
先安裝 plugin orgmode，再做一點點微調即可。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola plugin -i orgmode
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
開啟&lt;code&gt;&amp;lt;blog-name&amp;gt;/plugins/orgmode/init.el&lt;/code&gt;，加上以下的程式碼。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-1" class="outline-4"&gt;
&lt;h4 id="sec-2-3-1"&gt;&lt;span class="section-number-4"&gt;2.3.1&lt;/span&gt; 刪除不必要的空白&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-1"&gt;
&lt;p&gt;
換行時，在兩個字間會有一個空白，不好看。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; https://github.com/emacs-china/emacs-china.github.io/blob/master/blog/FengShu/org-remove-useless-space-between-chinese.org&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;eh-org-clean-space&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt; &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"在 export 为 HTML 时，删除中文之间不必要的空格"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-export-derived-backend-p&lt;/span&gt; &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="ss"&gt;'html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;regexp&lt;/span&gt; &lt;span class="s"&gt;"[[:multibyte:]]"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string &lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; org 默认将一个换行符转换为空格，但中文不需要这个空格，删除。&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(%s\\) *\n *\\(%s\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; 删除粗体之前的空格&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(%s\\) +\\(&amp;lt;\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; 删除粗体之后的空格&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(&amp;gt;\\) +\\(%s\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'org-export-filter-paragraph-functions&lt;/span&gt;
	     &lt;span class="ss"&gt;'eh-org-clean-space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-2" class="outline-4"&gt;
&lt;h4 id="sec-2-3-2"&gt;&lt;span class="section-number-4"&gt;2.3.2&lt;/span&gt; Convert inline verbatim to kbd when HTML export&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-2"&gt;
&lt;p&gt;
ref: &lt;a href="https://emacs-china.org/t/org-mode/1165"&gt;https://emacs-china.org/t/org-mode/1165&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
change &lt;kbd&gt;verbatim&lt;/kbd&gt; to &lt;kbd&gt;kbd&lt;/kbd&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;code&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-html-text-markup-alist&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;b&amp;gt;%s&amp;lt;/b&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;code&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;code&amp;gt;%s&amp;lt;/code&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;italic&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;i&amp;gt;%s&amp;lt;/i&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;strike-through&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;del&amp;gt;%s&amp;lt;/del&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;underline&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;span class=\"underline\"&amp;gt;%s&amp;lt;/span&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;verbatim&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;kbd&amp;gt;%s&amp;lt;/kbd&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;&lt;span class="section-number-3"&gt;2.4&lt;/span&gt; nikola github_deploy&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
REF: &lt;a href="https://getnikola.com/handbook.html#deploying-to-github"&gt;https://getnikola.com/handbook.html#deploying-to-github&lt;/a&gt;
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Initialize a Nikola site, if you haven’t already.
&lt;/li&gt;

&lt;li&gt;Initialize a git repository in your Nikola source directory by running:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init .
git remote add origin git@github.com:user/repository.git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Setup branches and remotes in &lt;code&gt;conf.py&lt;/code&gt;:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;GITHUB_DEPLOY_BRANCH is the branch where Nikola-generated HTML files will be deployed. It should be gh-pages for project pages and master for user pages (user.github.io).
&lt;/li&gt;
&lt;li&gt;GITHUB_SOURCE_BRANCH is the branch where your Nikola site source will be deployed. We recommend and default to src.
&lt;/li&gt;
&lt;li&gt;GITHUB_REMOTE_NAME is the remote to which changes are pushed.
&lt;/li&gt;
&lt;li&gt;GITHUB_COMMIT_SOURCE controls whether or not the source branch is automatically committed to and pushed. We recommend setting it to True, unless you are automating builds with Travis CI.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Create a &lt;code&gt;.gitignore&lt;/code&gt; file. We recommend adding at least the following entries:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cache
.doit.db
__pycache__
output
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If you set GITHUB_COMMIT_SOURCE to False, you must switch to your source branch and commit to it. Otherwise, this is done for you.
&lt;/p&gt;

&lt;p&gt;
Run &lt;code&gt;nikola github_deploy&lt;/code&gt;. This will &lt;b&gt;build&lt;/b&gt; the site, &lt;b&gt;commit&lt;/b&gt; the
output folder to your deploy branch, and &lt;b&gt;push&lt;/b&gt; to GitHub. Your website
should be up and running within a few minutes.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-1" class="outline-4"&gt;
&lt;h4 id="sec-2-4-1"&gt;&lt;span class="section-number-4"&gt;2.4.1&lt;/span&gt; install ghp_import2&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install ghp_import2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-2" class="outline-4"&gt;
&lt;h4 id="sec-2-4-2"&gt;&lt;span class="section-number-4"&gt;2.4.2&lt;/span&gt; ssh&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-2"&gt;
&lt;/div&gt;&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-2-1" name="sec-2-4-2-1"&gt;&lt;/a&gt;install openssh&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S openssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-2-2" name="sec-2-4-2-2"&gt;&lt;/a&gt;follow github help page to add ssh connect to github&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-2-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"&gt;Generating a new SSH key and adding it to the ssh-agent - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-ssh-key-passphrases/"&gt;Working with SSH key passphrases - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;Adding a new SSH key to your GitHub account - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -p
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-2-3" name="sec-2-4-2-3"&gt;&lt;/a&gt;fix &lt;code&gt;.git/config&lt;/code&gt;&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-2-3"&gt;
&lt;p&gt;
&lt;a href="https://stackoverflow.com/questions/13509293/git-fatal-could-not-read-from-remote-repository"&gt;https://stackoverflow.com/questions/13509293/git-fatal-could-not-read-from-remote-repository&lt;/a&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
I was facing same issue a while ago…
my .git/config had
&lt;/p&gt;

&lt;p&gt;
url = git@github.com:manishnakar/polymer-demo.git
&lt;/p&gt;

&lt;p&gt;
I replaced it with
&lt;/p&gt;

&lt;p&gt;
url = &lt;a href="https://github.com/manishnakar/polymer-demo.git"&gt;https://github.com/manishnakar/polymer-demo.git&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
and it works now:)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-2-4" name="sec-2-4-2-4"&gt;&lt;/a&gt;&lt;span class="todo TODO"&gt;TODO&lt;/span&gt; i don't want to input password twice&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 開始使用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
建立新的文章，
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola new-post -e -f orgmod
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
寫完就 build
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
或發佈吧！
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola github_deploy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
一切都就緒了，那就開始專心寫文章吧！
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>nikola</category><guid>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</guid><pubDate>Mon, 14 May 2018 01:32:19 GMT</pubDate></item><item><title>在 Archlinux 安裝 nginx</title><link>https://mariolong.github.io/posts/an-zhuang-nginx/</link><dc:creator>Mario Long</dc:creator><description>&lt;div&gt;&lt;p&gt;用 nikola 寫了些 blog，裝上 nginx 只是為了能在 localhost 看看這些文章。
很大材小用吧。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安裝&lt;/h2&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e754333b4c0e47998ac5c902786e2d43-1"&gt;&lt;/a&gt;yaourt -S nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_2b36c50bf23941c49d5206110e9c7303-1"&gt;&lt;/a&gt;sudo nano /etc/nginx/nginx.conf
&lt;/pre&gt;&lt;p&gt;預設的 nginx.conf 的結構很單純。&lt;tt class="docutils literal"&gt;$ grep &lt;span class="pre"&gt;-v&lt;/span&gt; '#' /etc/nginx/nginx.conf&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-1"&gt;&lt;/a&gt;worker_processes  1;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-3"&gt;&lt;/a&gt;events {
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-4"&gt;&lt;/a&gt;    worker_connections  1024;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-5"&gt;&lt;/a&gt;}
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-8"&gt;&lt;/a&gt;http {
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-9"&gt;&lt;/a&gt;    include       mime.types;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-10"&gt;&lt;/a&gt;    default_type  application/octet-stream;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-12"&gt;&lt;/a&gt;    sendfile        on;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-14"&gt;&lt;/a&gt;    keepalive_timeout  65;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-16"&gt;&lt;/a&gt;    server {
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-17"&gt;&lt;/a&gt;        listen       80;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-18"&gt;&lt;/a&gt;        server_name  localhost;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-20"&gt;&lt;/a&gt;        location / {
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-21"&gt;&lt;/a&gt;            root   /usr/share/nginx/html;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-22"&gt;&lt;/a&gt;            index  index.html index.htm;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-23"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-25"&gt;&lt;/a&gt;        error_page   500 502 503 504  /50x.html;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-26"&gt;&lt;/a&gt;        location = /50x.html {
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-27"&gt;&lt;/a&gt;            root   /usr/share/nginx/html;
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-28"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-29"&gt;&lt;/a&gt;    }
&lt;a name="rest_code_6ea3157bd9a84a26b21af59cc1eb0d89-30"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;p&gt;以下是我的設定&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-1"&gt;&lt;/a&gt;worker_processes  1;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-3"&gt;&lt;/a&gt;events {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-4"&gt;&lt;/a&gt;    worker_connections  1024;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-5"&gt;&lt;/a&gt;}
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-7"&gt;&lt;/a&gt;http {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-8"&gt;&lt;/a&gt;    include       mime.types;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-9"&gt;&lt;/a&gt;    default_type  application/octet-stream;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-11"&gt;&lt;/a&gt;    sendfile        on;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-12"&gt;&lt;/a&gt;    keepalive_timeout  65;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-14"&gt;&lt;/a&gt;    server {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-15"&gt;&lt;/a&gt;        listen       8000;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-16"&gt;&lt;/a&gt;        server_name  localhost;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-17"&gt;&lt;/a&gt;        location / {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-18"&gt;&lt;/a&gt;            root   /home/mariolong/Programing/wen-de-www/www/output;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-19"&gt;&lt;/a&gt;            index  index.html index.htm;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-20"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-21"&gt;&lt;/a&gt;        error_page   500 502 503 504  /50x.html;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-22"&gt;&lt;/a&gt;        location = /50x.html {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-23"&gt;&lt;/a&gt;            root   /usr/share/nginx/html;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-24"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-25"&gt;&lt;/a&gt;    }
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-26"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-27"&gt;&lt;/a&gt;    server {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-28"&gt;&lt;/a&gt;        listen       8088;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-29"&gt;&lt;/a&gt;        server_name  localhost;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-30"&gt;&lt;/a&gt;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-31"&gt;&lt;/a&gt;        location / {
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-32"&gt;&lt;/a&gt;            root /home/mariolong/Documents/myBlog/output;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-33"&gt;&lt;/a&gt;            index  index.html index.htm;
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-34"&gt;&lt;/a&gt;        }
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-35"&gt;&lt;/a&gt;    }
&lt;a name="rest_code_687cc4012fb74c888b34ed32f0b739db-36"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;p&gt;如此配置好，文章寫好後，只要 &lt;tt class="docutils literal"&gt;nikola build&lt;/tt&gt; 即可，不必再 &lt;tt class="docutils literal"&gt;nikola serve&lt;/tt&gt;。&lt;/p&gt;
&lt;p&gt;回到 browser 中，直接訪問文章就好，方便多了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;啟動&lt;/h2&gt;
&lt;p&gt;以下分別為啟動、重啟、停止、開機啟動&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_8e0b2532621f40b0914d844301117dfb-1"&gt;&lt;/a&gt;sudo systemctl start nginx
&lt;a name="rest_code_8e0b2532621f40b0914d844301117dfb-2"&gt;&lt;/a&gt;sudo systemctl restart nginx
&lt;a name="rest_code_8e0b2532621f40b0914d844301117dfb-3"&gt;&lt;/a&gt;sudo systemctl stop nginx
&lt;a name="rest_code_8e0b2532621f40b0914d844301117dfb-4"&gt;&lt;/a&gt;sudo systemctl enable nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;結論&lt;/h2&gt;
&lt;p&gt;在 archlinux 中用 nginx 真是容易。
當然，這個只是我玩玩而已，可不能當成生產環境。&lt;/p&gt;
&lt;p&gt;下一個要處理的是 bottle 和 nginx 合作的網頁程式。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>nginx</category><category>nikola</category><guid>https://mariolong.github.io/posts/an-zhuang-nginx/</guid><pubDate>Fri, 07 Feb 2014 03:13:56 GMT</pubDate></item></channel></rss>