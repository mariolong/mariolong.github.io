#+BEGIN_COMMENT
.. title: Install ghcjs for ghc 8.4.3 on archlinux
.. slug: install-ghcjs-archlinux
.. date: 2018-09-04 08:22:35 UTC+08:00
.. status: draft
.. tags: linux, haskell, ghcjs
.. category: computer
.. link:
.. description:
.. type: text
#+END_COMMENT
#+OPTIONS: toc:nil ^:{}
#+LANGUAGE: zh-TW

#+BEGIN_SRC sh
ghc --version
The Glorious Glasgow Haskell Compilation System, version 8.4.3
#+END_SRC

* Install steps

參考 [[https://github.com/ghcjs/ghcjs/tree/ghc-8.4][GitHub - ghcjs/ghcjs at ghc-8.4]]

** getting and preparing the source tree

add step ~git checkout ghc-8.4~

#+BEGIN_SRC sh
git clone https://github.com/ghcjs/ghcjs.git
cd ghcjs
git checkout ghc-8.4
git submodule update --init --recursive
./utils/makePackages.sh
#+END_SRC

** building the compiler

You can use ~cabal-install~ *and* ~stack~ to set up a build environment that contains these packages.

*** Cabal new-build

#+BEGIN_SRC sh
stack install cabal-install
cabal update
cabal new-configure
cabal new-build
#+END_SRC

*** link to executables

*DON'T DO THIS, IT IS NOT NECESSARY*

Since cabal new-build does not install executables or wrapper scripts,
we need to make them accessible by hand. You can do this by creating
symlinks to the /utils/dist-newstyle-wrapper.sh script.

For *example* if the ~.bin~ directory is in your ~PATH~:

#+BEGIN_SRC sh
cd .bin
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-pkg
ln -s ../utils/dist-newstyle-wrapper.sh haddock-ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh hsc2hs-ghcjs
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-boot
ln -s ../utils/dist-newstyle-wrapper.sh ghcjs-run
#+END_SRC

*** stack
**** DON'T DO THIS

#+BEGIN_SRC sh
stack build
#+END_SRC

**** DO THIS

#+BEGIN_SRC sh
stack install
#+END_SRC

*** install haddock

*error message: Haddock's resource directory does not exist!*

this step is useless for above error message.

#+BEGIN_SRC sh
cabal install haddock
#+END_SRC

#+BEGIN_SRC sh
stack haddock
#+END_SRC

** Booting GHCJS

#+BEGIN_SRC sh
ghcjs-boot
#+END_SRC

when invoked without arguments, ghcjs-boot will build the libraries
from ~boot.tar~ (unless the current directory contains a ~boot.yaml~
file), installed in GHCJS' data directory (~boot.tar~ is generated by
the ~makePackages.sh~ script and included in a source distribution).

** Test

#+BEGIN_SRC sh
$ echo 'main = putStrLn "Hello World!"' > helloWorld.hs
$ stack exec -- ghcjs -o helloWorld helloWorld.hs
$ node helloWorld.jsexe/all.js
Hello world!
#+END_SRC

test is OK.

I don't know why.
But these steps are work for me to install ghcjs with ghc-8.4.3

* 參考 [[http://www.peachful.space/posts/ghcjs-on-arch-linux.html][Peachful Space - ghcjs on Arch Linux]] 和以下指令：(FAIL)

this is not work.

#+BEGIN_SRC sh
# install stack, haskell-stack, node.js and alex using pacman
$ sudo pacman -S stack haskell-stack nodejs alex

$ cd && git clone https://github.com/ghcjs/ghcjs.git

# if you `stack setup` now you'll get an error saying /usr/lib/libtinfo.so.5 cannot be found

# install libtinfo from AUR
$ cd ~/build-aur
$ git clone https://aur.archlinux.org/libtinfo.git
$ cd libtinfo
$ makepkg -sri

# introducing the terrible hack...  I know, but it's the only way I can make it work
$ sudo ln -s /usr/lib/libtinfo.so /usr/lib/libtinfo.so.5

$ cd ~/ghcjs
$ stack setup
$ stack build
$ stack exec -- ghcjs-boot --dev

$ echo 'main = putStrLn "Hello World!"' > helloWorld.hs
$ stack exec -- ghcjs -o helloWorld helloWorld.hs
$ node helloWorld.jsexe/all.js
Hello world!
#+END_SRC
