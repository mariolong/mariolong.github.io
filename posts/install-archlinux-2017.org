#+BEGIN_COMMENT
.. link:
.. title: Install Arch linux (2017)
.. slug: install-arch-linux-2017
.. tags: linux
.. category: computer
.. date: 2017/11/20 17:00:00
.. description:
#+END_COMMENT

原本的 Beginners' Guide 改成了[[https://wiki.archlinux.org/index.php/installation_guide][Installation guide]] ，文件結構比較清楚，但是保證不適合初次安裝 archlinux
的人閱讀，也不適合一步步之執行。

這次安裝，把目前系統應有的指令再記録下來，以備參閱。與上次安裝時所用的指令，差異不大。

* 製作開機片（CD、USB、硬碟）啓動

從 [[https://www.archlinux.org/download/][Arch linux Downloads]] 下載 archlinux.iso，建議用 bt 方式下載比較快。

參考 [[https://wiki.archlinux.org/index.php/USB_flash_installation_media][USB flash installation media]] 製作開機片 :

#+BEGIN_EXAMPLE
  # dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress && sync
#+END_EXAMPLE

* 啟動 ArchLinux 安裝程序

重新以 USB 開機，選擇從主選單中選擇 "Boot Arch linux" 並按
<enter>，系統將加載並給出登錄提示，自動以 'root' 登錄。

* 建立網絡連接

ping 8.8.8.8 看看有没有網路，没有網路就啓動 dhcpcd:

#+BEGIN_SRC sh
  # systemctl start dhcpcd
#+END_SRC

若要用 wifi 則用:

#+BEGIN_EXAMPLE
    # wifi-menu -o profile-name
#+END_EXAMPLE

ping 一下看看網路連上了嗎？

* 準備磁碟機

因為先安裝 windows 10，已經將磁碟分割好了。

** 檢查分區狀況

#+BEGIN_EXAMPLE
  lsblk -f
#+END_EXAMPLE

** 格式化

格式化目標 partition，免得有不可預期的狀況

#+BEGIN_SRC sh
  mkfs.ext4 -L LABLE /dev/sdax
#+END_SRC

** 掛載分區

先掛載 root 區 :

#+BEGIN_EXAMPLE
  # mount /dev/sdaX /mnt
#+END_EXAMPLE

再掛載其他分區，/home 最好獨立分區。 :

#+BEGIN_EXAMPLE
  # mkdir /mnt/home
  # mount /dev/sda1 /mnt/home
#+END_EXAMPLE

** 建立 swap

現在的 RAM 都很大，這個可以不用裝了。目前安裝了 16G 的 RAM。

*** 建立 swap file

如果真的要裝 swap，可用檔案取代，方便好管理。 :

#+BEGIN_EXAMPLE
    # fallocate -l 16G /swapfile
    # sudo chmod 600 /swapfile
    # mkswap /swapfile
    # sudo mkswap /swapfile
    # swapon /swpfile
    # sudo swapon /swapfile
    # sudo nano /etc/fstab
#+END_EXAMPLE

在 fstab 中加入 :

#+BEGIN_EXAMPLE
    /swapfile none swap defaults 0 0
#+END_EXAMPLE

*** Remove swap file

如果不用 swap，刪了就是。

*Warning:* swap is managed by systemd and will be reenabled by it after
some time. To remove a swap file, the current swap file must be turned
off. :

#+BEGIN_EXAMPLE
    # swapoff -a
    # rm -f /swapfile
#+END_EXAMPLE

* 配置安裝的環境

** DNS setup (可不做)

#+BEGIN_EXAMPLE
    # nano /etc/resolv.conf

    nameserver 168.95.1.1
    nameserver 8.8.8.8
#+END_EXAMPLE

** 選擇安裝鏡像

安裝前需要編輯 /etc/pacman.d/mirrorlist，將最想使用的鏡像放到前面。 :

#+BEGIN_EXAMPLE
    # nano /etc/pacman.d/mirrorlist
#+END_EXAMPLE

nano 簡單指令 :

#+BEGIN_EXAMPLE
    Alt-6: copy line
    C-u:   paste
    C-x:   exit
#+END_EXAMPLE

原則上，改過 mirrorlist 就執行以下指令(可不做)： :

#+BEGIN_EXAMPLE
    # pacman -Syy
#+END_EXAMPLE

* 安裝基本系統

#+BEGIN_EXAMPLE
    # pacstrap -i /mnt base base-devel
#+END_EXAMPLE

if pacman complains that error: :

#+BEGIN_EXAMPLE
    failed to commit transaction (invalid or corrupted package)
#+END_EXAMPLE

run the following command: :

#+BEGIN_EXAMPLE
    # pacman-key --init && pacman-key --populate archlinux
#+END_EXAMPLE

** 生成 fstab

這個一定要做，不然後頭會很麻煩。 :

#+BEGIN_EXAMPLE
  # genfstab -U -p /mnt >> /mnt/etc/fstab
  # nano /mnt/etc/fstab   # 檢查一下 fstab
#+END_EXAMPLE

** Chroot 到新系統，並作基本配置

#+BEGIN_EXAMPLE
    $ arch-chroot /mnt /bin/bash
#+END_EXAMPLE

** 配置 pacman

#+BEGIN_EXAMPLE
  # nano /etc/pacman.conf
#+END_EXAMPLE

爲了安裝 yaourt，到最後空白處加上： :

#+BEGIN_EXAMPLE
  [archlinuxfr]
  SigLevel = Never    # add: 2013/04/28
  Server = http://repo.archlinux.fr/$arch
#+END_EXAMPLE

一般使用者用 [core], [extra] 與 [community]。

** 更新系統，並安裝 yaourt

#+BEGIN_EXAMPLE
    # pacman -Syu
    # pacman -S yaourt
#+END_EXAMPLE

** 配置系統 Locale

#+BEGIN_SRC sh
  $ nano /etc/locale.gen
#+END_SRC

*** 找到

#+BEGIN_QUOTE
  en_US.UTF-8 UTF-8
  zh_TW.UTF-8 UTF-8
  zh_CN.UTF-8 UTF-8
#+END_QUOTE

把以上全部打開。

*** 使 locale 生效

#+BEGIN_EXAMPLE
  $ locale-gen    #使更改生效運行
#+END_EXAMPLE

*** 確認一下 locale

#+BEGIN_EXAMPLE
    $ locale -a     #確認一下開啟的 locale
    $ locale        #目前的 locale
#+END_EXAMPLE

*** 全域 locale 設定：對整個系統有效

#+BEGIN_EXAMPLE
    $ nano /etc/locale.conf

    LANG=en_US.UTF-8
#+END_EXAMPLE

主控台用英文，否則出現方塊字，是看不懂它的意思。等進 X 後再改成中文。

** 更改 console 字型
把字改大一點，眼睛比較不吃力。
先安裝字型，再設定字型。

#+BEGIN_SRC sh
  pacman -S terminus-font
  setconsolefont ter-128n
#+END_SRC

The FONT variable in =/etc/vconsole.conf= is used to set the font at boot, persistently for all consoles.[fn:1]

#+BEGIN_SRC sh
  nano /etc/vconsole.conf
  ...
  FONT=ter-128n
  FONT_MAP=8859-1
#+END_SRC

ISO 8859-1，正式編號為 ISO/IEC 8859-1:1998，又稱 Latin-1 或「西歐語言」[fn:2]

** 配置系統時區

可用的時區位於目錄 /usr/share/zoneinfo/ 下，可以 ls 一下。用以下指令配
置系統時區：

#+BEGIN_SRC sh
  ln -s /usr/share/zoneinfo/Asia/Taipei /etc/localtime
#+END_SRC

** 時間調整
為了與 windows 雙重開機 (dual boot)，最好做以下動作：

1. 修改 windows 的登錄檔，用 regedit 加上一個 DWORD(32 bits) 的機碼
   RealTimeIsUniversal，將其值設為 1，位置如下:

   #+BEGIN_EXAMPLE
     HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation\RealTimeIsUniversal
   #+END_EXAMPLE

2. 在 windows 中關掉「網路自動對時」的功能。

當然，以上的動作要回到 windows 才能執行。

在 linux 中，只需執行： :

#+BEGIN_SRC sh
  timedatectl set-local-rtc false
  timedatectl set-ntp true
#+END_SRC

並將 utc 時間寫入 BIOS 中即可。

#+BEGIN_SRC sh
  hwclock --systohc --utc
#+END_SRC

** 設置主機名稱

#+BEGIN_SRC sh
  nano /etc/hostname
#+END_SRC

加入

#+BEGIN_QUOTE
  hostname
#+END_QUOTE

* 再一次設定網路

簡單啓動 dhcpcd :

#+BEGIN_EXAMPLE
  # systemctl enable dhcpcd
#+END_EXAMPLE

** WIFI

用 netctl 啓動 wifi

** ADSL

如果要用 ADSL，則這個很重要，不然重開機時，就會沒網路可用。

install the network card that is supposed to be connected to the
DSL-Modem into your computer. After adding your newly installed
network card to the modules.conf/modprobe.conf install therp-pppoe
package :

#+BEGIN_EXAMPLE
    $ pacman -S rp-pppoe
    $ pppoe-setup
#+END_EXAMPLE

run the pppoe-setup script to configure your connection After you have
entered all the data, you can connect and disconnect your line with :

#+BEGIN_EXAMPLE
    $ systemctl start adsl
#+END_EXAMPLE

and :

#+BEGIN_EXAMPLE
    $ systemctl stop adsl
#+END_EXAMPLE

respectively. The setup is usually easy and straightforward, but feel
free to read the manpages for hints. If you want to automatically 'dial
in' at boot, issue command :

#+BEGIN_EXAMPLE
    $ systemctl enable adsl

    or

    $ systemctl disable adsl
#+END_EXAMPLE

to remove auto 'dial in' at boot.

* mkinitcpio
增加 lvm2 到 hooks 後，執行 =mkinitcpio= :

#+BEGIN_EXAMPLE
    # nano /etc/mkinitcpio.conf

    HOOKS=(... udev ... block lvm2 filesystems ...)

    # mkinitcpio -p linux
#+END_EXAMPLE

* Install and configure a bootloader
Install the grub-bios package and then run grub-install: :

#+BEGIN_EXAMPLE
    # pacman -S grub-bios                       ## 安裝 grub-bios
    # grub-install --target=i386-pc --recheck /dev/sda  ## 安裝到 boot 區
#+END_EXAMPLE

** 自動尋找其它的 OS
如果有其他的 OS，這個就很重要。 :

#+BEGIN_EXAMPLE
  # pacman -S os-prober
#+END_EXAMPLE

或是直接在 /etc/grub.d/40\_custom 加上以下指令 :

#+BEGIN_EXAMPLE
    menuentry "Windows 10" --class windows --class os {
      insmod ntfs
      search --no-floppy --set=root --fs-uuid $your_uuid_here$
      ntldr /bootmgr
    }
#+END_EXAMPLE

** 安裝 microcode
這步要在 grub-mkconfig 之前做 :

#+BEGIN_EXAMPLE
  # pacman -S intel-ucode
#+END_EXAMPLE

** 自動產生 grub.cfg
這個一定要做，不然重開機時，就等著進 grub shell，很麻煩。 :

#+BEGIN_EXAMPLE
  # grub-mkconfig -o /boot/grub/grub.cfg
#+END_EXAMPLE

* 重啓
#+BEGIN_EXAMPLE
  # exit
  # umount /mnt
  # reboot
#+END_EXAMPLE

** 確認網路連線

root 重啓後，ping 一下看看網路連上了嗎？如果沒有，手動連線。 :

#+BEGIN_EXAMPLE
  # ping 8.8.8.8
  # systemctl start dhcpcd
或
  # netctl start <wifi-profile-name>
#+END_EXAMPLE

** update system（可不做）

#+BEGIN_EXAMPLE
    # pacman -Syu
#+END_EXAMPLE

* post-installation
** 設置 Root 密碼並創建一般用戶

#+BEGIN_EXAMPLE
    $ passwd
    $ useradd -m -s /bin/bash  -g users -G video,storage,optical,lp,scanner,games,wheel username
    $ passwd username
#+END_EXAMPLE

** 安裝 Sudo

#+BEGIN_EXAMPLE
  $ pacman -S sudo
  $ EDITOR=nano visudo
#+END_EXAMPLE

允許 wheel 用戶組成員無密碼使用 sudo： :

#+BEGIN_EXAMPLE
  $ visudo
#+END_EXAMPLE

**** 輸入

#+BEGIN_QUOTE
  %wheel ALL=(ALL) NOPASSWD:ALL
#+END_QUOTE

再來是設定 sudo，隨便找一個空白行加上： :

#+BEGIN_EXAMPLE
    username ALL=(ALL) ALL
#+END_EXAMPLE

** 登出，並以新的用戶名稱登入
** 設定聲音 alas
安裝音效驅動，直接用 alas，不要考慮太多。 :

#+BEGIN_EXAMPLE
  $ yaourt -S alsa-utils
#+END_EXAMPLE

將帳號加入音效使用權： :

#+BEGIN_EXAMPLE
  $ sudo gpasswd -a username audio
#+END_EXAMPLE

alsa 預設是靜音，以 alsamixer 手動打開聲音 :

#+BEGIN_EXAMPLE
  $ alsamixer
#+END_EXAMPLE

或者命令列直接開啓 :

#+BEGIN_EXAMPLE
  $ amixer sset Master unmute
#+END_EXAMPLE

測試一下有沒有聲音 :

#+BEGIN_EXAMPLE
  $ speaker-test -c 2
#+END_EXAMPLE

** 安裝 x11

#+BEGIN_EXAMPLE
  # pacman -S xorg-{server,apps} mesa
#+END_EXAMPLE

因為要用 xlogin，所以 =xorg-xinit= 可以不用裝了。

** 裝顯卡驅動

ATi 用戶：

直接裝開源驅動

#+BEGIN_EXAMPLE
  $ pacman -S xf86-video-amdgpu
#+END_EXAMPLE

或是用舊的

#+BEGIN_EXAMPLE
  $ pacman -S xf86-video-ati
#+END_EXAMPLE

intel 用戶：

#+BEGIN_EXAMPLE
  $ pacman -S xf86-video-intel libav-intel-driver
#+END_EXAMPLE

** 安裝字體

加上 ttf-liberation 修正部份 PDF 字型，此為 google-chrome 新的依賴。

#+BEGIN_EXAMPLE
    $ yaourt -S ttf-tw ttf-dejavu ttf-liberation
    $ yaourt -S adobe-source-{code,sans,serif}-pro-fonts adobe-source-han-{sans,serif}-{cn,jp,kr,otc,tw}-fonts
#+END_EXAMPLE

** 讓 X 可以顯示中文

#+BEGIN_EXAMPLE
    $ nano ~/.xinitrc

     export LANG=zh_TW.UTF-8
     export LC_ALL="zh_TW.UTF-8"
#+END_EXAMPLE

** 將右邊的數字鍵盤預設爲方向鍵

#+BEGIN_EXAMPLE
    $ yaourt -S numlockx

    $ nano ~/.xinitrc

    numlockx &
#+END_EXAMPLE

** 安裝桌面

目前使用 lxqt + xmonad。lxqt

安裝 lxqt:

#+BEGIN_EXAMPLE
    yaourt -S lxqt
#+END_EXAMPLE

先修改 =pacman.conf=:

#+BEGIN_EXAMPLE
    # nano /etc/pacman.conf
#+END_EXAMPLE

然後在 =[community]= 之前加上:

#+BEGIN_EXAMPLE
    [haskell-core]
    Server = http://xsounds.org/~haskell/core/$arch
#+END_EXAMPLE

接著才可安裝 xmonad 和 taffybar:

#+BEGIN_EXAMPLE
    yaourt -S haskell-xmonad haskell-xmonad-contrib haskell-taffybar
#+END_EXAMPLE

** theme

Using Breeze theme and Flat Remix icon theme:

#+BEGIN_EXAMPLE
    yaourt -S breeze{,-kde4,-gtk} flat-remix-git lxappearance
#+END_EXAMPLE

進 lxappearance 設定 theme and icon theme

** 安裝中文輸入法

沒有其它選擇，就用 fcitx。ibusfcitxshu-ru-fa-she-ding :

#+BEGIN_EXAMPLE
    yaourt -S fcitx-im fcitx-configtool fcitx-chewing
#+END_EXAMPLE

** install google chrome

#+BEGIN_EXAMPLE
    $ yaourt -S google-chrome
#+END_EXAMPLE

** 安裝文字編輯器

現在已經沒有別的選擇了，只能用 emacs
這個神的編輯器，因為她實在是太強大了， 讓我不忍放棄她。 :

#+BEGIN_EXAMPLE
    $ yaourt -S emacs
#+END_EXAMPLE

可用的系統成型了，但是， 後面<post-installation-of-archlinux>
還有許多需要再調整的。

* issues
** kvm:disable by bios
iVT enable @ bios

* Footnotes
[fn:1] https://wiki.archlinux.org/index.php/Fonts#Console_fonts
[fn:2] https://zh.wikipedia.org/wiki/ISO/IEC_8859-1
