<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simple Life</title><link>https://github.com/mariolong/mariolong.github.io/</link><description>Simple is beautiful. Note for health, computer and investment.</description><atom:link href="https://mariolong.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_tw</language><copyright>Contents © 2018 &lt;a href="mailto:mariolong5782@gmail.com"&gt;Mario Long&lt;/a&gt; </copyright><lastBuildDate>Wed, 23 May 2018 06:14:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>快樂，當下</title><link>https://mariolong.github.io/posts/happy-current/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
SOURCE: &lt;a href="https://www.playpcesor.com/2017/09/time-Secrets-to-a-Happier-Life.html"&gt;來自 TIME 的快樂科學秘密：投入時間當下&lt;/a&gt;電腦玩物原創作者 esor huang 異塵行者
&lt;/p&gt;

&lt;p&gt;
REF: &lt;a href="http://time.com/4856944/secrets-happier-life/"&gt;6 Secrets to a Happier Life | Time&lt;/a&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
「專注且投入當下」才是真正的高效率定義，無論這段時間我做了什麼，只要我能進入忘我狀態，感覺自己 100% 投入時間中，我都覺得有高效率的產出。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;
「如果你的頭腦永遠在想下一個任務、下一個成就、下一個你需要談話的人。在這個過程中，你犧牲了現在的個人幸福，你就會持續累積負面情緒和巨大的壓力。」 — 6 Secrets to a Happier Life | Time
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;
而我們永遠都會有目標還沒完成！永遠都會在成功之後還有下一個成功可以追求！那不就永遠都不會快樂了？
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;
專注且投入到當下。
&lt;/p&gt;
&lt;/blockquote&gt;</description><category>happy</category><guid>https://mariolong.github.io/posts/happy-current/</guid><pubDate>Tue, 22 May 2018 04:49:49 GMT</pubDate></item><item><title>[LINE] 走路吧！</title><link>https://mariolong.github.io/posts/walking/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
SOURCE: LINE
&lt;/p&gt;

&lt;p&gt;
走路吧！
&lt;/p&gt;

&lt;p&gt;
孫正春走到腫瘤也怕他！孫正春身體力行 100 天，2 個腫瘤消失了 16 種宿疾改善了！想健康，走路最簡單，不花錢，絕無副作用！
&lt;/p&gt;

&lt;p&gt;
「我覺得爸爸會抗癌成功，關鍵在於『堅持到底』。他的確在開始長途走路的一百天內腫瘤消失了，心跳正常了，很多人看到成效出現就停止，但他非但沒有鬆懈，反而更堅持走下去，直到現在，持續二十幾年。」
&lt;/p&gt;

&lt;p&gt;
孫羽佑，孫正春之子，神經科學博士
&lt;/p&gt;

&lt;p&gt;
他原本天天吃焢肉、能坐就不願站，直到癌症的陰影迫近，才驚覺必須改變！
&lt;/p&gt;

&lt;p&gt;
從完全不走路到一天走上六小時，他慢慢走，打赤腳走，拿著啞鈴負重走；他吃樹葉、喝葉子水，打造了一個「山上的家」三餐吃優格，徹底地改變了體質。兩個腫瘤一百天消失不是奇蹟，而是「動、綠、奶」的有力實踐。
&lt;/p&gt;

&lt;p&gt;
他到宜蘭工作，就把走路的觀念傳給同事；搬回埔里，帶動了遠近馳名的社區「夜走」熱。
&lt;/p&gt;

&lt;p&gt;
他還鼓勵原已無法進食、無法行動的癌末朋友，從吃一小滴優格、爬行一小步開始，重獲健康。
&lt;/p&gt;

&lt;p&gt;
這一份對走路的執著和熱愛，鼓舞了無數人迎向希望。
&lt;/p&gt;

&lt;p&gt;
他曾花六天翻越中央山脈，從南投走到宜蘭；四十五天健走，以一雙傷痕累累的「真皮鞋」實現赤腳環台夢想；更跨足世界，走向義大利，兩天完攻山海雙線的考驗。
&lt;/p&gt;

&lt;p&gt;
他賦予了「距離」全新的意義，只要走路到得了的地方，就不算遠。人生的路，原來可以靠雙腳走出來，而最重要的是：堅持走下去。「堅持到底」，讓孫正春贏回健康，更讓他走出了康莊大道！
&lt;/p&gt;

&lt;p&gt;
台灣國家衛生研究院：每日健走 15 分鐘，延壽 3 年！英國癌症團體：每日健走 20 分鐘，癌症死亡率減半！
&lt;/p&gt;

&lt;p&gt;
走路的好處，他們都親身體會到！
&lt;/p&gt;

&lt;p&gt;
◎孫正春之妻陳梅香曾患腎臟病，身體水腫到像懷孕，每天走路讓她重獲健康。
&lt;/p&gt;

&lt;p&gt;
◎紀政的尿失禁毛病因走路不藥而癒，而且 6 個月瘦了 20 公斤。
&lt;/p&gt;

&lt;p&gt;
◎希望基金會祕書長黃純湘的癌末父親，靠走路贏回了 7 年人生。
&lt;/p&gt;

&lt;p&gt;
◎前暨南大學公共行政系教授梁雙蓮，以走路擺脫了更年期及失眠困擾。
&lt;/p&gt;

&lt;p&gt;
◎作家陳芸英長期受便祕所苦，開始走路的第二天，便祕問題竟然解決 了。
&lt;/p&gt;

&lt;p&gt;
走路很簡單，就是「走出去」而已。出門多走一站搭車或提早一站下車；在公司少打一通電話，直接走去找同事；不必刻意挑什麼健走路線，有時間就走。
&lt;/p&gt;

&lt;p&gt;
把自己交給雙腳，慢慢走，不要急，才能走得遠、走得久。有人問： 「走這麼長、這麼久的路，不累嗎？」孫正春說： 「只要心不趕，就不會累。」
&lt;/p&gt;

&lt;p&gt;
◎不管身體有多糟糕，背一定要挺，不能垮下去，只要能動就要動，動一 下也好。可別小看「動一下」這是很單純的求生訊號。
&lt;/p&gt;

&lt;p&gt;
◎既然站得起來，就試著走出去吧！一步就好。第二天再走一步，慢慢來，只要 一天進步一點點就可以。
&lt;/p&gt;

&lt;p&gt;
◎「走路」就像每天都要吃飯、睡覺一樣，是生命的必需品。讓走路融入每日生活，養成隨時走路的習慣。
&lt;/p&gt;

&lt;p&gt;
◎走路是最緩和、最舒服的一種運動，隨時隨地都可以進行，不需要技術、不需要夥伴。
&lt;/p&gt;

&lt;p&gt;
◎其實走路很簡單，就是走出去而已，把自己交給雙腳，慢慢走，不要想太多，重點是持之以恆。
&lt;/p&gt;

&lt;p&gt;
◎剛走路的人都希望走快點，趕快走完，好回家休息，但當你走到一個程度，就會曉得什麼樣的方式對你的身體和生理有幫助。
&lt;/p&gt;

&lt;p&gt;
走路運動….不是趕路運動。輕鬆走，慢慢走；天熱/帶條毛巾；天涼/帶件薄外套。
&lt;/p&gt;

&lt;p&gt;
生病不是意外，是自己平常不注意自己的身體健康。病痛來襲，只有默默承受。
&lt;/p&gt;

&lt;p&gt;
走路可以運動到環跳穴，改善上熱下寒的情形，也可以活潑足三陽的氣機，使陽下行而陰上滋，是活命之源！
&lt;/p&gt;

&lt;p&gt;
⭕⭕ 榮總急診部王醫師傳送 @ 很寶貴的養生短文◎成為永遠病人的二大原因：過食+藥物！
&lt;/p&gt;

&lt;p&gt;
就是吃太多啦，還有就是吃葯，這絕對不是好事，醫師和護理人員，都很少吃葯。
&lt;/p&gt;

&lt;p&gt;
◎糖尿病是全身性的代謝紊亂！主因則是胰臟過度疲勞！
&lt;/p&gt;

&lt;p&gt;
◎細嚼慢嚥是在降低胰臟負擔！
&lt;/p&gt;

&lt;p&gt;
◎活得健康的重要原則？一少三多！
A. 少吃；
B. 多休息
C. 多喝水；
D. 多流汗！
&lt;/p&gt;

&lt;p&gt;
◎滿身流汗對各種疾病都是有益的！
&lt;/p&gt;

&lt;p&gt;
◎飯量越大丶耗氧也越大丶細胞越缺氧，心臟就越加壓，血壓也就越高了！
&lt;/p&gt;

&lt;p&gt;
◎吃飯最好＂五分飽＂，不要撐飽！
&lt;/p&gt;

&lt;p&gt;
◎當身體飢餓感訊號出現時，正是排毒旺盛，免疫功能快速增強時！
&lt;/p&gt;

&lt;p&gt;
◎空腹時身體發熱流汗是最有效的新陳代謝法，也是細胞自行清血解毒，補氣活化的時機！（消化系統運作時，就停止排毒！）
&lt;/p&gt;

&lt;p&gt;
◎癌症的主因：超級中毒＋組織缺氧（重度缺氧）！
&lt;/p&gt;

&lt;p&gt;
◎癌症是身體長期處於中毒狀態（強酸），所引起＂缺氧＂的自然現象！
&lt;/p&gt;

&lt;p&gt;
◎＂氧＂是身體治病救命的靈丹，它決定腺體調節能力，免疫系統的強弱，更掌控了癌症病人的生殺大權！
&lt;/p&gt;</description><category>health</category><category>walking</category><guid>https://mariolong.github.io/posts/walking/</guid><pubDate>Tue, 22 May 2018 04:36:56 GMT</pubDate></item><item><title>錯誤時間睡覺，傷神又耗氣！</title><link>https://mariolong.github.io/posts/wrong-time-go-to-bed/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
SOURCE: &lt;a href="https://health.businessweekly.com.tw/AArticle.aspx?ID=ARTL000099919&amp;amp;p=2"&gt;錯誤時間睡覺，傷神又耗氣！&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;養生方法不在多寡，在於能否持之以恆&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
養生 Tips
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;上午散步 30 分鐘、晚餐後再走 30 分鐘，早晚各 5,000 步，達天天萬步目標。
&lt;/li&gt;
&lt;li&gt;早晚各做 5 次自創扭轉運動。
&lt;/li&gt;
&lt;li&gt;常按摩雙眼周圍的穴位，增加眼睛血液循環，減少乾澀、疲倦症狀。
&lt;/li&gt;
&lt;li&gt;天天喝養生精力飲，用堅果、薏仁、燕麥、黑芝麻或黃豆（建議勿超過 5
種），加水或牛奶 350c.c.打成汁喝。喝茶外，也喝可可、咖啡，飲食以五穀雜糧為主，多吃堅果、豆類、蔬菜水果。
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
標題不知誰下的，整篇没看到「睡覺時間」。&lt;/p&gt;</description><category>health</category><category>sleep</category><guid>https://mariolong.github.io/posts/wrong-time-go-to-bed/</guid><pubDate>Tue, 22 May 2018 04:07:58 GMT</pubDate></item><item><title>「没想到是謠言」：愛惜大腸，空腹吃水果</title><link>https://mariolong.github.io/posts/eat-fruit-as-empty-stomach/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
網路上常會有一些「善心人士」轉傳他們認的好文，我想大家的初衷也是想幫忙人，只是未經查證或没有能力查證，只能直接轉傳，可也造成了困擾。如果重症患者誤信了没有根據的方法，後果不堪設想。
&lt;/p&gt;

&lt;p&gt;
今天看到這篇&lt;a href="https://emo.nidbox.com/diary/read/7697859"&gt;愛惜大腸，空腹吃水果(台大醫院胃腸科王正一醫師的忠告)&lt;/a&gt;覺得不錯，想留個記錄，再一次 google，發現了下面這篇&lt;a href="https://www.mygopen.com/2016/03/blog-post_1.html"&gt;【假知識】空腹吃水果會抗癌？王正一醫師說他從沒寫過這種東西！ ~ MyGoPen｜這是假消息&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
哈哈，直接把結論節錄如後：
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
闢謠網站 Snopes.com 報告指出，這則「空腹吃水果抗癌」，最早在 2001 年出現，來自新加坡廚藝作家 Devagi Sanmugam 在 1998 年的著作《吃水果的正確方法（The Correct Way of Eating Fruits）》，之後文章出現變種版，在
2002 年以後流傳的版本，才又多了後面水果功效的部份。甚至轉到中文版，亂出現其他台大醫生的說詞，原信中提到的「赫伯博士( Dr. Herbert Shelton)」，並沒有醫學學位，還曾因為無照行醫被逮捕了好幾次；而這位赫伯博士，在
1985 年已逝世。真的純屬謠言一則，請不要再傳這種假消息了！
&lt;/p&gt;
&lt;/blockquote&gt;</description><category>food</category><category>fruit</category><guid>https://mariolong.github.io/posts/eat-fruit-as-empty-stomach/</guid><pubDate>Wed, 16 May 2018 08:44:08 GMT</pubDate></item><item><title>部落格，重回 nikola+org-mode</title><link>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
掙扎了許久，還是先用&lt;a href="https://getnikola.com/"&gt;nikola&lt;/a&gt;記錄一些事，畢竟比較熟悉，能快一點上手。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 安裝&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip nikola
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 設定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
執行&lt;code&gt;nikola init&lt;/code&gt;後，依指示設定，比較省事。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola init &amp;lt;blog-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;blog-name&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-1" class="outline-3"&gt;
&lt;h3 id="sec-2-1"&gt;&lt;span class="section-number-3"&gt;2.1&lt;/span&gt; configuration file&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-1"&gt;
&lt;p&gt;
修改&lt;code&gt;conf.py&lt;/code&gt;，慢慢改，內容很多，不必急於一時。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-2" class="outline-3"&gt;
&lt;h3 id="sec-2-2"&gt;&lt;span class="section-number-3"&gt;2.2&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola theme install bootstrap
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3" class="outline-3"&gt;
&lt;h3 id="sec-2-3"&gt;&lt;span class="section-number-3"&gt;2.3&lt;/span&gt; org-mod&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-3"&gt;
&lt;p&gt;
先安裝 plugin orgmode，再做一點點微調即可。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola plugin -i orgmode
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
開啟&lt;code&gt;&amp;lt;blog-name&amp;gt;/plugins/orgmode/init.el&lt;/code&gt;，加上以下的程式碼。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-1" class="outline-4"&gt;
&lt;h4 id="sec-2-3-1"&gt;&lt;span class="section-number-4"&gt;2.3.1&lt;/span&gt; 刪除不必要的空白&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-1"&gt;
&lt;p&gt;
換行時，在兩個中文字間會有一個空白，不好看，所以想辦法刪除。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;;; https://github.com/emacs-china/emacs-china.github.io/blob/master/blog/FengShu/org-remove-useless-space-between-chinese.org&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;eh-org-clean-space&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt; &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="nv"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="s"&gt;"在 export 为 HTML 时，删除中文之间不必要的空格"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-export-derived-backend-p&lt;/span&gt; &lt;span class="nv"&gt;backend&lt;/span&gt; &lt;span class="ss"&gt;'html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;let &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;regexp&lt;/span&gt; &lt;span class="s"&gt;"[[:multibyte:]]"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string &lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; org 默认将一个换行符转换为空格，但中文不需要这个空格，删除。&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(%s\\) *\n *\\(%s\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; 删除粗体之前的空格&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(%s\\) +\\(&amp;lt;\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="c1"&gt;;; 删除粗体之后的空格&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;
	    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;replace-regexp-in-string&lt;/span&gt;
	     &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"\\(&amp;gt;\\) +\\(%s\\)"&lt;/span&gt; &lt;span class="nv"&gt;regexp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	     &lt;span class="s"&gt;"\\1\\2"&lt;/span&gt; &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="nv"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'org-export-filter-paragraph-functions&lt;/span&gt;
	     &lt;span class="ss"&gt;'eh-org-clean-space&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-3-2" class="outline-4"&gt;
&lt;h4 id="sec-2-3-2"&gt;&lt;span class="section-number-4"&gt;2.3.2&lt;/span&gt; Convert inline verbatim to kbd when HTML export&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3-2"&gt;
&lt;p&gt;
ref: &lt;a href="https://emacs-china.org/t/org-mode/1165"&gt;https://emacs-china.org/t/org-mode/1165&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
change &lt;kbd&gt;verbatim&lt;/kbd&gt; to &lt;kbd&gt;kbd&lt;/kbd&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;code&lt;/code&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-html-text-markup-alist&lt;/span&gt;
      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;bold&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;b&amp;gt;%s&amp;lt;/b&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;code&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;code&amp;gt;%s&amp;lt;/code&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;italic&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;i&amp;gt;%s&amp;lt;/i&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;strike-through&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;del&amp;gt;%s&amp;lt;/del&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;underline&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;span class=\"underline\"&amp;gt;%s&amp;lt;/span&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
	&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;verbatim&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;kbd&amp;gt;%s&amp;lt;/kbd&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4" class="outline-3"&gt;
&lt;h3 id="sec-2-4"&gt;&lt;span class="section-number-3"&gt;2.4&lt;/span&gt; 用 &lt;code&gt;nikola github_deploy&lt;/code&gt; 快速發佈文章&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2-4"&gt;
&lt;p&gt;
REF: &lt;a href="https://getnikola.com/handbook.html#deploying-to-github"&gt;https://getnikola.com/handbook.html#deploying-to-github&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-1" class="outline-4"&gt;
&lt;h4 id="sec-2-4-1"&gt;&lt;span class="section-number-4"&gt;2.4.1&lt;/span&gt; Initialize a Nikola site, if you haven’t already.&lt;/h4&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-2" class="outline-4"&gt;
&lt;h4 id="sec-2-4-2"&gt;&lt;span class="section-number-4"&gt;2.4.2&lt;/span&gt; Initialize a git repository in your Nikola source directory by running:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git init .
git remote add origin git@github.com:user/user.github.io
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
url 要確認清楚，必須是 ssh 形式的，未來才可不必一直重覆輸入密碼
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-3" class="outline-4"&gt;
&lt;h4 id="sec-2-4-3"&gt;&lt;span class="section-number-4"&gt;2.4.3&lt;/span&gt; Setup branches and remotes in &lt;code&gt;conf.py&lt;/code&gt;:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-3"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;GITHUB_DEPLOY_BRANCH is the branch where Nikola-generated HTML files
will be deployed. It should be gh-pages for project pages and master
for user pages (&lt;b&gt;user.github.io&lt;/b&gt;).
&lt;/li&gt;

&lt;li&gt;GITHUB_SOURCE_BRANCH is the branch where your Nikola site source
will be deployed. We recommend and default to &lt;b&gt;src&lt;/b&gt;.
&lt;/li&gt;

&lt;li&gt;GITHUB_REMOTE_NAME is the remote to which changes are pushed.
&lt;/li&gt;

&lt;li&gt;GITHUB_COMMIT_SOURCE controls whether or not the source branch is
automatically committed to and pushed. We recommend setting it to
&lt;b&gt;True&lt;/b&gt;, unless you are automating builds with Travis CI.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-4" class="outline-4"&gt;
&lt;h4 id="sec-2-4-4"&gt;&lt;span class="section-number-4"&gt;2.4.4&lt;/span&gt; Create a &lt;code&gt;.gitignore&lt;/code&gt; file. We recommend adding at least the following entries:&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cache
.doit.db
__pycache__
output
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If you set GITHUB_COMMIT_SOURCE to &lt;b&gt;False&lt;/b&gt;, you must switch to your
source branch and commit to it. Otherwise, this is done for you.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-5" class="outline-4"&gt;
&lt;h4 id="sec-2-4-5"&gt;&lt;span class="section-number-4"&gt;2.4.5&lt;/span&gt; Run &lt;code&gt;nikola github_deploy&lt;/code&gt;.&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-5"&gt;
&lt;p&gt;
This will &lt;b&gt;build&lt;/b&gt; the site, &lt;b&gt;commit&lt;/b&gt; the output folder to your deploy
branch, and &lt;b&gt;push&lt;/b&gt; to GitHub.  Your website should be up and running
within a few minutes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2-4-6" class="outline-4"&gt;
&lt;h4 id="sec-2-4-6"&gt;&lt;span class="section-number-4"&gt;2.4.6&lt;/span&gt; 在 nikola github_deploy 之前&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4-6"&gt;
&lt;p&gt;
為了要能用&lt;code&gt;nikola github_deploy&lt;/code&gt;指令，有以下的準備工作：
&lt;/p&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-1" name="sec-2-4-6-1"&gt;&lt;/a&gt;install ghp_import2&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install ghp_import2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2" name="sec-2-4-6-2"&gt;&lt;/a&gt;install and setup ssh&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-2"&gt;
&lt;p&gt;
為了不必一直重覆輸入 github 的帳密，可用 ssh 解決。
&lt;/p&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-2-1" name="sec-2-4-6-2-1"&gt;&lt;/a&gt;install openssh&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-6-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S openssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2-2" name="sec-2-4-6-2-2"&gt;&lt;/a&gt;follow github help page to add ssh connect to github&lt;br&gt;&lt;div class="outline-text-6" id="text-2-4-6-2-2"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/"&gt;Generating a new SSH key and adding it to the ssh-agent - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/working-with-ssh-key-passphrases/"&gt;Working with SSH key passphrases - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;Adding a new SSH key to your GitHub account - User Documentation&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-2-4-6-2-2-1" name="sec-2-4-6-2-2-1"&gt;&lt;/a&gt;產生 ssh key&lt;br&gt;&lt;div class="outline-text-7" id="text-2-4-6-2-2-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;"your_email@example.com"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
螢幕上會出現
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Enter passphrase &lt;span class="k"&gt;for&lt;/span&gt; key &lt;span class="s1"&gt;'/home/USERNAME/.ssh/id_rsa'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
此時不要輸入密碼，直接按&lt;kbd&gt;Enter&lt;/kbd&gt;，否則未來&lt;code&gt;nikola github_deploy&lt;/code&gt;時，就要每次輸入密碼。
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-2-2-2" name="sec-2-4-6-2-2-2"&gt;&lt;/a&gt;將 ssh key 加到 github 中&lt;br&gt;&lt;div class="outline-text-7" id="text-2-4-6-2-2-2"&gt;
&lt;p&gt;
依&lt;a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/"&gt;Adding a new SSH key to your GitHub account - User Documentation&lt;/a&gt;執行
&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="sec-2-4-6-3" name="sec-2-4-6-3"&gt;&lt;/a&gt;確定以 ssh 連上 github (不能是 https)&lt;br&gt;&lt;div class="outline-text-5" id="text-2-4-6-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote -v
origin  git@github.com:mariolong/mariolong.github.io &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin  git@github.com:mariolong/mariolong.github.io &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
如果不是，要用以下指令修正。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git remote set-url origin git@github.com:mariolong/mariolong.github.io
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 開始使用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
建立新的文章，
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola new-post -e -f orgmod
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
寫完就 build
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola build
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
或發佈吧！
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nikola github_deploy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
一切都就緒了，那就開始專心寫文章吧！
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><category>nikola</category><guid>https://mariolong.github.io/posts/zhong-hui-nikola-xie-luo-ge/</guid><pubDate>Mon, 14 May 2018 01:32:19 GMT</pubDate></item><item><title>Install Haskell Applications</title><link>https://mariolong.github.io/posts/install-haskell-applications/</link><dc:creator>Mario Long</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 前言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
在 archlinux 上想用 haskell 真不是一件容易的事，因為選擇太多。
&lt;/p&gt;

&lt;p&gt;
不管如何，終於把 haskell 的開發環境設好，也順利完成了第一支小程式，可以抓網頁上目前最新的電影表列，並以 gmail 通知。
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mariolong.github.io/posts/install-haskell-applications/"&gt;閱讀更多…&lt;/a&gt; (尚餘 1 分鐘)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>haskell</category><category>pandoc</category><category>xmonad</category><guid>https://mariolong.github.io/posts/install-haskell-applications/</guid><pubDate>Sat, 28 Apr 2018 11:16:44 GMT</pubDate></item><item><title>alsa equaler</title><link>https://mariolong.github.io/posts/alsa-equaler/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
音響要好聲，空間才是王道&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://mariolong.github.io/posts/alsa-equaler/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;，没有 DRC 前，先試試等化器&lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="https://mariolong.github.io/posts/alsa-equaler/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;，也許調一調就可用啦。在 archlinuxl 中，我用的是 alsa 的架構播放音樂，
Archlinux WIKI 的&lt;a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture"&gt;Advanced linux Sound Architecture&lt;/a&gt;已說明等化器的安裝及設定，照做即可。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; install&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S alsaequal
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; config&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
在&lt;kbd&gt;/etc/asound.conf&lt;/kbd&gt;加上以下設定：
&lt;/p&gt;

&lt;pre class="example"&gt;
ctl.equal {
    type equal;
}

pcm.plugequal {
    type equal;
    # Modify the line below if you do not
    # want to use sound card 0.
    #slave.pcm "plughw:0,0";
    # by default we want to play from more sources at time:
    slave.pcm "plug:dmix";
}

# pcm.equal {
# If you do not want the equalizer to be your
# default soundcard comment the following
# line and uncomment the above line. (You can
# choose it as the output device by addressing
# it with specific apps,eg mpg123 -a equal 06.Back_In_Black.mp3)
pcm.!default {
    type plug;
    slave.pcm plugequal;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; reboot&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
讓 alsa 可用等化器
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 調整等化器&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
執行
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alsamixer -D equal
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
PS. 用 Q,W,E,Z,X,C 可分別調整左右聲道的音量。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; mpd issue&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
總是會連不上 mpd server，後來在 WIKI 中讀到一段話：
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Note that configuration file is different for each user (until not
specified else) it is saved in ~/.alsaequal.bin. so if you want to use
ALSAEqual with mpd or another software running under different user,
you can configure it using
&lt;/p&gt;

&lt;p&gt;
$ su mpd -c 'alsamixer -D equal'
&lt;/p&gt;

&lt;p&gt;
or for example, you can make a symlink to your .alsaequal.bin in his
home…
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我在&lt;kbd&gt;/root&lt;/kbd&gt;目錄下，建一個連到主目錄&lt;kbd&gt;.alsaequal.bin&lt;/kbd&gt;的連結，
mpd 即可使用，瞎打誤撞。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://mariolong.github.io/posts/alsa-equaler/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="http://www.miaofoundry.url.tw/products-and-services/DRC/"&gt;音樂再生首要難題 – 空間&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="https://mariolong.github.io/posts/alsa-equaler/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="http://www.miaofoundry.url.tw/products-and-services/DRC/whats/DRC-vs-others/"&gt;等化器(EQ)&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>alsa</category><category>linux</category><category>mpd</category><category>music</category><guid>https://mariolong.github.io/posts/alsa-equaler/</guid><pubDate>Sun, 14 Jan 2018 22:20:29 GMT</pubDate></item><item><title>post install for htpc</title><link>https://mariolong.github.io/posts/post-install-for-htpc/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
htpc
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; kodi&lt;/h2&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; wifi&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
wifi-menu
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S wpa_supplicant dialog
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
setup wifi using wifi-menu
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ip link
&amp;lt;interface&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wifi-menu &amp;lt;interface&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;netctl start &amp;lt;wifi-service&amp;gt;
netctl &lt;span class="nb"&gt;enable&lt;/span&gt; &amp;lt;wifi-service&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; auto mount removable device by udiskie&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S udiskie
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; issues&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; alsa&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;pre class="example"&gt;
snd_.._intel index = 1
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-2" class="outline-3"&gt;
&lt;h3 id="sec-4-2"&gt;&lt;span class="section-number-3"&gt;4.2&lt;/span&gt; default.config&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-2"&gt;
&lt;pre class="example"&gt;
need_root_right = no
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><guid>https://mariolong.github.io/posts/post-install-for-htpc/</guid><pubDate>Fri, 29 Dec 2017 09:14:13 GMT</pubDate></item><item><title>Post-installation of Archlinux</title><link>https://mariolong.github.io/posts/post-installation-of-archlinux/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
首先依&lt;a href="https://mariolong.github.io/posts/install-arch-linux-2017"&gt;install-arch-linux-2017&lt;/a&gt;將基本系統裝好，接著參考
&lt;a href="https://wiki.archlinux.org/index.php/General_recommendations"&gt;https://wiki.archlinux.org/index.php/General_recommendations&lt;/a&gt;
記錄下對我而言必要的軟體及簡單設定，讓日常進入可工作狀態。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; haskell&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
xmonad taffybar pandoc
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; system&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
DPMS: display power manpage system
slock:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 桌面及外觀&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-3-1" class="outline-3"&gt;
&lt;h3 id="sec-3-1"&gt;&lt;span class="section-number-3"&gt;3.1&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;p&gt;
Using Breeze theme and Flat Remix icon theme
&lt;/p&gt;

&lt;p&gt;
用 lxappearance 修改 gtk 程式的外觀。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S breeze&lt;span class="o"&gt;{&lt;/span&gt;,-kde4,-gtk&lt;span class="o"&gt;}&lt;/span&gt; flat-remix-git lxappearance
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3-2" class="outline-3"&gt;
&lt;h3 id="sec-3-2"&gt;&lt;span class="section-number-3"&gt;3.2&lt;/span&gt; oblogout and screen lock&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-2"&gt;
&lt;p&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Oblogout"&gt;https://wiki.archlinux.org/index.php/Oblogout&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
oblogout is an optional, configurable logout script that presents a
graphical interface (i.e. buttons) to cancel, logout, restart,
shutdown, suspend, hibernate, and lock the screen.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S oblogout

sudo nano /etc/oblogout.conf
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
修改 [looks] 中的 buttons，以顯示按鈕。
&lt;/p&gt;

&lt;pre class="example"&gt;
[looks]
buttons = cancel, restart, shutdown, lock
&lt;/pre&gt;

&lt;p&gt;
修改 [shortcuts] 中不用的命令刪掉。
&lt;/p&gt;

&lt;pre class="example"&gt;
[shortcuts]
cancel = Escape
shutdown = S
restart = R
#suspend = U
#logout = L
lock = K
#hibernate = H
&lt;/pre&gt;

&lt;p&gt;
修改 [commands] 中的命令。
&lt;/p&gt;

&lt;pre class="example"&gt;
[commands]
lock = slock
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 網路&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; dropbox&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;p&gt;
dropbox 在 archlinux.fr 中
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S dropbox perl-file-mimeinfo
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-2" class="outline-3"&gt;
&lt;h3 id="sec-4-2"&gt;&lt;span class="section-number-3"&gt;4.2&lt;/span&gt; qbittorrent&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S qbittorrent
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 檔案管理&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
using mc and pcmanfm-qt
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S mc pcmanfm-qt gvfs-mtp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-5-1" class="outline-3"&gt;
&lt;h3 id="sec-5-1"&gt;&lt;span class="section-number-3"&gt;5.1&lt;/span&gt; pcmanfm-qt&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-1"&gt;
&lt;p&gt;
使用 pcmanfm-qt, for mtp 傳送檔案 and dropbox
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-1-1" class="outline-4"&gt;
&lt;h4 id="sec-5-1-1"&gt;&lt;span class="section-number-4"&gt;5.1.1&lt;/span&gt; issues&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-5-1-1"&gt;
&lt;p&gt;
error message:
&lt;/p&gt;

&lt;pre class="example"&gt;
/usr/bin/xdg-open: line 922: pcmanfm: command not found
&lt;/pre&gt;

&lt;p&gt;
fix this problem:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ln -s /usr/bin/pcmanfm-qt /usr/bin/pcmanfm
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-2" class="outline-3"&gt;
&lt;h3 id="sec-5-2"&gt;&lt;span class="section-number-3"&gt;5.2&lt;/span&gt; mc&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; 影音&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S alsa-utils mpd mpc ncmpcpp mpv ffmpeg sox kodi kid3 aegisub
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-1" class="outline-3"&gt;
&lt;h3 id="sec-6-1"&gt;&lt;span class="section-number-3"&gt;6.1&lt;/span&gt; alsa&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-1"&gt;
&lt;p&gt;
聲音
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-2" class="outline-3"&gt;
&lt;h3 id="sec-6-2"&gt;&lt;span class="section-number-3"&gt;6.2&lt;/span&gt; mpd, mpc, ncmpcpp&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-2"&gt;
&lt;p&gt;
音樂背景播放
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-3" class="outline-3"&gt;
&lt;h3 id="sec-6-3"&gt;&lt;span class="section-number-3"&gt;6.3&lt;/span&gt; mpv&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-3"&gt;
&lt;p&gt;
影片播放
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mpv cdda://
mpv dvd://
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-4" class="outline-3"&gt;
&lt;h3 id="sec-6-4"&gt;&lt;span class="section-number-3"&gt;6.4&lt;/span&gt; kodi&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-4"&gt;
&lt;p&gt;
影片管理
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5" class="outline-3"&gt;
&lt;h3 id="sec-6-5"&gt;&lt;span class="section-number-3"&gt;6.5&lt;/span&gt; aegisub&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-5"&gt;
&lt;p&gt;
字幕處理
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-6" class="outline-3"&gt;
&lt;h3 id="sec-6-6"&gt;&lt;span class="section-number-3"&gt;6.6&lt;/span&gt; ffmpeg&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-6"&gt;
&lt;p&gt;
影片處理
2-pass to control file size
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-7" class="outline-3"&gt;
&lt;h3 id="sec-6-7"&gt;&lt;span class="section-number-3"&gt;6.7&lt;/span&gt; dvdbackup&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-6-8" class="outline-3"&gt;
&lt;h3 id="sec-6-8"&gt;&lt;span class="section-number-3"&gt;6.8&lt;/span&gt; sox&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-8"&gt;
&lt;p&gt;
wav 轉 aiff
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-9" class="outline-3"&gt;
&lt;h3 id="sec-6-9"&gt;&lt;span class="section-number-3"&gt;6.9&lt;/span&gt; kid3&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-9"&gt;
&lt;p&gt;
音檔加 tag
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; 其它工具&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-7-1" class="outline-3"&gt;
&lt;h3 id="sec-7-1"&gt;&lt;span class="section-number-3"&gt;7.1&lt;/span&gt; emacs&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-1"&gt;
&lt;p&gt;
ripgrep
opencc: using s2twp.json
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-2" class="outline-3"&gt;
&lt;h3 id="sec-7-2"&gt;&lt;span class="section-number-3"&gt;7.2&lt;/span&gt; meld&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S meld
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-3" class="outline-3"&gt;
&lt;h3 id="sec-7-3"&gt;&lt;span class="section-number-3"&gt;7.3&lt;/span&gt; albert&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-3"&gt;
&lt;p&gt;
應用程式快速啓動器
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S albert qt5-graphicaleffects qt5-quickcontrols
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-4" class="outline-3"&gt;
&lt;h3 id="sec-7-4"&gt;&lt;span class="section-number-3"&gt;7.4&lt;/span&gt; speedcrunch (calculator)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-4"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S speedcrunch
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-5" class="outline-3"&gt;
&lt;h3 id="sec-7-5"&gt;&lt;span class="section-number-3"&gt;7.5&lt;/span&gt; calibre&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-5"&gt;
&lt;p&gt;
管理電子書，我只用來管理我的 kindle
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S calibre
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-7-6" class="outline-3"&gt;
&lt;h3 id="sec-7-6"&gt;&lt;span class="section-number-3"&gt;7.6&lt;/span&gt; nikola&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-6"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install nikola Pygments
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-7" class="outline-3"&gt;
&lt;h3 id="sec-7-7"&gt;&lt;span class="section-number-3"&gt;7.7&lt;/span&gt; htop&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-7-8" class="outline-3"&gt;
&lt;h3 id="sec-7-8"&gt;&lt;span class="section-number-3"&gt;7.8&lt;/span&gt; gnash&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-8"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S gnash-git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
可讀 .swf 檔
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; stock&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-8-1" class="outline-3"&gt;
&lt;h3 id="sec-8-1"&gt;&lt;span class="section-number-3"&gt;8.1&lt;/span&gt; python and depending modules&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-8-1"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S python python-pip
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8-2" class="outline-3"&gt;
&lt;h3 id="sec-8-2"&gt;&lt;span class="section-number-3"&gt;8.2&lt;/span&gt; systemd timers&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://mariolong.github.io/posts/post-installation-of-archlinux/</guid><pubDate>Mon, 27 Nov 2017 07:28:36 GMT</pubDate></item><item><title>Install Arch linux (2017)</title><link>https://mariolong.github.io/posts/install-arch-linux-2017/</link><dc:creator>Mario Long</dc:creator><description>&lt;p&gt;
原本的 Beginners' Guide 改成了&lt;a href="https://wiki.archlinux.org/index.php/installation_guide"&gt;Installation guide&lt;/a&gt;，文件結構比較清楚，但是保證不適合初次安裝 archlinux
的人閱讀，也不適合一步步之執行。
&lt;/p&gt;

&lt;p&gt;
這次安裝，把目前系統應有的指令再記録下來，以備參閱。與上次安裝時所用的指令，差異不大。
&lt;/p&gt;

&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 製作開機片（CD、USB、硬碟）啓動&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
從&lt;a href="https://www.archlinux.org/download/"&gt;Arch linux Downloads&lt;/a&gt;下載 archlinux.iso，建議用 bt 方式下載比較快。
&lt;/p&gt;

&lt;p&gt;
參考&lt;a href="https://wiki.archlinux.org/index.php/USB_flash_installation_media"&gt;USB flash installation media&lt;/a&gt;製作開機片 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx status=progress &amp;amp;&amp;amp; sync
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 啟動 ArchLinux 安裝程序&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
重新以 USB 開機，選擇從主選單中選擇 "Boot Arch linux" 並按
&amp;lt;enter&amp;gt;，系統將加載並給出登錄提示，自動以 'root' 登錄。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 建立網絡連接&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
ping 8.8.8.8 看看有没有網路，没有網路就啓動 dhcpcd:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# systemctl start dhcpcd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
若要用 wifi 則用:
&lt;/p&gt;

&lt;pre class="example"&gt;
# wifi-menu -o profile-name
&lt;/pre&gt;

&lt;p&gt;
ping 一下看看網路連上了嗎？
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 準備磁碟機&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
因為先安裝 windows 10，已經將磁碟分割好了。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; 檢查分區狀況&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;pre class="example"&gt;
lsblk -f
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-2" class="outline-3"&gt;
&lt;h3 id="sec-4-2"&gt;&lt;span class="section-number-3"&gt;4.2&lt;/span&gt; 格式化&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-2"&gt;
&lt;p&gt;
格式化目標 partition，免得有不可預期的狀況
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkfs.ext4 -L LABLE /dev/sdax
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-3" class="outline-3"&gt;
&lt;h3 id="sec-4-3"&gt;&lt;span class="section-number-3"&gt;4.3&lt;/span&gt; 掛載分區&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-3"&gt;
&lt;p&gt;
先掛載 root 區 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# mount /dev/sdaX /mnt
&lt;/pre&gt;

&lt;p&gt;
再掛載其他分區，/home 最好獨立分區。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# mkdir /mnt/home
# mount /dev/sda1 /mnt/home
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4" class="outline-3"&gt;
&lt;h3 id="sec-4-4"&gt;&lt;span class="section-number-3"&gt;4.4&lt;/span&gt; 建立 swap&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-4"&gt;
&lt;p&gt;
現在的 RAM 都很大，這個可以不用裝了。目前安裝了 16G 的 RAM。
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4-1" class="outline-4"&gt;
&lt;h4 id="sec-4-4-1"&gt;&lt;span class="section-number-4"&gt;4.4.1&lt;/span&gt; 建立 swap file&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-4-1"&gt;
&lt;p&gt;
如果真的要裝 swap，可用檔案取代，方便好管理。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# fallocate -l 16G /swapfile
# sudo chmod 600 /swapfile
# mkswap /swapfile
# sudo mkswap /swapfile
# swapon /swpfile
# sudo swapon /swapfile
# sudo nano /etc/fstab
&lt;/pre&gt;

&lt;p&gt;
在 fstab 中加入 :
&lt;/p&gt;

&lt;pre class="example"&gt;
/swapfile none swap defaults 0 0
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4-4-2" class="outline-4"&gt;
&lt;h4 id="sec-4-4-2"&gt;&lt;span class="section-number-4"&gt;4.4.2&lt;/span&gt; Remove swap file&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-4-2"&gt;
&lt;p&gt;
如果不用 swap，刪了就是。
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Warning:&lt;/b&gt; swap is managed by systemd and will be reenabled by it after
some time. To remove a swap file, the current swap file must be turned
off. :
&lt;/p&gt;

&lt;pre class="example"&gt;
# swapoff -a
# rm -f /swapfile
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 配置安裝的環境&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-5-1" class="outline-3"&gt;
&lt;h3 id="sec-5-1"&gt;&lt;span class="section-number-3"&gt;5.1&lt;/span&gt; DNS setup (可不做)&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-1"&gt;
&lt;pre class="example"&gt;
# nano /etc/resolv.conf

nameserver 168.95.1.1
nameserver 8.8.8.8
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5-2" class="outline-3"&gt;
&lt;h3 id="sec-5-2"&gt;&lt;span class="section-number-3"&gt;5.2&lt;/span&gt; 選擇安裝鏡像&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-5-2"&gt;
&lt;p&gt;
安裝前需要編輯 /etc/pacman.d/mirrorlist，將最想使用的鏡像放到前面。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/pacman.d/mirrorlist
&lt;/pre&gt;

&lt;p&gt;
nano 簡單指令 :
&lt;/p&gt;

&lt;pre class="example"&gt;
Alt-6: copy line
C-u:   paste
C-x:   exit
&lt;/pre&gt;

&lt;p&gt;
原則上，改過 mirrorlist 就執行以下指令(可不做)： :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -Syy
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; 安裝基本系統&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;pre class="example"&gt;
# pacstrap -i /mnt base base-devel
&lt;/pre&gt;

&lt;p&gt;
if pacman complains that error: :
&lt;/p&gt;

&lt;pre class="example"&gt;
failed to commit transaction (invalid or corrupted package)
&lt;/pre&gt;

&lt;p&gt;
run the following command: :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman-key --init &amp;amp;&amp;amp; pacman-key --populate archlinux
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-1" class="outline-3"&gt;
&lt;h3 id="sec-6-1"&gt;&lt;span class="section-number-3"&gt;6.1&lt;/span&gt; 生成 fstab&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-1"&gt;
&lt;p&gt;
這個一定要做，不然後頭會很麻煩。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# genfstab -U -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
# nano /mnt/etc/fstab   # 檢查一下 fstab
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-2" class="outline-3"&gt;
&lt;h3 id="sec-6-2"&gt;&lt;span class="section-number-3"&gt;6.2&lt;/span&gt; Chroot 到新系統，並作基本配置&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-2"&gt;
&lt;pre class="example"&gt;
$ arch-chroot /mnt /bin/bash
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-3" class="outline-3"&gt;
&lt;h3 id="sec-6-3"&gt;&lt;span class="section-number-3"&gt;6.3&lt;/span&gt; 配置 pacman&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-3"&gt;
&lt;pre class="example"&gt;
# nano /etc/pacman.conf
&lt;/pre&gt;

&lt;p&gt;
爲了安裝 yaourt，到最後空白處加上： :
&lt;/p&gt;

&lt;pre class="example"&gt;
[archlinuxfr]
SigLevel = Never    # add: 2013/04/28
Server = http://repo.archlinux.fr/$arch
&lt;/pre&gt;

&lt;p&gt;
一般使用者用 [core], [extra] 與 [community]。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-4" class="outline-3"&gt;
&lt;h3 id="sec-6-4"&gt;&lt;span class="section-number-3"&gt;6.4&lt;/span&gt; 更新系統，並安裝 yaourt&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-4"&gt;
&lt;pre class="example"&gt;
# pacman -Syu
# pacman -S yaourt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5" class="outline-3"&gt;
&lt;h3 id="sec-6-5"&gt;&lt;span class="section-number-3"&gt;6.5&lt;/span&gt; 配置系統 Locale&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-5"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ nano /etc/locale.gen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-1" class="outline-4"&gt;
&lt;h4 id="sec-6-5-1"&gt;&lt;span class="section-number-4"&gt;6.5.1&lt;/span&gt; 找到&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-1"&gt;
&lt;blockquote&gt;
&lt;p&gt;
en&lt;sub&gt;US&lt;/sub&gt;.UTF-8 UTF-8
zh&lt;sub&gt;TW&lt;/sub&gt;.UTF-8 UTF-8
zh&lt;sub&gt;CN&lt;/sub&gt;.UTF-8 UTF-8
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
把以上全部打開。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-2" class="outline-4"&gt;
&lt;h4 id="sec-6-5-2"&gt;&lt;span class="section-number-4"&gt;6.5.2&lt;/span&gt; 使 locale 生效&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-2"&gt;
&lt;pre class="example"&gt;
$ locale-gen    #使更改生效運行
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-3" class="outline-4"&gt;
&lt;h4 id="sec-6-5-3"&gt;&lt;span class="section-number-4"&gt;6.5.3&lt;/span&gt; 確認一下 locale&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-3"&gt;
&lt;pre class="example"&gt;
$ locale -a     #確認一下開啟的 locale
$ locale        #目前的 locale
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-5-4" class="outline-4"&gt;
&lt;h4 id="sec-6-5-4"&gt;&lt;span class="section-number-4"&gt;6.5.4&lt;/span&gt; 全域 locale 設定：對整個系統有效&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5-4"&gt;
&lt;pre class="example"&gt;
$ nano /etc/locale.conf

LANG=en_US.UTF-8
&lt;/pre&gt;

&lt;p&gt;
主控台用英文，否則出現方塊字，是看不懂它的意思。等進 X 後再改成中文。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-6" class="outline-3"&gt;
&lt;h3 id="sec-6-6"&gt;&lt;span class="section-number-3"&gt;6.6&lt;/span&gt; 更改 console 字型&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-6"&gt;
&lt;p&gt;
把字改大一點，眼睛比較不吃力。先安裝字型，再設定字型。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pacman -S terminus-font
setconsolefont ter-128n
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The FONT variable in &lt;kbd&gt;/etc/vconsole.conf&lt;/kbd&gt; is used to set the font at boot, persistently for all consoles.&lt;sup&gt;&lt;a id="fnr.1" name="fnr.1" class="footref" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/vconsole.conf
...
&lt;span class="nv"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ter-128n
&lt;span class="nv"&gt;FONT_MAP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8859&lt;/span&gt;-1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
ISO 8859-1，正式編號為 ISO/IEC 8859-1:1998，又稱 Latin-1 或「西歐語言」&lt;sup&gt;&lt;a id="fnr.2" name="fnr.2" class="footref" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-7" class="outline-3"&gt;
&lt;h3 id="sec-6-7"&gt;&lt;span class="section-number-3"&gt;6.7&lt;/span&gt; 配置系統時區&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-7"&gt;
&lt;p&gt;
可用的時區位於目錄&lt;i&gt;usr/share/zoneinfo&lt;/i&gt;下，可以 ls 一下。用以下指令配置系統時區：
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -s /usr/share/zoneinfo/Asia/Taipei /etc/localtime
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-8" class="outline-3"&gt;
&lt;h3 id="sec-6-8"&gt;&lt;span class="section-number-3"&gt;6.8&lt;/span&gt; 時間調整&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-8"&gt;
&lt;p&gt;
為了與 windows 雙重開機 (dual boot)，最好做以下動作：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;修改 windows 的登錄檔，用 regedit 加上一個 DWORD(32 bits) 的機碼
RealTimeIsUniversal，將其值設為 1，位置如下:

&lt;pre class="example"&gt;
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation\RealTimeIsUniversal
&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;在 windows 中關掉「網路自動對時」的功能。
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
當然，以上的動作要回到 windows 才能執行。
&lt;/p&gt;

&lt;p&gt;
在 linux 中，只需執行： :
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;timedatectl set-local-rtc &lt;span class="nb"&gt;false&lt;/span&gt;
timedatectl set-ntp &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
並將 utc 時間寫入 BIOS 中即可。
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hwclock --systohc --utc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6-9" class="outline-3"&gt;
&lt;h3 id="sec-6-9"&gt;&lt;span class="section-number-3"&gt;6.9&lt;/span&gt; 設置主機名稱&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-6-9"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nano /etc/hostname
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
加入
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
hostname
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; 再一次設定網路&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;p&gt;
簡單啓動 dhcpcd :
&lt;/p&gt;

&lt;pre class="example"&gt;
# systemctl enable dhcpcd
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-1" class="outline-3"&gt;
&lt;h3 id="sec-7-1"&gt;&lt;span class="section-number-3"&gt;7.1&lt;/span&gt; WIFI&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-1"&gt;
&lt;p&gt;
用 netctl 啓動 wifi
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7-2" class="outline-3"&gt;
&lt;h3 id="sec-7-2"&gt;&lt;span class="section-number-3"&gt;7.2&lt;/span&gt; ADSL&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-7-2"&gt;
&lt;p&gt;
如果要用 ADSL，則這個很重要，不然重開機時，就會沒網路可用。
&lt;/p&gt;

&lt;p&gt;
install the network card that is supposed to be connected to the
DSL-Modem into your computer. After adding your newly installed
network card to the modules.conf/modprobe.conf install therp-pppoe
package :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S rp-pppoe
$ pppoe-setup
&lt;/pre&gt;

&lt;p&gt;
run the pppoe-setup script to configure your connection After you have
entered all the data, you can connect and disconnect your line with :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl start adsl
&lt;/pre&gt;

&lt;p&gt;
and :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl stop adsl
&lt;/pre&gt;

&lt;p&gt;
respectively. The setup is usually easy and straightforward, but feel
free to read the manpages for hints. If you want to automatically 'dial
in' at boot, issue command :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ systemctl enable adsl

or

$ systemctl disable adsl
&lt;/pre&gt;

&lt;p&gt;
to remove auto 'dial in' at boot.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; mkinitcpio&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;p&gt;
增加 lvm2 到 hooks 後，執行&lt;kbd&gt;mkinitcpio&lt;/kbd&gt; :
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/mkinitcpio.conf

HOOKS=(... udev ... block lvm2 filesystems ...)

# mkinitcpio -p linux
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9" class="outline-2"&gt;
&lt;h2 id="sec-9"&gt;&lt;span class="section-number-2"&gt;9&lt;/span&gt; Install and configure a bootloader&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-9"&gt;
&lt;p&gt;
Install the grub-bios package and then run grub-install: :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S grub-bios                       ## 安裝 grub-bios
# grub-install --target=i386-pc --recheck /dev/sda  ## 安裝到 boot 區
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-1" class="outline-3"&gt;
&lt;h3 id="sec-9-1"&gt;&lt;span class="section-number-3"&gt;9.1&lt;/span&gt; 自動尋找其它的 OS&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-1"&gt;
&lt;p&gt;
如果有其他的 OS，這個就很重要。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S os-prober
&lt;/pre&gt;

&lt;p&gt;
或是直接在 /etc/grub.d/40\&lt;sub&gt;custom&lt;/sub&gt;加上以下指令 :
&lt;/p&gt;

&lt;pre class="example"&gt;
menuentry "Windows 10" --class windows --class os {
  insmod ntfs
  search --no-floppy --set=root --fs-uuid $your_uuid_here$
  ntldr /bootmgr
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-2" class="outline-3"&gt;
&lt;h3 id="sec-9-2"&gt;&lt;span class="section-number-3"&gt;9.2&lt;/span&gt; 安裝 microcode&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-2"&gt;
&lt;p&gt;
這步要在 grub-mkconfig 之前做 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# pacman -S intel-ucode
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9-3" class="outline-3"&gt;
&lt;h3 id="sec-9-3"&gt;&lt;span class="section-number-3"&gt;9.3&lt;/span&gt; 自動產生 grub.cfg&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-9-3"&gt;
&lt;p&gt;
這個一定要做，不然重開機時，就等著進 grub shell，很麻煩。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10" class="outline-2"&gt;
&lt;h2 id="sec-10"&gt;&lt;span class="section-number-2"&gt;10&lt;/span&gt; 重啓&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-10"&gt;
&lt;pre class="example"&gt;
# exit
# umount /mnt
# reboot
&lt;/pre&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10-1" class="outline-3"&gt;
&lt;h3 id="sec-10-1"&gt;&lt;span class="section-number-3"&gt;10.1&lt;/span&gt; 確認網路連線&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-10-1"&gt;
&lt;p&gt;
root 重啓後，ping 一下看看網路連上了嗎？如果沒有，手動連線。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
  # ping 8.8.8.8
  # systemctl start dhcpcd
或
  # netctl start &amp;lt;wifi-profile-name&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-10-2" class="outline-3"&gt;
&lt;h3 id="sec-10-2"&gt;&lt;span class="section-number-3"&gt;10.2&lt;/span&gt; update system（可不做）&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-10-2"&gt;
&lt;pre class="example"&gt;
# pacman -Syu
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11" class="outline-2"&gt;
&lt;h2 id="sec-11"&gt;&lt;span class="section-number-2"&gt;11&lt;/span&gt; post-installation&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-11"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-11-1" class="outline-3"&gt;
&lt;h3 id="sec-11-1"&gt;&lt;span class="section-number-3"&gt;11.1&lt;/span&gt; 設置 Root 密碼並創建一般用戶&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-1"&gt;
&lt;pre class="example"&gt;
$ passwd
$ useradd -m -s /bin/bash  -g users -G video,storage,optical,lp,scanner,games,wheel username
$ passwd username
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-2" class="outline-3"&gt;
&lt;h3 id="sec-11-2"&gt;&lt;span class="section-number-3"&gt;11.2&lt;/span&gt; 安裝 Sudo&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-2"&gt;
&lt;pre class="example"&gt;
$ pacman -S sudo
$ EDITOR=nano visudo
&lt;/pre&gt;

&lt;p&gt;
允許 wheel 用戶組成員無密碼使用 sudo： :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ visudo
&lt;/pre&gt;
&lt;/div&gt;

&lt;ol class="org-ol"&gt;&lt;li&gt;&lt;a id="sec-11-2-0-1" name="sec-11-2-0-1"&gt;&lt;/a&gt;輸入&lt;br&gt;&lt;div class="outline-text-5" id="text-11-2-0-1"&gt;
&lt;blockquote&gt;
&lt;p&gt;
%wheel ALL=(ALL) NOPASSWD:ALL
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
再來是設定 sudo，隨便找一個空白行加上： :
&lt;/p&gt;

&lt;pre class="example"&gt;
username ALL=(ALL) ALL
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-3" class="outline-3"&gt;
&lt;h3 id="sec-11-3"&gt;&lt;span class="section-number-3"&gt;11.3&lt;/span&gt; 登出，並以新的用戶名稱登入&lt;/h3&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-11-4" class="outline-3"&gt;
&lt;h3 id="sec-11-4"&gt;&lt;span class="section-number-3"&gt;11.4&lt;/span&gt; 設定聲音 alas&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-4"&gt;
&lt;p&gt;
安裝音效驅動，直接用 alas，不要考慮太多。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S alsa-utils
&lt;/pre&gt;

&lt;p&gt;
將帳號加入音效使用權： :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ sudo gpasswd -a username audio
&lt;/pre&gt;

&lt;p&gt;
alsa 預設是靜音，以 alsamixer 手動打開聲音 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ alsamixer
&lt;/pre&gt;

&lt;p&gt;
或者命令列直接開啓 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ amixer sset Master unmute
&lt;/pre&gt;

&lt;p&gt;
測試一下有沒有聲音 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ speaker-test -c 2
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-5" class="outline-3"&gt;
&lt;h3 id="sec-11-5"&gt;&lt;span class="section-number-3"&gt;11.5&lt;/span&gt; 安裝 x11&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-5"&gt;
&lt;pre class="example"&gt;
# pacman -S xorg-{server,apps} mesa
&lt;/pre&gt;

&lt;p&gt;
因為要用 xlogin，所以&lt;kbd&gt;xorg-xinit&lt;/kbd&gt;可以不用裝了。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-6" class="outline-3"&gt;
&lt;h3 id="sec-11-6"&gt;&lt;span class="section-number-3"&gt;11.6&lt;/span&gt; 裝顯卡驅動&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-6"&gt;
&lt;p&gt;
ATi 用戶：
&lt;/p&gt;

&lt;p&gt;
直接裝開源驅動
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-amdgpu
&lt;/pre&gt;

&lt;p&gt;
或是用舊的
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-ati
&lt;/pre&gt;

&lt;p&gt;
intel 用戶：
&lt;/p&gt;

&lt;pre class="example"&gt;
$ pacman -S xf86-video-intel libav-intel-driver
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-7" class="outline-3"&gt;
&lt;h3 id="sec-11-7"&gt;&lt;span class="section-number-3"&gt;11.7&lt;/span&gt; 安裝字體&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-7"&gt;
&lt;p&gt;
加上 ttf-liberation 修正部份 PDF 字型，此為 google-chrome 新的依賴。
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S ttf-tw ttf-dejavu ttf-liberation
$ yaourt -S adobe-source-{code,sans,serif}-pro-fonts adobe-source-han-{sans,serif}-{cn,jp,kr,otc,tw}-fonts
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-8" class="outline-3"&gt;
&lt;h3 id="sec-11-8"&gt;&lt;span class="section-number-3"&gt;11.8&lt;/span&gt; 讓 X 可以顯示中文&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-8"&gt;
&lt;pre class="example"&gt;
$ nano ~/.xinitrc

 export LANG=zh_TW.UTF-8
 export LC_ALL="zh_TW.UTF-8"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-9" class="outline-3"&gt;
&lt;h3 id="sec-11-9"&gt;&lt;span class="section-number-3"&gt;11.9&lt;/span&gt; 將右邊的數字鍵盤預設爲方向鍵&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-9"&gt;
&lt;pre class="example"&gt;
$ yaourt -S numlockx

$ nano ~/.xinitrc

numlockx &amp;amp;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-10" class="outline-3"&gt;
&lt;h3 id="sec-11-10"&gt;&lt;span class="section-number-3"&gt;11.10&lt;/span&gt; 安裝桌面&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-10"&gt;
&lt;p&gt;
目前使用 lxqt + xmonad。lxqt
&lt;/p&gt;

&lt;p&gt;
安裝 lxqt:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S lxqt
&lt;/pre&gt;

&lt;p&gt;
先修改&lt;kbd&gt;pacman.conf&lt;/kbd&gt;:
&lt;/p&gt;

&lt;pre class="example"&gt;
# nano /etc/pacman.conf
&lt;/pre&gt;

&lt;p&gt;
然後在&lt;kbd&gt;[community]&lt;/kbd&gt;之前加上:
&lt;/p&gt;

&lt;pre class="example"&gt;
[haskell-core]
Server = http://xsounds.org/~haskell/core/$arch
&lt;/pre&gt;

&lt;p&gt;
接著才可安裝 xmonad 和 taffybar:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S haskell-xmonad haskell-xmonad-contrib haskell-taffybar
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-11" class="outline-3"&gt;
&lt;h3 id="sec-11-11"&gt;&lt;span class="section-number-3"&gt;11.11&lt;/span&gt; theme&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-11"&gt;
&lt;p&gt;
Using Breeze theme and Flat Remix icon theme:
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S breeze{,-kde4,-gtk} flat-remix-git lxappearance
&lt;/pre&gt;

&lt;p&gt;
進 lxappearance 設定 theme and icon theme
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-12" class="outline-3"&gt;
&lt;h3 id="sec-11-12"&gt;&lt;span class="section-number-3"&gt;11.12&lt;/span&gt; 安裝中文輸入法&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-12"&gt;
&lt;p&gt;
沒有其它選擇，就用 fcitx。ibusfcitxshu-ru-fa-she-ding :
&lt;/p&gt;

&lt;pre class="example"&gt;
yaourt -S fcitx-im fcitx-configtool fcitx-chewing
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-13" class="outline-3"&gt;
&lt;h3 id="sec-11-13"&gt;&lt;span class="section-number-3"&gt;11.13&lt;/span&gt; install google chrome&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-13"&gt;
&lt;pre class="example"&gt;
$ yaourt -S google-chrome
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-11-14" class="outline-3"&gt;
&lt;h3 id="sec-11-14"&gt;&lt;span class="section-number-3"&gt;11.14&lt;/span&gt; 安裝文字編輯器&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-11-14"&gt;
&lt;p&gt;
現在已經沒有別的選擇了，只能用 emacs
這個神的編輯器，因為她實在是太強大了， 讓我不忍放棄她。 :
&lt;/p&gt;

&lt;pre class="example"&gt;
$ yaourt -S emacs
&lt;/pre&gt;

&lt;p&gt;
可用的系統成型了，但是， 後面&amp;lt;post-installation-of-archlinux&amp;gt;
還有許多需要再調整的。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-12" class="outline-2"&gt;
&lt;h2 id="sec-12"&gt;&lt;span class="section-number-2"&gt;12&lt;/span&gt; issues&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-12"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-12-1" class="outline-3"&gt;
&lt;h3 id="sec-12-1"&gt;&lt;span class="section-number-3"&gt;12.1&lt;/span&gt; kvm:disable by bios&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-12-1"&gt;
&lt;p&gt;
iVT enable @ bios
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" name="fn.1" class="footnum" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="https://wiki.archlinux.org/index.php/Fonts#Console_fonts"&gt;https://wiki.archlinux.org/index.php/Fonts#Console_fonts&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" name="fn.2" class="footnum" href="https://mariolong.github.io/posts/install-arch-linux-2017/#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;p class="footpara"&gt;
&lt;a href="https://zh.wikipedia.org/wiki/ISO/IEC_8859-1"&gt;https://zh.wikipedia.org/wiki/ISO/IEC_8859-1&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;</description><category>linux</category><guid>https://mariolong.github.io/posts/install-arch-linux-2017/</guid><pubDate>Mon, 20 Nov 2017 09:00:00 GMT</pubDate></item></channel></rss>